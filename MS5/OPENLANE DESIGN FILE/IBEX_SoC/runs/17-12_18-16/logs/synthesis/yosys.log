
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Liberty frontend.
Imported 428 cell types from liberty file.

2. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/spi_master.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/spi_master.v' to AST representation.
Generating RTLIL representation for module `\spi_master'.
Generating RTLIL representation for module `\sri'.
Generating RTLIL representation for module `\sro'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_latch.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_latch.v' to AST representation.
Generating RTLIL representation for module `\ibex_register_file_latch'.
Warning: Replacing memory \mem with list of registers. See /openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_latch.v:111, /openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_latch.v:87
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/PWM.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/PWM.v' to AST representation.
Generating RTLIL representation for module `\PWM32'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_dummy_instr.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_dummy_instr.v' to AST representation.
Generating RTLIL representation for module `\ibex_dummy_instr'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v' to AST representation.
Generating RTLIL representation for module `\AHBlite_GPIO'.
/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:63: Warning: Range [23:0] select out of bounds on signal `\HADDR': Setting 2 LSB bits to undef.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ana.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ana.v' to AST representation.
Generating RTLIL representation for module `\ana'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_pmp.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_pmp.v' to AST representation.
Generating RTLIL representation for module `\ibex_pmp'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v' to AST representation.
Generating RTLIL representation for module `\ibex_csr'.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/prim_clock_gating.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/prim_clock_gating.v' to AST representation.
Generating RTLIL representation for module `\prim_clock_gating'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v' to AST representation.
Generating RTLIL representation for module `\ibex_prefetch_buffer'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_if_stage'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v' to AST representation.
Generating RTLIL representation for module `\ibex_register_file_ff'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v' to AST representation.
Generating RTLIL representation for module `\AHBSRAM'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v' to AST representation.
Generating RTLIL representation for module `\QSPIXIP'.
Warning: Replacing memory \CD with list of registers. See /openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:87
Warning: Replacing memory \CT with list of registers. See /openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:86
Generating RTLIL representation for module `\QSIXIP_INIT'.
Generating RTLIL representation for module `\QSIXIP_RUN'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v' to AST representation.
Generating RTLIL representation for module `\ibex_fetch_fifo'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/soc_core_m1_b1.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/soc_core_m1_b1.v' to AST representation.
Generating RTLIL representation for module `\soc_core_m1_b1'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v' to AST representation.
Generating RTLIL representation for module `\ibex_decoder'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/IBEX_SoC.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/IBEX_SoC.v' to AST representation.
Generating RTLIL representation for module `\IBEX_SoC'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_icache.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_icache.v' to AST representation.
Generating RTLIL representation for module `\ibex_icache'.
Warning: Replacing memory \fill_data_q with list of registers. See /openLANE_flow/designs/IBEX_SoC/src/ibex_icache.v:509
Warning: Replacing memory \fill_way_q with list of registers. See /openLANE_flow/designs/IBEX_SoC/src/ibex_icache.v:496
Warning: Replacing memory \fill_addr_q with list of registers. See /openLANE_flow/designs/IBEX_SoC/src/ibex_icache.v:493
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/AHBlite_sys_0.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/AHBlite_sys_0.v' to AST representation.
Generating RTLIL representation for module `\AHBlite_sys_0'.
/openLANE_flow/designs/IBEX_SoC/src/AHBlite_sys_0.v:0: Warning: System task `$display' outside initial block is unsupported.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v' to AST representation.
Generating RTLIL representation for module `\ibex_cs_registers'.
Warning: Replacing memory \mhpmevent with list of registers. See /openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1122
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_ex_block.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_ex_block.v' to AST representation.
Generating RTLIL representation for module `\ibex_ex_block'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_branch_predict.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_branch_predict.v' to AST representation.
Generating RTLIL representation for module `\ibex_branch_predict'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_compressed_decoder.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_compressed_decoder.v' to AST representation.
Generating RTLIL representation for module `\ibex_compressed_decoder'.
Successfully finished Verilog frontend.

26. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/APB_sys_0.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/APB_sys_0.v' to AST representation.
Generating RTLIL representation for module `\apb_sys_0'.
Successfully finished Verilog frontend.

27. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/do.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/do.v' to AST representation.
Generating RTLIL representation for module `\do'.
Successfully finished Verilog frontend.

28. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v' to AST representation.
Generating RTLIL representation for module `\ahb_2_apb'.
Note: Assuming pure combinatorial block at /openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:87.3-118.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:133.3-145.6 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

29. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_slow.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_slow.v' to AST representation.
Generating RTLIL representation for module `\ibex_multdiv_slow'.
Successfully finished Verilog frontend.

30. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/apb2spi.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v' to AST representation.
Generating RTLIL representation for module `\APB2SPI'.
Successfully finished Verilog frontend.

31. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v' to AST representation.
Generating RTLIL representation for module `\ibex_multdiv_fast'.
Successfully finished Verilog frontend.

32. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/TIMER32.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v' to AST representation.
Generating RTLIL representation for module `\TIMER32'.
Successfully finished Verilog frontend.

33. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v' to AST representation.
Generating RTLIL representation for module `\ibex_counter'.
Successfully finished Verilog frontend.

34. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/i2c_slave_vip.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/i2c_slave_vip.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (/openLANE_flow/designs/IBEX_SoC/src/i2c_slave_vip.v:25)
Warning: Yosys has only limited support for tri-state logic at the moment. (/openLANE_flow/designs/IBEX_SoC/src/i2c_slave_vip.v:26)
Generating RTLIL representation for module `\i2c_slave_vip'.
Successfully finished Verilog frontend.

35. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_wb_stage.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_wb_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_wb_stage'.
Successfully finished Verilog frontend.

36. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v' to AST representation.
Generating RTLIL representation for module `\APB_TIMER32'.
Successfully finished Verilog frontend.

37. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/APB_bus0.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/APB_bus0.v' to AST representation.
Generating RTLIL representation for module `\APB_BUS0'.
Successfully finished Verilog frontend.

38. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v' to AST representation.
Generating RTLIL representation for module `\ibex_load_store_unit'.
Successfully finished Verilog frontend.

39. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_id_stage'.
Successfully finished Verilog frontend.

40. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v' to AST representation.
Generating RTLIL representation for module `\AHBlite_BUS0'.
Successfully finished Verilog frontend.

41. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/GPIO.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/GPIO.v' to AST representation.
Generating RTLIL representation for module `\GPIO'.
Successfully finished Verilog frontend.

42. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v' to AST representation.
Generating RTLIL representation for module `\APB_PWM32'.
Successfully finished Verilog frontend.

43. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/di.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/di.v' to AST representation.
Generating RTLIL representation for module `\di'.
Successfully finished Verilog frontend.

44. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_core.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v' to AST representation.
Generating RTLIL representation for module `\ibex_core'.
Successfully finished Verilog frontend.

45. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v' to AST representation.
Generating RTLIL representation for module `\openstriVe_soc_mem'.
Successfully finished Verilog frontend.

46. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v' to AST representation.
Generating RTLIL representation for module `\IBEX_wrapper'.
Successfully finished Verilog frontend.

47. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v' to AST representation.
Generating RTLIL representation for module `\ibex_alu'.
Successfully finished Verilog frontend.

48. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/dio.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/dio.v' to AST representation.
Warning: Yosys has only limited support for tri-state logic at the moment. (/openLANE_flow/designs/IBEX_SoC/src/dio.v:11)
Generating RTLIL representation for module `\dio'.
Successfully finished Verilog frontend.

49. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v' to AST representation.
Generating RTLIL representation for module `\ibex_controller'.
Successfully finished Verilog frontend.

50. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/apb2i2c.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/apb2i2c.v' to AST representation.
Generating RTLIL representation for module `\APB2I2C'.
Successfully finished Verilog frontend.

51. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/i2c.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/i2c.v' to AST representation.
Warning: Found one of those horrible `(synopsys|synthesis) full_case' comments.
Yosys does support them but it is recommended to use Verilog `full_case' attributes instead!
Warning: Found one of those horrible `(synopsys|synthesis) parallel_case' comments.
Yosys does support them but it is recommended to use Verilog `parallel_case' attributes instead!
Generating RTLIL representation for module `\i2c_master_bit_ctrl'.
Generating RTLIL representation for module `\i2c_master_byte_ctrl'.
Generating RTLIL representation for module `\i2c_master'.
Successfully finished Verilog frontend.

52. Executing Verilog-2005 frontend: /openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v
Parsing Verilog input from `/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v' to AST representation.
Generating RTLIL representation for module `\AHBlite_db_reg'.
/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:47: Warning: Range [23:0] select out of bounds on signal `\HADDR': Setting 2 LSB bits to undef.
Successfully finished Verilog frontend.

53. Executing HIERARCHY pass (managing design hierarchy).

53.1. Analyzing design hierarchy..
Top module:  \IBEX_SoC
Used module:     \soc_core_m1_b1
Used module:         \IBEX_wrapper
Used module:             \ibex_core
Used module:                 \ibex_register_file_ff
Used module:                 \ibex_cs_registers
Used module:                     \ibex_counter
Used module:                     \ibex_csr
Used module:                 \ibex_wb_stage
Used module:                 \ibex_load_store_unit
Used module:                 \ibex_ex_block
Used module:                     \ibex_multdiv_fast
Used module:                     \ibex_alu
Used module:                 \ibex_id_stage
Used module:                     \ibex_controller
Used module:                     \ibex_decoder
Used module:                 \ibex_if_stage
Used module:                     \ibex_prefetch_buffer
Used module:                         \ibex_fetch_fifo
Used module:                     \ibex_compressed_decoder
Used module:                 \prim_clock_gating
Used module:         \openstriVe_soc_mem
Used module:         \AHBlite_sys_0
Used module:             \apb_sys_0
Used module:                 \APB_BUS0
Used module:                 \APB_TIMER32
Used module:                 \TIMER32
Used module:                 \APB_PWM32
Used module:                 \PWM32
Used module:                 \APB2SPI
Used module:                     \spi_master
Used module:                         \sri
Used module:                         \sro
Used module:                 \APB2I2C
Used module:                     \i2c_master
Used module:                         \i2c_master_byte_ctrl
Used module:                             \i2c_master_bit_ctrl
Used module:                 \ahb_2_apb
Used module:             \AHBlite_BUS0
Used module:             \AHBlite_db_reg
Used module:             \AHBlite_GPIO
Used module:             \GPIO
Used module:             \AHBSRAM
Used module:             \QSPIXIP
Used module:                 \QSIXIP_RUN
Used module:                 \QSIXIP_INIT
Used module:     \do
Used module:     \di
Used module:     \dio
Parameter \DATA_WIDTH = 16

53.2. Executing AST frontend in derive mode using pre-parsed AST for module `\sri'.
Parameter \DATA_WIDTH = 16
Generating RTLIL representation for module `$paramod\sri\DATA_WIDTH=16'.
Parameter \DATA_WIDTH = 16

53.3. Executing AST frontend in derive mode using pre-parsed AST for module `\sro'.
Parameter \DATA_WIDTH = 16
Generating RTLIL representation for module `$paramod\sro\DATA_WIDTH=16'.
Parameter \NUM_REQS = 2

53.4. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_fetch_fifo'.
Parameter \NUM_REQS = 2
Generating RTLIL representation for module `$paramod\ibex_fetch_fifo\NUM_REQS=2'.
Parameter \BranchPredictor = 1'0

53.5. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_prefetch_buffer'.
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0'.
Parameter \PORT0_ENABLE = 1
Parameter \PORT1_ENABLE = 1
Parameter \PORT2_ENABLE = 1
Parameter \PORT3_ENABLE = 1
Parameter \PORT4_ENABLE = 0
Parameter \PORT5_ENABLE = 0
Parameter \PORT6_ENABLE = 0
Parameter \PORT7_ENABLE = 0
Parameter \PORT8_ENABLE = 0
Parameter \PORT9_ENABLE = 0
Parameter \PORT10_ENABLE = 0
Parameter \PORT11_ENABLE = 0
Parameter \PORT12_ENABLE = 0
Parameter \PORT13_ENABLE = 0
Parameter \PORT14_ENABLE = 0
Parameter \PORT15_ENABLE = 0

53.6. Executing AST frontend in derive mode using pre-parsed AST for module `\APB_BUS0'.
Parameter \PORT0_ENABLE = 1
Parameter \PORT1_ENABLE = 1
Parameter \PORT2_ENABLE = 1
Parameter \PORT3_ENABLE = 1
Parameter \PORT4_ENABLE = 0
Parameter \PORT5_ENABLE = 0
Parameter \PORT6_ENABLE = 0
Parameter \PORT7_ENABLE = 0
Parameter \PORT8_ENABLE = 0
Parameter \PORT9_ENABLE = 0
Parameter \PORT10_ENABLE = 0
Parameter \PORT11_ENABLE = 0
Parameter \PORT12_ENABLE = 0
Parameter \PORT13_ENABLE = 0
Parameter \PORT14_ENABLE = 0
Parameter \PORT15_ENABLE = 0
Generating RTLIL representation for module `$paramod$19f5bbc4965ce45d2361eefc3ea15bde1a26c26f\APB_BUS0'.
Parameter \CounterWidth = 40

53.7. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_counter'.
Parameter \CounterWidth = 40
Generating RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0

53.8. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Generating RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \CounterWidth = 64

53.9. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_counter'.
Parameter \CounterWidth = 64
Generating RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \CounterWidth = 64
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0

53.10. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Generating RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 3
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 3'100

53.11. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 3
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 3'100
Generating RTLIL representation for module `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1073741827

53.12. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1073741827
Generating RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1

53.13. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1
Generating RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 18
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0

53.14. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 18
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Generating RTLIL representation for module `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 6'010000

53.15. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 6'010000
Generating RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000'.
Parameter \RV32M = 2

53.16. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_multdiv_fast'.
Parameter \RV32M = 2
Generating RTLIL representation for module `$paramod\ibex_multdiv_fast\RV32M=2'.
Parameter \RV32B = 0

53.17. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_alu'.
Parameter \RV32B = 0
Generating RTLIL representation for module `$paramod\ibex_alu\RV32B=0'.
Parameter \DATA_WIDTH = 8
Parameter \CLK_DIVIDER_WIDTH = 8

53.18. Executing AST frontend in derive mode using pre-parsed AST for module `\spi_master'.
Parameter \DATA_WIDTH = 8
Parameter \CLK_DIVIDER_WIDTH = 8
Generating RTLIL representation for module `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8'.
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0

53.19. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_controller'.
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0

53.20. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_decoder'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0
Generating RTLIL representation for module `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0'.
Parameter \RV32E = 1'0
Parameter \DataWidth = 32
Parameter \DummyInstructions = 1'0

53.21. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_register_file_ff'.
Parameter \RV32E = 1'0
Parameter \DataWidth = 32
Parameter \DummyInstructions = 1'0
Generating RTLIL representation for module `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0'.
Parameter \DbgTriggerEn = 1'0
Parameter \DbgHwBreakNum = 1
Parameter \DataIndTiming = 1'0
Parameter \DummyInstructions = 1'0
Parameter \ShadowCSR = 1'0
Parameter \ICache = 1'0
Parameter \MHPMCounterNum = 0
Parameter \MHPMCounterWidth = 40
Parameter \PMPEnable = 1'0
Parameter \PMPGranularity = 0
Parameter \PMPNumRegions = 4
Parameter \RV32E = 1'0
Parameter \RV32M = 2

53.22. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_cs_registers'.
Parameter \DbgTriggerEn = 1'0
Parameter \DbgHwBreakNum = 1
Parameter \DataIndTiming = 1'0
Parameter \DummyInstructions = 1'0
Parameter \ShadowCSR = 1'0
Parameter \ICache = 1'0
Parameter \MHPMCounterNum = 0
Parameter \MHPMCounterWidth = 40
Parameter \PMPEnable = 1'0
Parameter \PMPGranularity = 0
Parameter \PMPNumRegions = 4
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Generating RTLIL representation for module `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers'.
Warning: Replacing memory \mhpmevent with list of registers. See /openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1122
Parameter \WritebackStage = 1'0

53.23. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_wb_stage'.
Parameter \WritebackStage = 1'0
Generating RTLIL representation for module `$paramod\ibex_wb_stage\WritebackStage=1'0'.
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0

53.24. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_ex_block'.
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0
Generating RTLIL representation for module `$paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \DataIndTiming = 1'0
Parameter \BranchTargetALU = 1'0
Parameter \SpecBranch = 1'0
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0

53.25. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_id_stage'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \DataIndTiming = 1'0
Parameter \BranchTargetALU = 1'0
Parameter \SpecBranch = 1'0
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage'.
Parameter \DmHaltAddr = 437323776
Parameter \DmExceptionAddr = 437323784
Parameter \DummyInstructions = 1'0
Parameter \ICache = 1'0
Parameter \ICacheECC = 1'0
Parameter \PCIncrCheck = 1'0
Parameter \BranchPredictor = 1'0

53.26. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_if_stage'.
Parameter \DmHaltAddr = 437323776
Parameter \DmExceptionAddr = 437323784
Parameter \DummyInstructions = 1'0
Parameter \ICache = 1'0
Parameter \ICacheECC = 1'0
Parameter \PCIncrCheck = 1'0
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage'.

53.27. Analyzing design hierarchy..
Top module:  \IBEX_SoC
Used module:     \soc_core_m1_b1
Used module:         \IBEX_wrapper
Used module:             \ibex_core
Used module:                 $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:                 $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:                     \ibex_csr
Used module:                     \ibex_counter
Used module:                 $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:                 \ibex_load_store_unit
Used module:                 $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:                     \ibex_multdiv_fast
Used module:                     \ibex_alu
Used module:                 $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:                     \ibex_controller
Used module:                     \ibex_decoder
Used module:                 $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:                     \ibex_prefetch_buffer
Used module:                         $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:                     \ibex_compressed_decoder
Used module:                 \prim_clock_gating
Used module:         \openstriVe_soc_mem
Used module:         \AHBlite_sys_0
Used module:             \apb_sys_0
Used module:                 $paramod$19f5bbc4965ce45d2361eefc3ea15bde1a26c26f\APB_BUS0
Used module:                 \APB_TIMER32
Used module:                 \TIMER32
Used module:                 \APB_PWM32
Used module:                 \PWM32
Used module:                 \APB2SPI
Used module:                     $paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8
Used module:                         \sri
Used module:                         \sro
Used module:                 \APB2I2C
Used module:                     \i2c_master
Used module:                         \i2c_master_byte_ctrl
Used module:                             \i2c_master_bit_ctrl
Used module:                 \ahb_2_apb
Used module:             \AHBlite_BUS0
Used module:             \AHBlite_db_reg
Used module:             \AHBlite_GPIO
Used module:             \GPIO
Used module:             \AHBSRAM
Used module:             \QSPIXIP
Used module:                 \QSIXIP_RUN
Used module:                 \QSIXIP_INIT
Used module:     \do
Used module:     \di
Used module:     \dio
Parameter \DATA_WIDTH = 8

53.28. Executing AST frontend in derive mode using pre-parsed AST for module `\sri'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\sri\DATA_WIDTH=8'.
Parameter \DATA_WIDTH = 8

53.29. Executing AST frontend in derive mode using pre-parsed AST for module `\sro'.
Parameter \DATA_WIDTH = 8
Generating RTLIL representation for module `$paramod\sro\DATA_WIDTH=8'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \CounterWidth = 64
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \CounterWidth = 64
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 3
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 3'100
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1073741827
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 18
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 6'010000
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000'.
Parameter \RV32M = 2
Found cached RTLIL representation for module `$paramod\ibex_multdiv_fast\RV32M=2'.
Parameter \RV32B = 0
Found cached RTLIL representation for module `$paramod\ibex_alu\RV32B=0'.
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0
Found cached RTLIL representation for module `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0
Found cached RTLIL representation for module `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0'.
Parameter \BranchPredictor = 1'0
Found cached RTLIL representation for module `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0'.

53.30. Analyzing design hierarchy..
Top module:  \IBEX_SoC
Used module:     \soc_core_m1_b1
Used module:         \IBEX_wrapper
Used module:             \ibex_core
Used module:                 $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:                 $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:                     $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_counter\CounterWidth=64
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:                     $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:                 $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:                 \ibex_load_store_unit
Used module:                 $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:                     $paramod\ibex_multdiv_fast\RV32M=2
Used module:                     $paramod\ibex_alu\RV32B=0
Used module:                 $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:                     $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:                     $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:                 $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:                     $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:                         \ibex_fetch_fifo
Used module:                     \ibex_compressed_decoder
Used module:                 \prim_clock_gating
Used module:         \openstriVe_soc_mem
Used module:         \AHBlite_sys_0
Used module:             \apb_sys_0
Used module:                 $paramod$19f5bbc4965ce45d2361eefc3ea15bde1a26c26f\APB_BUS0
Used module:                 \APB_TIMER32
Used module:                 \TIMER32
Used module:                 \APB_PWM32
Used module:                 \PWM32
Used module:                 \APB2SPI
Used module:                     $paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8
Used module:                         $paramod\sri\DATA_WIDTH=8
Used module:                         $paramod\sro\DATA_WIDTH=8
Used module:                 \APB2I2C
Used module:                     \i2c_master
Used module:                         \i2c_master_byte_ctrl
Used module:                             \i2c_master_bit_ctrl
Used module:                 \ahb_2_apb
Used module:             \AHBlite_BUS0
Used module:             \AHBlite_db_reg
Used module:             \AHBlite_GPIO
Used module:             \GPIO
Used module:             \AHBSRAM
Used module:             \QSPIXIP
Used module:                 \QSIXIP_RUN
Used module:                 \QSIXIP_INIT
Used module:     \do
Used module:     \di
Used module:     \dio
Parameter \NUM_REQS = 2
Found cached RTLIL representation for module `$paramod\ibex_fetch_fifo\NUM_REQS=2'.

53.31. Analyzing design hierarchy..
Top module:  \IBEX_SoC
Used module:     \soc_core_m1_b1
Used module:         \IBEX_wrapper
Used module:             \ibex_core
Used module:                 $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:                 $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:                     $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_counter\CounterWidth=64
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:                     $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:                 $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:                 \ibex_load_store_unit
Used module:                 $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:                     $paramod\ibex_multdiv_fast\RV32M=2
Used module:                     $paramod\ibex_alu\RV32B=0
Used module:                 $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:                     $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:                     $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:                 $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:                     $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:                         $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:                     \ibex_compressed_decoder
Used module:                 \prim_clock_gating
Used module:         \openstriVe_soc_mem
Used module:         \AHBlite_sys_0
Used module:             \apb_sys_0
Used module:                 $paramod$19f5bbc4965ce45d2361eefc3ea15bde1a26c26f\APB_BUS0
Used module:                 \APB_TIMER32
Used module:                 \TIMER32
Used module:                 \APB_PWM32
Used module:                 \PWM32
Used module:                 \APB2SPI
Used module:                     $paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8
Used module:                         $paramod\sri\DATA_WIDTH=8
Used module:                         $paramod\sro\DATA_WIDTH=8
Used module:                 \APB2I2C
Used module:                     \i2c_master
Used module:                         \i2c_master_byte_ctrl
Used module:                             \i2c_master_bit_ctrl
Used module:                 \ahb_2_apb
Used module:             \AHBlite_BUS0
Used module:             \AHBlite_db_reg
Used module:             \AHBlite_GPIO
Used module:             \GPIO
Used module:             \AHBSRAM
Used module:             \QSPIXIP
Used module:                 \QSIXIP_RUN
Used module:                 \QSIXIP_INIT
Used module:     \do
Used module:     \di
Used module:     \dio

53.32. Analyzing design hierarchy..
Top module:  \IBEX_SoC
Used module:     \soc_core_m1_b1
Used module:         \IBEX_wrapper
Used module:             \ibex_core
Used module:                 $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:                 $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:                     $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_counter\CounterWidth=64
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:                     $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:                 $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:                 \ibex_load_store_unit
Used module:                 $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:                     $paramod\ibex_multdiv_fast\RV32M=2
Used module:                     $paramod\ibex_alu\RV32B=0
Used module:                 $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:                     $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:                     $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:                 $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:                     $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:                         $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:                     \ibex_compressed_decoder
Used module:                 \prim_clock_gating
Used module:         \openstriVe_soc_mem
Used module:         \AHBlite_sys_0
Used module:             \apb_sys_0
Used module:                 $paramod$19f5bbc4965ce45d2361eefc3ea15bde1a26c26f\APB_BUS0
Used module:                 \APB_TIMER32
Used module:                 \TIMER32
Used module:                 \APB_PWM32
Used module:                 \PWM32
Used module:                 \APB2SPI
Used module:                     $paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8
Used module:                         $paramod\sri\DATA_WIDTH=8
Used module:                         $paramod\sro\DATA_WIDTH=8
Used module:                 \APB2I2C
Used module:                     \i2c_master
Used module:                         \i2c_master_byte_ctrl
Used module:                             \i2c_master_bit_ctrl
Used module:                 \ahb_2_apb
Used module:             \AHBlite_BUS0
Used module:             \AHBlite_db_reg
Used module:             \AHBlite_GPIO
Used module:             \GPIO
Used module:             \AHBSRAM
Used module:             \QSPIXIP
Used module:                 \QSIXIP_RUN
Used module:                 \QSIXIP_INIT
Used module:     \do
Used module:     \di
Used module:     \dio
Removing unused module `$paramod\ibex_counter\CounterWidth=40'.
Removing unused module `$paramod\sro\DATA_WIDTH=16'.
Removing unused module `$paramod\sri\DATA_WIDTH=16'.
Removing unused module `\ibex_controller'.
Removing unused module `\ibex_alu'.
Removing unused module `\ibex_id_stage'.
Removing unused module `\APB_BUS0'.
Removing unused module `\ibex_wb_stage'.
Removing unused module `\i2c_slave_vip'.
Removing unused module `\ibex_counter'.
Removing unused module `\ibex_multdiv_fast'.
Removing unused module `\ibex_multdiv_slow'.
Removing unused module `\ibex_branch_predict'.
Removing unused module `\ibex_ex_block'.
Removing unused module `\ibex_cs_registers'.
Removing unused module `\ibex_icache'.
Removing unused module `\ibex_decoder'.
Removing unused module `\ibex_fetch_fifo'.
Removing unused module `\ibex_register_file_ff'.
Removing unused module `\ibex_if_stage'.
Removing unused module `\ibex_prefetch_buffer'.
Removing unused module `\ibex_csr'.
Removing unused module `\ibex_pmp'.
Removing unused module `\ibex_dummy_instr'.
Removing unused module `\ibex_register_file_latch'.
Removing unused module `\sro'.
Removing unused module `\sri'.
Removing unused module `\spi_master'.
Removed 28 unused modules.
Warning: Resizing cell port IBEX_wrapper.core.irq_fast_i from 1 bits to 15 bits.
Warning: Resizing cell port soc_core_m1_b1.openstriVe_soc_mem_Sys0_S1.addr from 15 bits to 22 bits.

54. Executing SYNTH pass.

54.1. Executing HIERARCHY pass (managing design hierarchy).

54.1.1. Analyzing design hierarchy..
Top module:  \IBEX_SoC
Used module:     \soc_core_m1_b1
Used module:         \IBEX_wrapper
Used module:             \ibex_core
Used module:                 $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:                 $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:                     $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_counter\CounterWidth=64
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:                     $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:                 $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:                 \ibex_load_store_unit
Used module:                 $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:                     $paramod\ibex_multdiv_fast\RV32M=2
Used module:                     $paramod\ibex_alu\RV32B=0
Used module:                 $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:                     $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:                     $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:                 $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:                     $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:                         $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:                     \ibex_compressed_decoder
Used module:                 \prim_clock_gating
Used module:         \openstriVe_soc_mem
Used module:         \AHBlite_sys_0
Used module:             \apb_sys_0
Used module:                 $paramod$19f5bbc4965ce45d2361eefc3ea15bde1a26c26f\APB_BUS0
Used module:                 \APB_TIMER32
Used module:                 \TIMER32
Used module:                 \APB_PWM32
Used module:                 \PWM32
Used module:                 \APB2SPI
Used module:                     $paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8
Used module:                         $paramod\sri\DATA_WIDTH=8
Used module:                         $paramod\sro\DATA_WIDTH=8
Used module:                 \APB2I2C
Used module:                     \i2c_master
Used module:                         \i2c_master_byte_ctrl
Used module:                             \i2c_master_bit_ctrl
Used module:                 \ahb_2_apb
Used module:             \AHBlite_BUS0
Used module:             \AHBlite_db_reg
Used module:             \AHBlite_GPIO
Used module:             \GPIO
Used module:             \AHBSRAM
Used module:             \QSPIXIP
Used module:                 \QSIXIP_RUN
Used module:                 \QSIXIP_INIT
Used module:     \do
Used module:     \di
Used module:     \dio

54.1.2. Analyzing design hierarchy..
Top module:  \IBEX_SoC
Used module:     \soc_core_m1_b1
Used module:         \IBEX_wrapper
Used module:             \ibex_core
Used module:                 $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:                 $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:                     $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_counter\CounterWidth=64
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:                     $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:                     $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:                     $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:                 $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:                 \ibex_load_store_unit
Used module:                 $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:                     $paramod\ibex_multdiv_fast\RV32M=2
Used module:                     $paramod\ibex_alu\RV32B=0
Used module:                 $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:                     $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:                     $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:                 $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:                     $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:                         $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:                     \ibex_compressed_decoder
Used module:                 \prim_clock_gating
Used module:         \openstriVe_soc_mem
Used module:         \AHBlite_sys_0
Used module:             \apb_sys_0
Used module:                 $paramod$19f5bbc4965ce45d2361eefc3ea15bde1a26c26f\APB_BUS0
Used module:                 \APB_TIMER32
Used module:                 \TIMER32
Used module:                 \APB_PWM32
Used module:                 \PWM32
Used module:                 \APB2SPI
Used module:                     $paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8
Used module:                         $paramod\sri\DATA_WIDTH=8
Used module:                         $paramod\sro\DATA_WIDTH=8
Used module:                 \APB2I2C
Used module:                     \i2c_master
Used module:                         \i2c_master_byte_ctrl
Used module:                             \i2c_master_bit_ctrl
Used module:                 \ahb_2_apb
Used module:             \AHBlite_BUS0
Used module:             \AHBlite_db_reg
Used module:             \AHBlite_GPIO
Used module:             \GPIO
Used module:             \AHBSRAM
Used module:             \QSPIXIP
Used module:                 \QSIXIP_RUN
Used module:                 \QSIXIP_INIT
Used module:     \do
Used module:     \di
Used module:     \dio
Removed 0 unused modules.

54.2. Executing PROC pass (convert processes to netlists).

54.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 2 empty switches in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5564'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5563'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5562'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5561'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5560'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5559'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5558'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5557'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5556'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5555'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5554'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5553'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5552'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5551'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5550'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5549'.
Found and cleaned up 35 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
Found and cleaned up 2 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
Found and cleaned up 2 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:445$4790'.
Found and cleaned up 1 empty switch in `\AHBlite_sys_0.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_sys_0.v:241$2803'.
Removing empty process `AHBlite_sys_0.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_sys_0.v:241$2803'.
Cleaned up 43 empty switches.

54.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:914$4299 in module i2c_master.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:897$4291 in module i2c_master.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:841$4287 in module i2c_master.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:823$4285 in module i2c_master.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:789$4283 in module i2c_master.
Marked 10 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269 in module i2c_master_byte_ctrl.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:557$4265 in module i2c_master_byte_ctrl.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:548$4264 in module i2c_master_byte_ctrl.
Marked 3 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:258$4259 in module i2c_master_bit_ctrl.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:224$4247 in module i2c_master_bit_ctrl.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:218$4245 in module i2c_master_bit_ctrl.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:208$4241 in module i2c_master_bit_ctrl.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:194$4234 in module i2c_master_bit_ctrl.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:172$4223 in module i2c_master_bit_ctrl.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:158$4220 in module i2c_master_bit_ctrl.
Marked 3 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:151$4214 in module i2c_master_bit_ctrl.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:137$4213 in module i2c_master_bit_ctrl.
Marked 3 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:110$4206 in module i2c_master_bit_ctrl.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:100$4195 in module i2c_master_bit_ctrl.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:863$5699 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5697 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5695 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:661$5693 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 6 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:889$5659 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:689$5598 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:689$5598 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:616$5592 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:616$5592 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:126$3990 in module IBEX_wrapper.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:114$3989 in module IBEX_wrapper.
Marked 5 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:92$3964 in module IBEX_wrapper.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:89$3962 in module IBEX_wrapper.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:552$3918 in module ibex_core.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:546$3916 in module ibex_core.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:97$3902 in module APB_PWM32.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:86$3898 in module APB_PWM32.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:75$3894 in module APB_PWM32.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:64$3890 in module APB_PWM32.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:36$3857 in module AHBlite_BUS0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:311$3699 in module ibex_load_store_unit.
Marked 8 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:218$3670 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:218$3670 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:194$3665 in module ibex_load_store_unit.
Marked 5 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:194$3665 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:170$3660 in module ibex_load_store_unit.
Marked 5 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:170$3660 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:162$3659 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:162$3659 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:157$3657 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:144$3655 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:139$3653 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:131$3652 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:131$3652 in module ibex_load_store_unit.
Removed 5 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:91$3649 in module ibex_load_store_unit.
Marked 7 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:91$3649 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1190$5511 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1089$5503 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:783$5490 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:783$5490 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:775$5487 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 9 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Removed 3 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:122$3473 in module APB_TIMER32.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:109$3469 in module APB_TIMER32.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:98$3465 in module APB_TIMER32.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:87$3461 in module APB_TIMER32.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:76$3457 in module APB_TIMER32.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5230 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5228 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5226 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5224 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5222 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5220 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5218 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5216 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5214 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5212 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5210 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5208 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5206 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5204 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5202 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5200 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5198 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5196 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5194 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5192 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5190 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5188 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5186 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5184 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5182 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5180 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5178 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5176 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5174 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5172 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5170 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 14 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 29 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:461$4968 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 6 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:517$4962 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:833$4960 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 32 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 14 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:543$4904 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:56$3417 in module TIMER32.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:46$3415 in module TIMER32.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:35$3413 in module TIMER32.
Marked 7 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825 in module $paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:85$3342 in module APB2SPI.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:64$3330 in module APB2SPI.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:53$3324 in module APB2SPI.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:42$3318 in module APB2SPI.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:917$4808 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:484$4807 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:472$4796 in module $paramod\ibex_alu\RV32B=0.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:429$4788 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:423$4782 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:383$4774 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:377$4769 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:370$4767 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:358$4765 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:348$4762 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:197$3231 in module ahb_2_apb.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:185$3227 in module ahb_2_apb.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:165$3223 in module ahb_2_apb.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:147$3217 in module ahb_2_apb.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:133$3216 in module ahb_2_apb.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:122$3214 in module ahb_2_apb.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:87$3212 in module ahb_2_apb.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:66$3210 in module ahb_2_apb.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/APB_sys_0.v:52$3202 in module apb_sys_0.
Removed 6 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_compressed_decoder.v:320$3188 in module ibex_compressed_decoder.
Marked 17 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_compressed_decoder.v:320$3188 in module ibex_compressed_decoder.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:585$4728 in module $paramod\ibex_multdiv_fast\RV32M=2.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 3 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:598$4680 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:392$4670 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4664 in module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4662 in module $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4660 in module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4658 in module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4656 in module $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:370$1573 in module QSIXIP_RUN.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:320$1572 in module QSIXIP_INIT.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1569 in module QSPIXIP.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1569 in module QSPIXIP.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1566 in module QSPIXIP.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1566 in module QSPIXIP.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1563 in module QSPIXIP.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1563 in module QSPIXIP.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1560 in module QSPIXIP.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1560 in module QSPIXIP.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:279$1557 in module QSPIXIP.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:244$1539 in module QSPIXIP.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:235$1536 in module QSPIXIP.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:235$1536 in module QSPIXIP.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:226$1534 in module QSPIXIP.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:205$1528 in module QSPIXIP.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:205$1528 in module QSPIXIP.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:188$1525 in module QSPIXIP.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:124$1517 in module QSPIXIP.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:117$1514 in module QSPIXIP.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:107$1508 in module QSPIXIP.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:92$1506 in module QSPIXIP.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477 in module QSPIXIP.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:179$1456 in module AHBSRAM.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:173$1454 in module AHBSRAM.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:141$1446 in module AHBSRAM.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:135$1444 in module AHBSRAM.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:112$1434 in module AHBSRAM.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4654 in module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:40$4652 in module $paramod\ibex_counter\CounterWidth=64.
Marked 3 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:23$4649 in module $paramod\ibex_counter\CounterWidth=64.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4647 in module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/prim_clock_gating.v:16$1053 in module prim_clock_gating.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:234$5748 in module $paramod\sro\DATA_WIDTH=8.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:144$302 in module AHBlite_GPIO.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:133$298 in module AHBlite_GPIO.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:122$294 in module AHBlite_GPIO.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:111$290 in module AHBlite_GPIO.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:85$281 in module AHBlite_GPIO.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:76$279 in module AHBlite_GPIO.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:67$277 in module AHBlite_GPIO.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:59$275 in module AHBlite_GPIO.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:51$272 in module AHBlite_GPIO.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:170$4454 in module $paramod\ibex_prefetch_buffer\BranchPredictor=1'0.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:50$250 in module PWM32.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:39$248 in module PWM32.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:28$246 in module PWM32.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:122$4376 in module $paramod\ibex_fetch_fifo\NUM_REQS=2.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:70$4356 in module $paramod\ibex_fetch_fifo\NUM_REQS=2.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:205$5745 in module $paramod\sri\DATA_WIDTH=8.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:586$5739 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:449$5725 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:439$5720 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:439$5720 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:88$4319 in module AHBlite_db_reg.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:69$4310 in module AHBlite_db_reg.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:60$4308 in module AHBlite_db_reg.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:51$4306 in module AHBlite_db_reg.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:43$4304 in module AHBlite_db_reg.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:35$4301 in module AHBlite_db_reg.
Removed a total of 33 dead cases.

54.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 74 redundant assignments.
Promoted 501 assignments to connections.

54.2.4. Executing PROC_INIT pass (extract init attributes).

54.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \sys_rst in `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:914$4299'.
Found async reset \sys_rst in `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:897$4291'.
Found async reset \sys_rst in `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:841$4287'.
Found async reset \sys_rst in `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:823$4285'.
Found async reset \rst in `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269'.
Found async reset \rst in `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:557$4265'.
Found async reset \rst in `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:548$4264'.
Found async reset \rst in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:258$4259'.
Found async reset \rst in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:224$4247'.
Found async reset \rst in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:218$4245'.
Found async reset \rst in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:208$4241'.
Found async reset \rst in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:194$4234'.
Found async reset \rst in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:172$4223'.
Found async reset \rst in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:158$4220'.
Found async reset \rst in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:151$4214'.
Found async reset \rst in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:137$4213'.
Found async reset \rst in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:110$4206'.
Found async reset \rst in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:100$4195'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:863$5699'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5697'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5695'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:889$5659'.
Found async reset \HRESETn in `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:89$3962'.
Found async reset \rst_ni in `\ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:552$3918'.
Found async reset \rst_ni in `\ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:546$3916'.
Found async reset \PRESETn in `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:97$3902'.
Found async reset \PRESETn in `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:86$3898'.
Found async reset \PRESETn in `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:75$3894'.
Found async reset \PRESETn in `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:64$3890'.
Found async reset \HRESETn in `\AHBlite_BUS0.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:36$3857'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:311$3699'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:157$3657'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:144$3655'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:139$3653'.
Found async reset \rst_ni in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1190$5511'.
Found async reset \rst_ni in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:775$5487'.
Found async reset \PRESETn in `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:122$3473'.
Found async reset \PRESETn in `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:109$3469'.
Found async reset \PRESETn in `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:98$3465'.
Found async reset \PRESETn in `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:87$3461'.
Found async reset \PRESETn in `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:76$3457'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5230'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5228'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5226'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5224'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5222'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5220'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5218'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5216'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5214'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5212'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5210'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5208'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5206'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5204'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5202'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5200'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5198'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5196'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5194'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5192'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5190'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5188'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5186'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5184'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5182'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5180'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5178'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5176'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5174'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5172'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5170'.
Found async reset \rst_ni in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:833$4960'.
Found async reset \rst in `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:56$3417'.
Found async reset \rst in `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:46$3415'.
Found async reset \rst in `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:35$3413'.
Found async reset \resetb in `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
Found async reset \PRESETn in `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:85$3342'.
Found async reset \PRESETn in `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:64$3330'.
Found async reset \PRESETn in `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:53$3324'.
Found async reset \PRESETn in `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:42$3318'.
Found async reset \HRESETn in `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:197$3231'.
Found async reset \HRESETn in `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:185$3227'.
Found async reset \HRESETn in `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:165$3223'.
Found async reset \HRESETn in `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:147$3217'.
Found async reset \HRESETn in `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:122$3214'.
Found async reset \HRESETn in `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:66$3210'.
Found async reset \HRESETn in `\apb_sys_0.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_sys_0.v:52$3202'.
Found async reset \rst_ni in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:585$4728'.
Found async reset \rst_ni in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:392$4670'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4664'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4662'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4660'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4658'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4656'.
Found async reset \HRESETn in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:279$1557'.
Found async reset \HRESETn in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:244$1539'.
Found async reset \HRESETn in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:226$1534'.
Found async reset \HRESETn in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:188$1525'.
Found async reset \HRESETn in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:124$1517'.
Found async reset \HRESETn in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:117$1514'.
Found async reset \HRESETn in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:107$1508'.
Found async reset \HRESETn in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:92$1506'.
Found async reset \HRESETn in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
Found async reset \HRESETn in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:179$1456'.
Found async reset \HRESETn in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:173$1454'.
Found async reset \HRESETn in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:141$1446'.
Found async reset \HRESETn in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:135$1444'.
Found async reset \HRESETn in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:112$1434'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4654'.
Found async reset \rst_ni in `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:40$4652'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4647'.
Found async reset \resetb in `$paramod\sro\DATA_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:234$5748'.
Found async reset \HRESETn in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:144$302'.
Found async reset \HRESETn in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:133$298'.
Found async reset \HRESETn in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:122$294'.
Found async reset \HRESETn in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:111$290'.
Found async reset \HRESETn in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:85$281'.
Found async reset \HRESETn in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:76$279'.
Found async reset \HRESETn in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:67$277'.
Found async reset \HRESETn in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:59$275'.
Found async reset \HRESETn in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:51$272'.
Found async reset \rst_ni in `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:170$4454'.
Found async reset \rst in `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:50$250'.
Found async reset \rst in `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:39$248'.
Found async reset \rst in `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:28$246'.
Found async reset \rst_ni in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:122$4376'.
Found async reset \resetb in `$paramod\sri\DATA_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:205$5745'.
Found async reset \rst_ni in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:586$5739'.
Found async reset \HRESETn in `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:88$4319'.
Found async reset \HRESETn in `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:69$4310'.
Found async reset \HRESETn in `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:60$4308'.
Found async reset \HRESETn in `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:51$4306'.
Found async reset \HRESETn in `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:43$4304'.
Found async reset \HRESETn in `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:35$4301'.

54.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:914$4299'.
     1/1: $0\i2c_irq[0:0]
Creating decoders for process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:897$4291'.
     1/4: $0\irq_flag[0:0]
     2/4: $0\tip[0:0]
     3/4: $0\rxack[0:0]
     4/4: $0\al[0:0]
Creating decoders for process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:841$4287'.
     1/4: $0\cr[7:0] [7:4]
     2/4: $0\cr[7:0] [3]
     3/4: $0\cr[7:0] [2:1]
     4/4: $0\cr[7:0] [0]
Creating decoders for process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:823$4285'.
     1/4: $0\prer[15:0] [15:8]
     2/4: $0\prer[15:0] [7:0]
     3/4: $0\ctr[7:0]
     4/4: $0\txr[7:0]
Creating decoders for process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:789$4283'.
     1/2: $2\io_do[7:0]
     2/2: $1\io_do[7:0]
Creating decoders for process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269'.
     1/7: $0\cmd_ack[0:0]
     2/7: $0\ld[0:0]
     3/7: $0\shift[0:0]
     4/7: $0\core_txd[0:0]
     5/7: $0\core_cmd[3:0]
     6/7: $0\ack_out[0:0]
     7/7: $0\c_state[4:0]
Creating decoders for process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:557$4265'.
     1/1: $0\dcnt[2:0]
Creating decoders for process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:548$4264'.
     1/1: $0\sr[7:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:258$4259'.
     1/5: $0\cmd_ack[0:0]
     2/5: $0\c_state[17:0]
     3/5: $0\sda_chk[0:0]
     4/5: $0\sda_oen[0:0]
     5/5: $0\scl_oen[0:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:232$4256'.
     1/1: $0\dout[0:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:224$4247'.
     1/1: $0\al[0:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:218$4245'.
     1/1: $0\cmd_stop[0:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:208$4241'.
     1/1: $0\busy[0:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:194$4234'.
     1/2: $0\sto_condition[0:0]
     2/2: $0\sta_condition[0:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:172$4223'.
     1/4: $0\dSDA[0:0]
     2/4: $0\dSCL[0:0]
     3/4: $0\sSDA[0:0]
     4/4: $0\sSCL[0:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:158$4220'.
     1/2: $0\fSDA[2:0]
     2/2: $0\fSCL[2:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:151$4214'.
     1/1: $0\filter_cnt[13:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:137$4213'.
     1/2: $0\cSDA[1:0]
     2/2: $0\cSCL[1:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:110$4206'.
     1/2: $0\clk_en[0:0]
     2/2: $0\cnt[15:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:100$4195'.
     1/1: $0\slave_wait[0:0]
Creating decoders for process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:95$4194'.
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:0$5719'.
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:0$5718'.
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:863$5699'.
     1/1: $0\g_branch_set_flop.branch_set_q[0:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5697'.
     1/1: $0\imd_val_q[33:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5695'.
     1/1: $0\imd_val_q[67:34]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:661$5693'.
     1/1: $1\imm_b[31:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
     1/39: $6\id_fsm_d[0:0]
     2/39: $4\stall_jump[0:0]
     3/39: $4\stall_branch[0:0]
     4/39: $5\stall_multdiv[0:0]
     5/39: $5\rf_we_raw[0:0]
     6/39: $4\stall_multdiv[0:0]
     7/39: $4\rf_we_raw[0:0]
     8/39: $5\id_fsm_d[0:0]
     9/39: $4\id_fsm_d[0:0]
    10/39: $3\id_fsm_d[0:0]
    11/39: $3\stall_alu[0:0]
    12/39: $3\rf_we_raw[0:0]
    13/39: $3\stall_jump[0:0]
    14/39: $3\stall_branch[0:0]
    15/39: $3\stall_multdiv[0:0]
    16/39: $3\jump_set[0:0]
    17/39: $3\branch_set_d[0:0]
    18/39: $3\perf_branch_o[0:0]
    19/39: $3\branch_spec[0:0]
    20/39: $2\id_fsm_d[0:0]
    21/39: $2\stall_alu[0:0]
    22/39: $2\rf_we_raw[0:0]
    23/39: $2\stall_jump[0:0]
    24/39: $2\stall_branch[0:0]
    25/39: $2\stall_multdiv[0:0]
    26/39: $2\jump_set[0:0]
    27/39: $2\branch_set_d[0:0]
    28/39: $2\perf_branch_o[0:0]
    29/39: $2\branch_spec[0:0]
    30/39: $1\id_fsm_d[0:0]
    31/39: $1\stall_alu[0:0]
    32/39: $1\rf_we_raw[0:0]
    33/39: $1\stall_jump[0:0]
    34/39: $1\stall_branch[0:0]
    35/39: $1\stall_multdiv[0:0]
    36/39: $1\jump_set[0:0]
    37/39: $1\branch_set_d[0:0]
    38/39: $1\perf_branch_o[0:0]
    39/39: $1\branch_spec[0:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:889$5659'.
     1/1: $0\id_fsm_q[0:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
     1/24: $4\csr_pipe_flush[0:0]
     2/24: $3\csr_pipe_flush[0:0]
     3/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5586$\sv2v_cast_12[11:0]$5641
     4/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5586$\inp[11:0]$5642
     5/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5585$\sv2v_cast_12[11:0]$5639
     6/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5585$\inp[11:0]$5640
     7/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5584$\sv2v_cast_12[11:0]$5637
     8/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5584$\inp[11:0]$5638
     9/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5583$\sv2v_cast_12[11:0]$5635
    10/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5583$\inp[11:0]$5636
    11/24: $2\csr_pipe_flush[0:0]
    12/24: $1\csr_pipe_flush[0:0]
    13/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:760$5582$\sv2v_cast_12[11:0]$5619
    14/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:760$5582$\inp[11:0]$5620
    15/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:760$5581$\sv2v_cast_12[11:0]$5617
    16/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:760$5581$\inp[11:0]$5618
    17/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5586$\inp[11:0]$5628
    18/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5586$\sv2v_cast_12[11:0]$5627
    19/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5585$\inp[11:0]$5626
    20/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5585$\sv2v_cast_12[11:0]$5625
    21/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5584$\inp[11:0]$5624
    22/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5584$\sv2v_cast_12[11:0]$5623
    23/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5583$\inp[11:0]$5622
    24/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5583$\sv2v_cast_12[11:0]$5621
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:689$5598'.
     1/1: $1\rf_wdata_id_o[31:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:616$5592'.
     1/1: $1\alu_operand_a[31:0]
Creating decoders for process `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:126$3990'.
     1/1: $1\data_addr_off[1:0]
Creating decoders for process `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:114$3989'.
     1/1: $1\data_hsize[2:0]
Creating decoders for process `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:92$3964'.
     1/5: $5\nstate[4:0]
     2/5: $4\nstate[4:0]
     3/5: $3\nstate[4:0]
     4/5: $2\nstate[4:0]
     5/5: $1\nstate[4:0]
Creating decoders for process `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:89$3962'.
     1/1: $0\state[4:0]
Creating decoders for process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
     1/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946
     2/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_DATA[31:0]$3945
     3/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_ADDR[21:0]$3944
     4/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949
     5/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_DATA[31:0]$3948
     6/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_ADDR[21:0]$3947
     7/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952
     8/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_DATA[31:0]$3951
     9/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_ADDR[21:0]$3950
    10/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955
    11/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_DATA[31:0]$3954
    12/13: $0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_ADDR[21:0]$3953
    13/13: $0\rdata[31:0]
Creating decoders for process `\ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:0$3934'.
Creating decoders for process `\ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:552$3918'.
     1/1: $0\fetch_enable_q[0:0]
Creating decoders for process `\ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:546$3916'.
     1/1: $0\core_busy_q[0:0]
Creating decoders for process `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:97$3902'.
     1/1: $0\TMREN[0:0]
Creating decoders for process `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:86$3898'.
     1/1: $0\TMRCMP2[31:0]
Creating decoders for process `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:75$3894'.
     1/1: $0\TMRCMP1[31:0]
Creating decoders for process `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:64$3890'.
     1/1: $0\PRE[31:0]
Creating decoders for process `\AHBlite_BUS0.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:36$3857'.
     1/1: $0\APAGE[8:0]
Creating decoders for process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_wb_stage.v:0$5572'.
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:311$3699'.
     1/4: $0\lsu_err_q[0:0]
     2/4: $0\pmp_err_q[0:0]
     3/4: $0\handle_misaligned_q[0:0]
     4/4: $0\ls_fsm_cs[2:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
     1/45: $8\ls_fsm_ns[2:0]
     2/45: $3\rdata_update[0:0]
     3/45: $7\addr_update[0:0]
     4/45: $4\lsu_err_d[0:0]
     5/45: $4\pmp_err_d[0:0]
     6/45: $7\handle_misaligned_d[0:0]
     7/45: $7\ls_fsm_ns[2:0]
     8/45: $6\addr_update[0:0]
     9/45: $5\ctrl_update[0:0]
    10/45: $6\handle_misaligned_d[0:0]
    11/45: $6\ls_fsm_ns[2:0]
    12/45: $5\handle_misaligned_d[0:0]
    13/45: $5\addr_update[0:0]
    14/45: $5\ls_fsm_ns[2:0]
    15/45: $2\rdata_update[0:0]
    16/45: $3\lsu_err_d[0:0]
    17/45: $3\pmp_err_d[0:0]
    18/45: $4\ls_fsm_ns[2:0]
    19/45: $4\handle_misaligned_d[0:0]
    20/45: $4\ctrl_update[0:0]
    21/45: $4\addr_update[0:0]
    22/45: $3\ls_fsm_ns[2:0]
    23/45: $3\handle_misaligned_d[0:0]
    24/45: $3\addr_update[0:0]
    25/45: $3\ctrl_update[0:0]
    26/45: $2\ls_fsm_ns[2:0]
    27/45: $2\handle_misaligned_d[0:0]
    28/45: $2\ctrl_update[0:0]
    29/45: $2\addr_update[0:0]
    30/45: $2\perf_store_o[0:0]
    31/45: $2\perf_load_o[0:0]
    32/45: $2\lsu_err_d[0:0]
    33/45: $2\pmp_err_d[0:0]
    34/45: $2\data_req_o[0:0]
    35/45: $1\ls_fsm_ns[2:0]
    36/45: $1\lsu_err_d[0:0]
    37/45: $1\pmp_err_d[0:0]
    38/45: $1\handle_misaligned_d[0:0]
    39/45: $1\ctrl_update[0:0]
    40/45: $1\addr_update[0:0]
    41/45: $1\perf_store_o[0:0]
    42/45: $1\perf_load_o[0:0]
    43/45: $1\data_req_o[0:0]
    44/45: $1\rdata_update[0:0]
    45/45: $1\addr_incr_req_o[0:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:218$3670'.
     1/1: $1\data_rdata_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:194$3665'.
     1/5: $5\rdata_b_ext[31:0]
     2/5: $4\rdata_b_ext[31:0]
     3/5: $3\rdata_b_ext[31:0]
     4/5: $2\rdata_b_ext[31:0]
     5/5: $1\rdata_b_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:170$3660'.
     1/5: $5\rdata_h_ext[31:0]
     2/5: $4\rdata_h_ext[31:0]
     3/5: $3\rdata_h_ext[31:0]
     4/5: $2\rdata_h_ext[31:0]
     5/5: $1\rdata_h_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:162$3659'.
     1/1: $1\rdata_w_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:157$3657'.
     1/1: $0\addr_last_q[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:144$3655'.
     1/4: $0\data_we_q[0:0]
     2/4: $0\data_sign_ext_q[0:0]
     3/4: $0\data_type_q[1:0]
     4/4: $0\rdata_offset_q[1:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:139$3653'.
     1/1: $0\rdata_q[23:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:131$3652'.
     1/1: $1\data_wdata[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:91$3649'.
     1/7: $7\data_be[3:0]
     2/7: $6\data_be[3:0]
     3/7: $5\data_be[3:0]
     4/7: $4\data_be[3:0]
     5/7: $3\data_be[3:0]
     6/7: $2\data_be[3:0]
     7/7: $1\data_be[3:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5528'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5525'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5522'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5519'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5516'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1190$5511'.
     1/1: $0\mcountinhibit_q[2:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1095$5505'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1089$5503'.
     1/1: $1\mcountinhibit_d[2:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:783$5490'.
     1/1: $1\csr_wdata_int[31:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:775$5487'.
     1/1: $0\priv_lvl_q[1:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
     1/131: $4\mstatus_d[5:2] [3]
     2/131: $6\mcause_en[0:0]
     3/131: $4\mepc_d[31:0]
     4/131: $6\mepc_en[0:0]
     5/131: $7\mstatus_d[4:2] [1:0]
     6/131: $7\mstatus_d[4:2] [2]
     7/131: $4\mstatus_d[5:2] [2:0]
     8/131: $4\mcause_d[5:0]
     9/131: $3\mcause_d[5:0]
    10/131: $5\mcause_en[0:0]
    11/131: $3\mepc_d[31:0]
    12/131: $5\mepc_en[0:0]
    13/131: $3\mstack_en[0:0]
    14/131: $6\mstatus_d[5:2] [1:0]
    15/131: $6\mstatus_d[5:2] [2]
    16/131: $5\mstatus_en[0:0]
    17/131: $3\mtval_d[31:0]
    18/131: $5\mtval_en[0:0]
    19/131: $4\depc_en[0:0]
    20/131: $2\depc_d[31:0]
    21/131: $4\dcsr_en[0:0]
    22/131: $7\dcsr_d[8:6]
    23/131: $6\dcsr_d[1:0]
    24/131: $2\mstack_en[0:0]
    25/131: $4\mtval_en[0:0]
    26/131: $2\mtval_d[31:0]
    27/131: $4\mcause_en[0:0]
    28/131: $2\mcause_d[5:0]
    29/131: $4\mepc_en[0:0]
    30/131: $2\mepc_d[31:0]
    31/131: $4\mstatus_en[0:0]
    32/131: $5\mstatus_d[5:2]
    33/131: $2\exception_pc[31:0]
    34/131: $1\mstack_en[0:0]
    35/131: $3\depc_en[0:0]
    36/131: $1\depc_d[31:0]
    37/131: $3\dcsr_en[0:0]
    38/131: $5\dcsr_d[8:6]
    39/131: $4\dcsr_d[1:0]
    40/131: $3\mtval_en[0:0]
    41/131: $1\mtval_d[31:0]
    42/131: $3\mcause_en[0:0]
    43/131: $1\mcause_d[5:0]
    44/131: $3\mepc_en[0:0]
    45/131: $1\mepc_d[31:0]
    46/131: $3\mstatus_en[0:0]
    47/131: $6\mstatus_d[5:2] [3]
    48/131: $1\priv_lvl_d[1:0]
    49/131: $1\exception_pc[31:0]
    50/131: $2\dcsr_d[31:0] [31:28]
    51/131: $2\mstatus_d[5:0] [5:4]
    52/131: $2\mstatus_d[5:0] [3:2]
    53/131: $2\dcsr_d[31:0] [15]
    54/131: $2\dcsr_d[31:0] [14]
    55/131: $2\mstatus_d[5:0] [1:0]
    56/131: $2\dcsr_d[31:0] [27:16]
    57/131: $2\dcsr_d[31:0] [4]
    58/131: $2\dcsr_d[31:0] [3]
    59/131: $2\dcsr_d[31:0] [2]
    60/131: $2\dcsr_d[31:0] [1:0]
    61/131: $2\dcsr_d[31:0] [5]
    62/131: $2\dcsr_d[31:0] [13:11]
    63/131: $2\dcsr_d[31:0] [10]
    64/131: $3\dcsr_d[1:0]
    65/131: $2\dcsr_d[31:0] [8:6]
    66/131: $3\mstatus_d[3:2]
    67/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5247$\sv2v_cast_1[0:0]$5464
    68/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5247$\inp[0:0]$5465
    69/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5246$\sv2v_cast_1[0:0]$5462
    70/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5246$\inp[0:0]$5463
    71/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5245$\sv2v_cast_2[1:0]$5460
    72/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5245$\inp[1:0]$5461
    73/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5244$\sv2v_cast_2[1:0]$5458
    74/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5244$\inp[1:0]$5459
    75/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5243$\sv2v_cast_1[0:0]$5456
    76/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5243$\inp[0:0]$5457
    77/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5242$\sv2v_cast_1[0:0]$5454
    78/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5242$\inp[0:0]$5455
    79/131: $2\mstatus_en[0:0]
    80/131: $2$bitselwrite$data$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:717$5251[31:0]$5469
    81/131: $2$bitselwrite$mask$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:717$5250[31:0]$5468
    82/131: $2$bitselwrite$data$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:716$5249[31:0]$5467
    83/131: $2$bitselwrite$mask$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:716$5248[31:0]$5466
    84/131: $2\cpuctrl_we[0:0]
    85/131: $2\mhpmcounterh_we[31:0]
    86/131: $2\mhpmcounter_we[31:0]
    87/131: $2\mcountinhibit_we[0:0]
    88/131: $2\dscratch1_en[0:0]
    89/131: $2\dscratch0_en[0:0]
    90/131: $2\depc_en[0:0]
    91/131: $2\dcsr_en[0:0]
    92/131: $2\dcsr_d[31:0] [9]
    93/131: $2\mtvec_en[0:0]
    94/131: $2\mtval_en[0:0]
    95/131: $2\mcause_en[0:0]
    96/131: $2\mepc_en[0:0]
    97/131: $2\mscratch_en[0:0]
    98/131: $2\mie_en[0:0]
    99/131: $1$bitselwrite$data$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:717$5251[31:0]$5453
   100/131: $1$bitselwrite$mask$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:717$5250[31:0]$5452
   101/131: $1$bitselwrite$data$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:716$5249[31:0]$5451
   102/131: $1$bitselwrite$mask$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:716$5248[31:0]$5450
   103/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5247$\inp[0:0]$5449
   104/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5247$\sv2v_cast_1[0:0]$5448
   105/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5246$\inp[0:0]$5447
   106/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5246$\sv2v_cast_1[0:0]$5446
   107/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5245$\inp[1:0]$5445
   108/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5245$\sv2v_cast_2[1:0]$5444
   109/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5244$\inp[1:0]$5443
   110/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5244$\sv2v_cast_2[1:0]$5442
   111/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5243$\inp[0:0]$5441
   112/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5243$\sv2v_cast_1[0:0]$5440
   113/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5242$\inp[0:0]$5439
   114/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5242$\sv2v_cast_1[0:0]$5438
   115/131: $1\cpuctrl_we[0:0]
   116/131: $1\mhpmcounterh_we[31:0]
   117/131: $1\mhpmcounter_we[31:0]
   118/131: $1\mcountinhibit_we[0:0]
   119/131: $1\dscratch1_en[0:0]
   120/131: $1\dscratch0_en[0:0]
   121/131: $1\depc_en[0:0]
   122/131: $1\dcsr_en[0:0]
   123/131: $1\dcsr_d[31:0]
   124/131: $1\mtvec_en[0:0]
   125/131: $1\mtval_en[0:0]
   126/131: $1\mcause_en[0:0]
   127/131: $1\mepc_en[0:0]
   128/131: $1\mscratch_en[0:0]
   129/131: $1\mie_en[0:0]
   130/131: $1\mstatus_en[0:0]
   131/131: $1\mstatus_d[5:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
     1/26: $1\csr_rdata_int[31:0] [31]
     2/26: $1\csr_rdata_int[31:0] [10:8]
     3/26: $1\csr_rdata_int[31:0] [7]
     4/26: $1\csr_rdata_int[31:0] [6:4]
     5/26: $1\csr_rdata_int[31:0] [12]
     6/26: $1\csr_rdata_int[31:0] [3]
     7/26: $1\csr_rdata_int[31:0] [17]
     8/26: $2$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:615$5357_DATA[63:0]$5419
     9/26: $1\csr_rdata_int[31:0] [11]
    10/26: $2$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:614$5356_DATA[63:0]$5418
    11/26: $1\csr_rdata_int[31:0] [2:0]
    12/26: $1\csr_rdata_int[31:0] [21]
    13/26: $1\csr_rdata_int[31:0] [30:22]
    14/26: $1\csr_rdata_int[31:0] [16]
    15/26: $1\csr_rdata_int[31:0] [20:18]
    16/26: $2$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:613$5355_DATA[31:0]$5417
    17/26: $1\csr_rdata_int[31:0] [15:13]
    18/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:615$5357_DATA[63:0]$5396
    19/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:615$5357_ADDR[4:0]$5395
    20/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:614$5356_DATA[63:0]$5394
    21/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:614$5356_ADDR[4:0]$5393
    22/26: $1$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:613$5355_DATA[31:0]$5392
    23/26: $1$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:613$5355_ADDR[4:0]$5391
    24/26: $1$mem2bits$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:615$5241[63:0]$5390
    25/26: $1$mem2bits$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:614$5240[63:0]$5389
    26/26: $1\illegal_csr[0:0]
Creating decoders for process `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:122$3473'.
     1/1: $0\IRQEN[0:0]
Creating decoders for process `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:109$3469'.
     1/1: $0\TMREN[0:0]
Creating decoders for process `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:98$3465'.
     1/1: $0\TMROVCLR[0:0]
Creating decoders for process `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:87$3461'.
     1/1: $0\TMRCMP[31:0]
Creating decoders for process `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:76$3457'.
     1/1: $0\PRE[31:0]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5230'.
     1/1: $0\rf_reg_q[991:960]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5228'.
     1/1: $0\rf_reg_q[959:928]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5226'.
     1/1: $0\rf_reg_q[927:896]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5224'.
     1/1: $0\rf_reg_q[895:864]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5222'.
     1/1: $0\rf_reg_q[863:832]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5220'.
     1/1: $0\rf_reg_q[831:800]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5218'.
     1/1: $0\rf_reg_q[799:768]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5216'.
     1/1: $0\rf_reg_q[767:736]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5214'.
     1/1: $0\rf_reg_q[735:704]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5212'.
     1/1: $0\rf_reg_q[703:672]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5210'.
     1/1: $0\rf_reg_q[671:640]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5208'.
     1/1: $0\rf_reg_q[639:608]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5206'.
     1/1: $0\rf_reg_q[607:576]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5204'.
     1/1: $0\rf_reg_q[575:544]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5202'.
     1/1: $0\rf_reg_q[543:512]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5200'.
     1/1: $0\rf_reg_q[511:480]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5198'.
     1/1: $0\rf_reg_q[479:448]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5196'.
     1/1: $0\rf_reg_q[447:416]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5194'.
     1/1: $0\rf_reg_q[415:384]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5192'.
     1/1: $0\rf_reg_q[383:352]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5190'.
     1/1: $0\rf_reg_q[351:320]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5188'.
     1/1: $0\rf_reg_q[319:288]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5186'.
     1/1: $0\rf_reg_q[287:256]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5184'.
     1/1: $0\rf_reg_q[255:224]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5182'.
     1/1: $0\rf_reg_q[223:192]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5180'.
     1/1: $0\rf_reg_q[191:160]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5178'.
     1/1: $0\rf_reg_q[159:128]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5176'.
     1/1: $0\rf_reg_q[127:96]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5174'.
     1/1: $0\rf_reg_q[95:64]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5172'.
     1/1: $0\rf_reg_q[63:32]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5170'.
     1/1: $0\rf_reg_q[31:0]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:443$5007'.
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
     1/46: $8\alu_op_a_mux_sel_o[1:0]
     2/46: $8\alu_op_b_mux_sel_o[0:0]
     3/46: $7\alu_op_a_mux_sel_o[1:0]
     4/46: $8\imm_b_mux_sel_o[2:0]
     5/46: $2\imm_a_mux_sel_o[0:0]
     6/46: $14\alu_operator_o[5:0]
     7/46: $7\imm_b_mux_sel_o[2:0]
     8/46: $7\alu_op_b_mux_sel_o[0:0]
     9/46: $6\alu_op_a_mux_sel_o[1:0]
    10/46: $6\alu_op_b_mux_sel_o[0:0]
    11/46: $5\alu_op_a_mux_sel_o[1:0]
    12/46: $13\alu_operator_o[5:0]
    13/46: $6\imm_b_mux_sel_o[2:0]
    14/46: $12\alu_operator_o[5:0]
    15/46: $3\div_sel_o[0:0]
    16/46: $3\mult_sel_o[0:0]
    17/46: $2\div_sel_o[0:0]
    18/46: $2\mult_sel_o[0:0]
    19/46: $11\alu_operator_o[5:0]
    20/46: $10\alu_operator_o[5:0]
    21/46: $9\alu_operator_o[5:0]
    22/46: $8\alu_operator_o[5:0]
    23/46: $7\alu_operator_o[5:0]
    24/46: $6\alu_operator_o[5:0]
    25/46: $5\alu_op_b_mux_sel_o[0:0]
    26/46: $5\imm_b_mux_sel_o[2:0]
    27/46: $4\alu_op_b_mux_sel_o[0:0]
    28/46: $4\alu_op_a_mux_sel_o[1:0]
    29/46: $5\alu_operator_o[5:0]
    30/46: $4\imm_b_mux_sel_o[2:0]
    31/46: $4\alu_operator_o[5:0]
    32/46: $3\alu_operator_o[5:0]
    33/46: $3\imm_b_mux_sel_o[2:0]
    34/46: $3\alu_op_b_mux_sel_o[0:0]
    35/46: $3\alu_op_a_mux_sel_o[1:0]
    36/46: $2\alu_operator_o[5:0]
    37/46: $2\imm_b_mux_sel_o[2:0]
    38/46: $2\alu_op_b_mux_sel_o[0:0]
    39/46: $2\alu_op_a_mux_sel_o[1:0]
    40/46: $1\alu_op_b_mux_sel_o[0:0]
    41/46: $1\alu_op_a_mux_sel_o[1:0]
    42/46: $1\alu_operator_o[5:0]
    43/46: $1\imm_b_mux_sel_o[2:0]
    44/46: $1\div_sel_o[0:0]
    45/46: $1\mult_sel_o[0:0]
    46/46: $1\imm_a_mux_sel_o[0:0]
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
     1/89: $3\csr_access_o[0:0]
     2/89: $2\branch_in_dec_o[0:0]
     3/89: $6\jump_set_o[0:0]
     4/89: $3\jump_in_dec_o[0:0]
     5/89: $2\data_we_o[0:0]
     6/89: $2\data_req_o[0:0]
     7/89: $6\rf_we[0:0]
     8/89: $25\illegal_insn[0:0]
     9/89: $3\csr_op[1:0]
    10/89: $3\csr_illegal[0:0]
    11/89: $3\rf_ren_a_o[0:0]
    12/89: $24\illegal_insn[0:0]
    13/89: $3\ecall_insn_o[0:0]
    14/89: $23\illegal_insn[0:0]
    15/89: $3\wfi_insn_o[0:0]
    16/89: $3\dret_insn_o[0:0]
    17/89: $3\mret_insn_o[0:0]
    18/89: $3\ebrk_insn_o[0:0]
    19/89: $22\illegal_insn[0:0]
    20/89: $2\wfi_insn_o[0:0]
    21/89: $2\ecall_insn_o[0:0]
    22/89: $2\dret_insn_o[0:0]
    23/89: $2\mret_insn_o[0:0]
    24/89: $2\ebrk_insn_o[0:0]
    25/89: $2\csr_op[1:0]
    26/89: $5\rf_we[0:0]
    27/89: $2\csr_illegal[0:0]
    28/89: $2\csr_access_o[0:0]
    29/89: $2\rf_ren_a_o[0:0]
    30/89: $2\rf_wdata_sel_o[0:0]
    31/89: $3\icache_inval_o[0:0]
    32/89: $5\jump_set_o[0:0]
    33/89: $4\rf_we[0:0]
    34/89: $21\illegal_insn[0:0]
    35/89: $2\jump_in_dec_o[0:0]
    36/89: $2\icache_inval_o[0:0]
    37/89: $4\jump_set_o[0:0]
    38/89: $20\illegal_insn[0:0]
    39/89: $3\multdiv_signed_mode_o[1:0]
    40/89: $3\multdiv_operator_o[1:0]
    41/89: $19\illegal_insn[0:0]
    42/89: $2\multdiv_signed_mode_o[1:0]
    43/89: $2\multdiv_operator_o[1:0]
    44/89: $18\illegal_insn[0:0]
    45/89: $17\illegal_insn[0:0]
    46/89: $16\illegal_insn[0:0]
    47/89: $15\illegal_insn[0:0]
    48/89: $14\illegal_insn[0:0]
    49/89: $13\illegal_insn[0:0]
    50/89: $12\illegal_insn[0:0]
    51/89: $11\illegal_insn[0:0]
    52/89: $10\illegal_insn[0:0]
    53/89: $9\illegal_insn[0:0]
    54/89: $8\illegal_insn[0:0]
    55/89: $7\illegal_insn[0:0]
    56/89: $3\data_type_o[1:0]
    57/89: $6\illegal_insn[0:0]
    58/89: $2\data_type_o[1:0]
    59/89: $5\illegal_insn[0:0]
    60/89: $4\illegal_insn[0:0]
    61/89: $3\illegal_insn[0:0]
    62/89: $2\illegal_insn[0:0]
    63/89: $3\jump_set_o[0:0]
    64/89: $3\rf_we[0:0]
    65/89: $2\jump_set_o[0:0]
    66/89: $2\rf_we[0:0]
    67/89: $1\rf_we[0:0]
    68/89: $1\jump_set_o[0:0]
    69/89: $1\jump_in_dec_o[0:0]
    70/89: $1\csr_op[1:0]
    71/89: $1\csr_illegal[0:0]
    72/89: $1\illegal_insn[0:0]
    73/89: $1\branch_in_dec_o[0:0]
    74/89: $1\data_sign_extension_o[0:0]
    75/89: $1\data_type_o[1:0]
    76/89: $1\data_we_o[0:0]
    77/89: $1\data_req_o[0:0]
    78/89: $1\csr_access_o[0:0]
    79/89: $1\multdiv_signed_mode_o[1:0]
    80/89: $1\multdiv_operator_o[1:0]
    81/89: $1\rf_ren_b_o[0:0]
    82/89: $1\rf_ren_a_o[0:0]
    83/89: $1\rf_wdata_sel_o[0:0]
    84/89: $1\icache_inval_o[0:0]
    85/89: $1\wfi_insn_o[0:0]
    86/89: $1\ecall_insn_o[0:0]
    87/89: $1\dret_insn_o[0:0]
    88/89: $1\mret_insn_o[0:0]
    89/89: $1\ebrk_insn_o[0:0]
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:461$4968'.
     1/1: $1\csr_op_o[1:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:517$4962'.
     1/21: $6\load_err_prio[0:0]
     2/21: $5\store_err_prio[0:0]
     3/21: $5\load_err_prio[0:0]
     4/21: $4\ebrk_insn_prio[0:0]
     5/21: $4\load_err_prio[0:0]
     6/21: $4\store_err_prio[0:0]
     7/21: $3\ecall_insn_prio[0:0]
     8/21: $3\load_err_prio[0:0]
     9/21: $3\store_err_prio[0:0]
    10/21: $3\ebrk_insn_prio[0:0]
    11/21: $2\illegal_insn_prio[0:0]
    12/21: $2\load_err_prio[0:0]
    13/21: $2\store_err_prio[0:0]
    14/21: $2\ebrk_insn_prio[0:0]
    15/21: $2\ecall_insn_prio[0:0]
    16/21: $1\instr_fetch_err_prio[0:0]
    17/21: $1\load_err_prio[0:0]
    18/21: $1\store_err_prio[0:0]
    19/21: $1\ebrk_insn_prio[0:0]
    20/21: $1\ecall_insn_prio[0:0]
    21/21: $1\illegal_insn_prio[0:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:833$4960'.
     1/7: $0\illegal_insn_q[0:0]
     2/7: $0\exc_req_q[0:0]
     3/7: $0\store_err_q[0:0]
     4/7: $0\load_err_q[0:0]
     5/7: $0\debug_mode_q[0:0]
     6/7: $0\nmi_mode_q[0:0]
     7/7: $0\ctrl_fsm_cs[3:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
     1/129: $18\ctrl_fsm_ns[3:0]
     2/129: $17\ctrl_fsm_ns[3:0]
     3/129: $16\ctrl_fsm_ns[3:0]
     4/129: $4\csr_restore_dret_id_o[0:0]
     5/129: $5\debug_mode_d[0:0]
     6/129: $9\pc_set_spec_o[0:0]
     7/129: $10\pc_set_o[0:0]
     8/129: $4\pc_mux_o[2:0]
     9/129: $15\ctrl_fsm_ns[3:0]
    10/129: $6\nmi_mode_d[0:0]
    11/129: $5\nmi_mode_d[0:0]
    12/129: $3\csr_restore_mret_id_o[0:0]
    13/129: $8\pc_set_spec_o[0:0]
    14/129: $9\pc_set_o[0:0]
    15/129: $3\pc_mux_o[2:0]
    16/129: $4\debug_mode_d[0:0]
    17/129: $14\ctrl_fsm_ns[3:0]
    18/129: $3\csr_restore_dret_id_o[0:0]
    19/129: $5\flush_id[0:0]
    20/129: $13\ctrl_fsm_ns[3:0]
    21/129: $7\csr_save_cause_o[0:0]
    22/129: $6\csr_save_id_o[0:0]
    23/129: $7\pc_set_spec_o[0:0]
    24/129: $8\pc_set_o[0:0]
    25/129: $9\exc_cause_o[5:0]
    26/129: $3\csr_mtval_o[31:0]
    27/129: $8\exc_cause_o[5:0]
    28/129: $12\ctrl_fsm_ns[3:0]
    29/129: $4\flush_id[0:0]
    30/129: $6\csr_save_cause_o[0:0]
    31/129: $5\csr_save_id_o[0:0]
    32/129: $6\pc_set_spec_o[0:0]
    33/129: $7\pc_set_o[0:0]
    34/129: $4\csr_save_id_o[0:0]
    35/129: $11\ctrl_fsm_ns[3:0]
    36/129: $3\flush_id[0:0]
    37/129: $2\csr_mtval_o[31:0]
    38/129: $5\csr_save_cause_o[0:0]
    39/129: $3\csr_save_id_o[0:0]
    40/129: $7\exc_cause_o[5:0]
    41/129: $5\pc_set_spec_o[0:0]
    42/129: $6\pc_set_o[0:0]
    43/129: $2\exc_pc_mux_o[1:0]
    44/129: $2\pc_mux_o[2:0]
    45/129: $3\debug_mode_d[0:0]
    46/129: $4\nmi_mode_d[0:0]
    47/129: $2\csr_restore_dret_id_o[0:0]
    48/129: $2\csr_restore_mret_id_o[0:0]
    49/129: $5\debug_cause_o[2:0]
    50/129: $3\debug_csr_save_o[0:0]
    51/129: $2\csr_save_id_o[0:0]
    52/129: $4\csr_save_cause_o[0:0]
    53/129: $4\debug_cause_o[2:0]
    54/129: $3\debug_cause_o[2:0]
    55/129: $2\debug_mode_d[0:0]
    56/129: $2\debug_cause_o[2:0]
    57/129: $3\csr_save_cause_o[0:0]
    58/129: $2\debug_csr_save_o[0:0]
    59/129: $3\csr_save_if_o[0:0]
    60/129: $4\pc_set_spec_o[0:0]
    61/129: $5\pc_set_o[0:0]
    62/129: $2\flush_id[0:0]
    63/129: $6\exc_cause_o[5:0]
    64/129: $5\exc_cause_o[5:0]
    65/129: $4\exc_cause_o[5:0]
    66/129: $4$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:704$4858$\sv2v_cast_6[5:0]$4932
    67/129: $4$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:704$4858$\inp[5:0]$4933
    68/129: $3\nmi_mode_d[0:0]
    69/129: $3\exc_cause_o[5:0]
    70/129: $3$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:704$4858$\inp[5:0]$4930
    71/129: $3$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:704$4858$\sv2v_cast_6[5:0]$4929
    72/129: $2$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:704$4858$\inp[5:0]$4926
    73/129: $2$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:704$4858$\sv2v_cast_6[5:0]$4925
    74/129: $2\nmi_mode_d[0:0]
    75/129: $2\exc_cause_o[5:0]
    76/129: $2\csr_save_cause_o[0:0]
    77/129: $2\csr_save_if_o[0:0]
    78/129: $3\pc_set_spec_o[0:0]
    79/129: $4\pc_set_o[0:0]
    80/129: $7\halt_if[0:0]
    81/129: $10\ctrl_fsm_ns[3:0]
    82/129: $6\halt_if[0:0]
    83/129: $9\ctrl_fsm_ns[3:0]
    84/129: $5\halt_if[0:0]
    85/129: $8\ctrl_fsm_ns[3:0]
    86/129: $4\halt_if[0:0]
    87/129: $2\pc_set_spec_o[0:0]
    88/129: $3\perf_jump_o[0:0]
    89/129: $3\perf_tbranch_o[0:0]
    90/129: $3\pc_set_o[0:0]
    91/129: $2\perf_tbranch_o[0:0]
    92/129: $2\perf_jump_o[0:0]
    93/129: $2\pc_set_o[0:0]
    94/129: $7\ctrl_fsm_ns[3:0]
    95/129: $6\ctrl_fsm_ns[3:0]
    96/129: $2\retain_id[0:0]
    97/129: $3\halt_if[0:0]
    98/129: $5\ctrl_fsm_ns[3:0]
    99/129: $2\halt_if[0:0]
   100/129: $4\ctrl_fsm_ns[3:0]
   101/129: $3\ctrl_fsm_ns[3:0]
   102/129: $2\ctrl_fsm_ns[3:0]
   103/129: $2\ctrl_busy_o[0:0]
   104/129: $1\ctrl_fsm_ns[3:0]
   105/129: $1\pc_set_spec_o[0:0]
   106/129: $1\pc_set_o[0:0]
   107/129: $1\pc_mux_o[2:0]
   108/129: $1\instr_req_o[0:0]
   109/129: $1$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:704$4858$\inp[5:0]$4909
   110/129: $1$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:704$4858$\sv2v_cast_6[5:0]$4908
   111/129: $1\retain_id[0:0]
   112/129: $1\halt_if[0:0]
   113/129: $1\debug_mode_d[0:0]
   114/129: $1\nmi_mode_d[0:0]
   115/129: $1\controller_run_o[0:0]
   116/129: $1\flush_id[0:0]
   117/129: $1\perf_tbranch_o[0:0]
   118/129: $1\perf_jump_o[0:0]
   119/129: $1\debug_csr_save_o[0:0]
   120/129: $1\debug_cause_o[2:0]
   121/129: $1\csr_mtval_o[31:0]
   122/129: $1\csr_save_cause_o[0:0]
   123/129: $1\csr_restore_dret_id_o[0:0]
   124/129: $1\csr_restore_mret_id_o[0:0]
   125/129: $1\csr_save_id_o[0:0]
   126/129: $1\csr_save_if_o[0:0]
   127/129: $1\exc_cause_o[5:0]
   128/129: $1\exc_pc_mux_o[1:0]
   129/129: $1\ctrl_busy_o[0:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:543$4904'.
     1/14: $14\mfip_id[3:0]
     2/14: $13\mfip_id[3:0]
     3/14: $12\mfip_id[3:0]
     4/14: $11\mfip_id[3:0]
     5/14: $10\mfip_id[3:0]
     6/14: $9\mfip_id[3:0]
     7/14: $8\mfip_id[3:0]
     8/14: $7\mfip_id[3:0]
     9/14: $6\mfip_id[3:0]
    10/14: $5\mfip_id[3:0]
    11/14: $4\mfip_id[3:0]
    12/14: $3\mfip_id[3:0]
    13/14: $2\mfip_id[3:0]
    14/14: $1\mfip_id[3:0]
Creating decoders for process `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:56$3417'.
     1/1: $0\TMROV[0:0]
Creating decoders for process `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:46$3415'.
     1/1: $0\TMR[31:0]
Creating decoders for process `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:35$3413'.
     1/1: $0\clkdiv[31:0]
Creating decoders for process `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
     1/8: $0\clk_count[7:0]
     2/8: $0\stop_s[0:0]
     3/8: $0\shift_count[4:0]
     4/8: $0\state[0:0]
     5/8: $0\sclk[0:0]
     6/8: $0\csb[0:0]
     7/8: $0\done[0:0]
     8/8: $0\busy[0:0]
Creating decoders for process `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:85$3342'.
     1/1: $0\DONE[0:0]
Creating decoders for process `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:64$3330'.
     1/1: $0\SPI_DATAi_REG[7:0]
Creating decoders for process `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:53$3324'.
     1/1: $0\SPI_CFG_REG[9:0]
Creating decoders for process `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:42$3318'.
     1/1: $0\SPI_CTRL_REG[1:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4818'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4817'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4816'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4815'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4814'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4813'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4812'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4811'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4810'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4809'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:917$4808'.
     1/1: $1\result_o[31:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:484$4807'.
     1/1: $1\bwlogic_result[31:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:472$4796'.
     1/1: $1\bwlogic_op_b_negate[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:445$4790'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:429$4788'.
     1/2: $2\shift_left[0:0]
     2/2: $1\shift_left[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:423$4782'.
     1/1: $1\shift_amt[4:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:421$4779'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:383$4774'.
     1/1: $1\cmp_result[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:377$4769'.
     1/1: $1\is_greater_equal[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:370$4767'.
     1/1: $1\cmp_signed[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:358$4765'.
     1/1: $1\adder_in_b[32:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:348$4762'.
     1/1: $1\adder_op_b_negate[0:0]
Creating decoders for process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:197$3231'.
     1/1: $0\PWRITE[0:0]
Creating decoders for process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:185$3227'.
     1/1: $0\PENABLE[0:0]
Creating decoders for process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:165$3223'.
     1/1: $0\PADDR[31:0]
Creating decoders for process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:147$3217'.
     1/1: $0\HREADYOUT[0:0]
Creating decoders for process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:133$3216'.
     1/1: $1\HREADY_next[0:0]
Creating decoders for process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:122$3214'.
     1/1: $0\CurrentState[1:0]
Creating decoders for process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:87$3212'.
     1/4: $4\NextState[1:0]
     2/4: $3\NextState[1:0]
     3/4: $2\NextState[1:0]
     4/4: $1\NextState[1:0]
Creating decoders for process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:66$3210'.
     1/2: $0\last_HWRITE[0:0]
     2/2: $0\last_HADDR[31:0]
Creating decoders for process `\apb_sys_0.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_sys_0.v:52$3202'.
     1/2: $0\PSEL[0:0]
     2/2: $0\PSEL_next_next[0:0]
Creating decoders for process `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_compressed_decoder.v:320$3188'.
     1/25: $11\instr_o[31:0]
     2/25: $10\instr_o[31:0]
     3/25: $14\illegal_instr_o[0:0]
     4/25: $9\instr_o[31:0]
     5/25: $13\illegal_instr_o[0:0]
     6/25: $12\illegal_instr_o[0:0]
     7/25: $8\instr_o[31:0]
     8/25: $11\illegal_instr_o[0:0]
     9/25: $10\illegal_instr_o[0:0]
    10/25: $9\illegal_instr_o[0:0]
    11/25: $7\instr_o[31:0]
    12/25: $6\instr_o[31:0]
    13/25: $8\illegal_instr_o[0:0]
    14/25: $7\illegal_instr_o[0:0]
    15/25: $6\illegal_instr_o[0:0]
    16/25: $5\instr_o[31:0]
    17/25: $5\illegal_instr_o[0:0]
    18/25: $4\instr_o[31:0]
    19/25: $3\instr_o[31:0]
    20/25: $4\illegal_instr_o[0:0]
    21/25: $3\illegal_instr_o[0:0]
    22/25: $2\illegal_instr_o[0:0]
    23/25: $2\instr_o[31:0]
    24/25: $1\illegal_instr_o[0:0]
    25/25: $1\instr_o[31:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:585$4728'.
     1/1: $0\gen_mult_fast.mult_state_q[1:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
     1/16: $1\accum[33:0] [33:18]
     2/16: $1\accum[33:0] [17:0]
     3/16: $2\gen_mult_fast.mult_state_d[1:0]
     4/16: $2\mult_valid[0:0]
     5/16: $3\mac_res_d[33:0]
     6/16: $2\accum[33:0]
     7/16: $2\mac_res_d[33:0]
     8/16: $1\gen_mult_fast.mult_state_d[1:0]
     9/16: $1\mac_res_d[33:0]
    10/16: $2\mult_hold[0:0]
    11/16: $1\sign_b[0:0]
    12/16: $1\sign_a[0:0]
    13/16: $1\gen_mult_fast.mult_op_b[15:0]
    14/16: $1\gen_mult_fast.mult_op_a[15:0]
    15/16: $1\mult_hold[0:0]
    16/16: $1\mult_valid[0:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
     1/16: $4\op_remainder_d[33:0]
     2/16: $3\op_remainder_d[33:0]
     3/16: $2\div_by_zero_d[0:0]
     4/16: $2\md_state_d[2:0]
     5/16: $2\op_remainder_d[33:0]
     6/16: $1\div_counter_d[4:0]
     7/16: $1\alu_operand_b_o[32:0]
     8/16: $1\alu_operand_a_o[32:0]
     9/16: $1\op_remainder_d[33:0]
    10/16: $1\div_by_zero_d[0:0]
    11/16: $1\md_state_d[2:0]
    12/16: $1\div_hold[0:0]
    13/16: $1\div_valid[0:0]
    14/16: $1\op_quotient_d[31:0]
    15/16: $1\op_denominator_d[31:0]
    16/16: $1\op_numerator_d[31:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:598$4680'.
     1/1: $1\is_greater_equal[0:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:392$4670'.
     1/5: $0\div_counter_q[4:0]
     2/5: $0\op_quotient_q[31:0]
     3/5: $0\div_by_zero_q[0:0]
     4/5: $0\op_numerator_q[31:0]
     5/5: $0\md_state_q[2:0]
Creating decoders for process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4664'.
     1/1: $0\rdata_q[5:0]
Creating decoders for process `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4662'.
     1/1: $0\rdata_q[17:0]
Creating decoders for process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4660'.
     1/1: $0\rdata_q[31:0]
Creating decoders for process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4658'.
     1/1: $0\rdata_q[31:0]
Creating decoders for process `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4656'.
     1/1: $0\rdata_q[2:0]
Creating decoders for process `\QSIXIP_RUN.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:370$1573'.
     1/1: { $1\fcen[0:0] $1\clken[0:0] $1\fdoe[3:0] $1\fdo[3:0] }
Creating decoders for process `\QSIXIP_INIT.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:320$1572'.
     1/1: { $1\fcen[0:0] $1\clken[0:0] $1\fdoe[3:0] $1\fdo[3:0] }
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1569'.
     1/1: $1$mem2reg_rd$\CD$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:183$1466_DATA[63:0]$1571
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1566'.
     1/1: $1$mem2reg_rd$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:75$1463_DATA[15:0]$1568
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1563'.
     1/1: $1$mem2reg_rd$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:74$1462_DATA[15:0]$1565
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1560'.
     1/1: $1$mem2reg_rd$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:72$1461_DATA[15:0]$1562
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:279$1557'.
     1/16: $0\fData1[31:0] [31:28]
     2/16: $0\fData1[31:0] [27:24]
     3/16: $0\fData1[31:0] [23:20]
     4/16: $0\fData1[31:0] [19:16]
     5/16: $0\fData1[31:0] [15:12]
     6/16: $0\fData1[31:0] [11:8]
     7/16: $0\fData1[31:0] [7:4]
     8/16: $0\fData1[31:0] [3:0]
     9/16: $0\fData0[31:0] [27:24]
    10/16: $0\fData0[31:0] [23:20]
    11/16: $0\fData0[31:0] [19:16]
    12/16: $0\fData0[31:0] [15:12]
    13/16: $0\fData0[31:0] [11:8]
    14/16: $0\fData0[31:0] [7:4]
    15/16: $0\fData0[31:0] [3:0]
    16/16: $0\fData0[31:0] [31:28]
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:244$1539'.
     1/1: $0\counter[7:0]
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:235$1536'.
     1/1: $1\next_count[7:0]
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:226$1534'.
     1/1: $0\state[1:0]
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:205$1528'.
     1/4: $4\next_state[1:0]
     2/4: $3\next_state[1:0]
     3/4: $2\next_state[1:0]
     4/4: $1\next_state[1:0]
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:188$1525'.
     1/4: $0\fcen[0:0]
     2/4: $0\clken[0:0]
     3/4: $0\fdoe[3:0]
     4/4: $0\fdo[3:0]
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:124$1517'.
     1/1: $0\HREADYOUT[0:0]
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:117$1514'.
     1/2: $2\start[0:0]
     2/2: $1\start[0:0]
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:107$1508'.
     1/1: $0\pending_flag[0:0]
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:92$1506'.
     1/1: $0\APhase_HADDR[31:0]
Creating decoders for process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
     1/78: $2$mem2reg_wr$\CD$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:87$1465_ADDR[4:0]$1498
     2/78: $2$mem2reg_wr$\CD$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:87$1465_DATA[63:0]$1499
     3/78: $2$mem2reg_wr$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:86$1464_ADDR[4:0]$1496
     4/78: $2$mem2reg_wr$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:86$1464_DATA[15:0]$1497
     5/78: $2$lookahead\CV$1476[31:0]$1500
     6/78: $2$bitselwrite$data$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:85$1460[31:0]$1495
     7/78: $2$bitselwrite$mask$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:85$1459[31:0]$1494
     8/78: $1$lookahead\CV$1476[31:0]$1492
     9/78: $1$mem2reg_wr$\CD$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:87$1465_DATA[63:0]$1491
    10/78: $1$mem2reg_wr$\CD$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:87$1465_ADDR[4:0]$1490
    11/78: $1$mem2reg_wr$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:86$1464_DATA[15:0]$1489
    12/78: $1$mem2reg_wr$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:86$1464_ADDR[4:0]$1488
    13/78: $1$bitselwrite$data$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:85$1460[31:0]$1487
    14/78: $1$bitselwrite$mask$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:85$1459[31:0]$1486
    15/78: $0\CD[31][63:0]
    16/78: $0\CD[30][63:0]
    17/78: $0\CD[29][63:0]
    18/78: $0\CD[28][63:0]
    19/78: $0\CD[27][63:0]
    20/78: $0\CD[26][63:0]
    21/78: $0\CD[25][63:0]
    22/78: $0\CD[24][63:0]
    23/78: $0\CD[23][63:0]
    24/78: $0\CD[22][63:0]
    25/78: $0\CD[21][63:0]
    26/78: $0\CD[20][63:0]
    27/78: $0\CD[19][63:0]
    28/78: $0\CD[18][63:0]
    29/78: $0\CD[17][63:0]
    30/78: $0\CD[16][63:0]
    31/78: $0\CD[15][63:0]
    32/78: $0\CD[14][63:0]
    33/78: $0\CD[13][63:0]
    34/78: $0\CD[12][63:0]
    35/78: $0\CD[11][63:0]
    36/78: $0\CD[10][63:0]
    37/78: $0\CD[9][63:0]
    38/78: $0\CD[8][63:0]
    39/78: $0\CD[7][63:0]
    40/78: $0\CD[6][63:0]
    41/78: $0\CD[5][63:0]
    42/78: $0\CD[4][63:0]
    43/78: $0\CD[3][63:0]
    44/78: $0\CD[2][63:0]
    45/78: $0\CD[1][63:0]
    46/78: $0\CD[0][63:0]
    47/78: $0\CT[31][15:0]
    48/78: $0\CT[30][15:0]
    49/78: $0\CT[29][15:0]
    50/78: $0\CT[28][15:0]
    51/78: $0\CT[27][15:0]
    52/78: $0\CT[26][15:0]
    53/78: $0\CT[25][15:0]
    54/78: $0\CT[24][15:0]
    55/78: $0\CT[23][15:0]
    56/78: $0\CT[22][15:0]
    57/78: $0\CT[21][15:0]
    58/78: $0\CT[20][15:0]
    59/78: $0\CT[19][15:0]
    60/78: $0\CT[18][15:0]
    61/78: $0\CT[17][15:0]
    62/78: $0\CT[16][15:0]
    63/78: $0\CT[15][15:0]
    64/78: $0\CT[14][15:0]
    65/78: $0\CT[13][15:0]
    66/78: $0\CT[12][15:0]
    67/78: $0\CT[11][15:0]
    68/78: $0\CT[10][15:0]
    69/78: $0\CT[9][15:0]
    70/78: $0\CT[8][15:0]
    71/78: $0\CT[7][15:0]
    72/78: $0\CT[6][15:0]
    73/78: $0\CT[5][15:0]
    74/78: $0\CT[4][15:0]
    75/78: $0\CT[3][15:0]
    76/78: $0\CT[2][15:0]
    77/78: $0\CT[1][15:0]
    78/78: $0\CT[0][15:0]
Creating decoders for process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:179$1456'.
     1/1: $0\buf_pend[0:0]
Creating decoders for process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:173$1454'.
     1/1: $0\buf_hit[0:0]
Creating decoders for process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:141$1446'.
     1/1: $0\buf_addr[11:0]
Creating decoders for process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:135$1444'.
     1/1: $0\buf_we[3:0]
Creating decoders for process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:130$1442'.
     1/1: $0\buf_data[7:0]
Creating decoders for process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:126$1440'.
     1/1: $0\buf_data[15:8]
Creating decoders for process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:122$1438'.
     1/1: $0\buf_data[23:16]
Creating decoders for process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:118$1436'.
     1/1: $0\buf_data[31:24]
Creating decoders for process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:112$1434'.
     1/1: $0\buf_data_en[0:0]
Creating decoders for process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4654'.
     1/1: $0\rdata_q[31:0]
Creating decoders for process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:40$4652'.
     1/1: $0\counter_q[63:0]
Creating decoders for process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:23$4649'.
     1/4: $2\counter_d[63:0]
     2/4: $1\counter_d[63:0]
     3/4: $1\counter_load[63:0] [63:32]
     4/4: $1\counter_load[63:0] [31:0]
Creating decoders for process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4647'.
     1/1: $0\rdata_q[5:0]
Creating decoders for process `\prim_clock_gating.$proc$/openLANE_flow/designs/IBEX_SoC/src/prim_clock_gating.v:16$1053'.
     1/1: $1\en_latch[0:0]
Creating decoders for process `$paramod\sro\DATA_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:234$5748'.
     1/2: $0\dout_s[0:0]
     2/2: $0\datao[7:0]
Creating decoders for process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:144$302'.
     1/1: $0\WGPIODIR[15:0]
Creating decoders for process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:133$298'.
     1/1: $0\WGPIOPD[15:0]
Creating decoders for process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:122$294'.
     1/1: $0\WGPIOPU[15:0]
Creating decoders for process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:111$290'.
     1/1: $0\WGPIODOUT[15:0]
Creating decoders for process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:85$281'.
     1/1: $0\IOTRANS[0:0]
Creating decoders for process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:76$279'.
     1/1: $0\IOSIZE[2:0]
Creating decoders for process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:67$277'.
     1/1: $0\IOWRITE[0:0]
Creating decoders for process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:59$275'.
     1/1: $0\IOADDR[23:0]
Creating decoders for process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:51$272'.
     1/1: $0\IOSEL[0:0]
Creating decoders for process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:170$4454'.
     1/5: $0\rdata_pmp_err_q[1:0]
     2/5: $0\branch_discard_q[1:0]
     3/5: $0\rdata_outstanding_q[1:0]
     4/5: $0\discard_req_q[0:0]
     5/5: $0\valid_req_q[0:0]
Creating decoders for process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:146$4444'.
     1/1: $0\fetch_addr_q[31:0]
Creating decoders for process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:123$4435'.
     1/1: $0\stored_addr_q[31:0]
Creating decoders for process `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:50$250'.
     1/1: $0\pwm[0:0]
Creating decoders for process `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:39$248'.
     1/1: $0\TMR[31:0]
Creating decoders for process `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:28$246'.
     1/1: $0\clkdiv[31:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4407'.
     1/2: $0\err_q[2:2]
     2/2: $0\rdata_q[95:64]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4406'.
     1/2: $0\err_q[1:1]
     2/2: $0\rdata_q[63:32]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4405'.
     1/2: $0\err_q[0:0]
     2/2: $0\rdata_q[31:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:122$4376'.
     1/1: $0\valid_q[2:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:90$4363'.
     1/1: $0\instr_addr_q[30:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:70$4356'.
     1/5: $2\out_valid_o[0:0]
     2/5: $1\out_valid_o[0:0]
     3/5: $1\out_err_plus2_o[0:0]
     4/5: $1\out_err_o[0:0]
     5/5: $1\out_rdata_o[31:0]
Creating decoders for process `$paramod\sri\DATA_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:205$5745'.
     1/1: $0\sr_reg[7:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:0$5744'.
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:598$5741'.
     1/8: $0\pc_id_o[31:0]
     2/8: $0\illegal_c_insn_id_o[0:0]
     3/8: $0\instr_fetch_err_plus2_o[0:0]
     4/8: $0\instr_fetch_err_o[0:0]
     5/8: $0\instr_is_compressed_id_o[0:0]
     6/8: $0\instr_rdata_c_id_o[15:0]
     7/8: $0\instr_rdata_alu_id_o[31:0]
     8/8: $0\instr_rdata_id_o[31:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:586$5739'.
     1/2: $0\instr_new_id_q[0:0]
     2/2: $0\instr_valid_id_q[0:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:449$5725'.
     1/1: $1\fetch_addr_n[31:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:439$5720'.
     1/1: $1\exc_pc[31:0]
Creating decoders for process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:88$4319'.
     1/1: $0\db_reg[3:0]
Creating decoders for process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:69$4310'.
     1/1: $0\IOTRANS[0:0]
Creating decoders for process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:60$4308'.
     1/1: $0\IOSIZE[2:0]
Creating decoders for process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:51$4306'.
     1/1: $0\IOWRITE[0:0]
Creating decoders for process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:43$4304'.
     1/1: $0\IOADDR[23:0]
Creating decoders for process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:35$4301'.
     1/1: $0\IOSEL[0:0]

54.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\i2c_master.\io_do' from process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:789$4283'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\bt_b_operand_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:0$5719'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\bt_a_operand_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:0$5718'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\imm_b' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:661$5693'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\branch_spec' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\perf_branch_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\branch_set_d' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\branch_not_set' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\jump_set' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_multdiv' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_branch' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_jump' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\rf_we_raw' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_alu' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\id_fsm_d' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\csr_pipe_flush' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:760$5581$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:760$5581$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:760$5582$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:760$5582$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5583$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5583$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5584$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5584$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5585$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5585$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5586$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5586$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\rf_wdata_id_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:689$5598'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\alu_operand_a' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:616$5592'.
No latch inferred for signal `\IBEX_wrapper.\data_addr_off' from process `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:126$3990'.
No latch inferred for signal `\IBEX_wrapper.\data_hsize' from process `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:114$3989'.
Latch inferred for signal `\IBEX_wrapper.\nstate' from process `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:92$3964': $auto$proc_dlatch.cc:430:proc_dlatch$15224
No latch inferred for signal `\ibex_core.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:951$3912$\sv2v_cast_12' from process `\ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:0$3934'.
No latch inferred for signal `\ibex_core.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:951$3913$\sv2v_cast_12' from process `\ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:0$3934'.
No latch inferred for signal `\ibex_core.$func$\sv2v_cast_12$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:951$3913$\inp' from process `\ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:0$3934'.
No latch inferred for signal `$paramod\ibex_wb_stage\WritebackStage=1'0.\rf_wdata_wb_mux[0]' from process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_wb_stage.v:0$5572'.
No latch inferred for signal `$paramod\ibex_wb_stage\WritebackStage=1'0.\rf_wdata_wb_mux[1]' from process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_wb_stage.v:0$5572'.
No latch inferred for signal `\ibex_load_store_unit.\data_req_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
No latch inferred for signal `\ibex_load_store_unit.\addr_incr_req_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
No latch inferred for signal `\ibex_load_store_unit.\perf_load_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
No latch inferred for signal `\ibex_load_store_unit.\perf_store_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
No latch inferred for signal `\ibex_load_store_unit.\addr_update' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
No latch inferred for signal `\ibex_load_store_unit.\ctrl_update' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_update' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
No latch inferred for signal `\ibex_load_store_unit.\handle_misaligned_d' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
No latch inferred for signal `\ibex_load_store_unit.\pmp_err_d' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
No latch inferred for signal `\ibex_load_store_unit.\lsu_err_d' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
No latch inferred for signal `\ibex_load_store_unit.\ls_fsm_ns' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
No latch inferred for signal `\ibex_load_store_unit.\data_rdata_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:218$3670'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_b_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:194$3665'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_h_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:170$3660'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_w_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:162$3659'.
No latch inferred for signal `\ibex_load_store_unit.\data_wdata' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:131$3652'.
No latch inferred for signal `\ibex_load_store_unit.\data_be' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:91$3649'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[0]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[1]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[2]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[3]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[4]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[5]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[6]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[7]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[8]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[9]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[10]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[11]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[12]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[13]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[14]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[15]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[1]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[3]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[4]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[5]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[6]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[7]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[8]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[9]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[10]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[11]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[12]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[13]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[14]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[15]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[16]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[17]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[18]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[19]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[20]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[21]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[22]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[23]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[24]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[25]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[26]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[27]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[28]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[29]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[30]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[31]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1275$5349$\sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5528'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1275$5354$\sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5528'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1275$5354$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5528'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1083$5255$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5525'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1083$5353$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5525'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1083$5254$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5522'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1083$5352$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5522'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1083$5253$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5519'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1083$5351$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5519'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1083$5252$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5516'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1083$5350$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5516'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\gen_mhpmevent.sv2v_autoblock_8.i' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\gen_mhpmevent.sv2v_autoblock_9.i' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[0]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[1]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[2]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[3]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[4]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[5]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[6]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[7]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[8]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[9]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[10]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[11]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[12]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[13]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[14]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[15]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[16]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[17]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[18]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[19]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[20]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[21]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[22]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[23]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[24]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[25]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[26]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[27]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[28]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[29]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[30]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[31]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter_incr' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1095$5505'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\gen_mhpmcounter_incr.sv2v_autoblock_7.i' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1095$5505'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcountinhibit_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1089$5503'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\csr_wdata_int' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:783$5490'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\exception_pc' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\priv_lvl_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstatus_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstatus_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mie_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mscratch_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mepc_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mepc_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcause_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcause_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtval_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtval_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtvec_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtvec_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dcsr_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dcsr_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\depc_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\depc_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dscratch0_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dscratch1_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_epc_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_cause_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcountinhibit_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounterh_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\cpuctrl_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5242$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5242$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5243$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5243$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5244$\sv2v_cast_2' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5244$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5245$\sv2v_cast_2' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5245$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5246$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5246$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5247$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:687$5247$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$mask$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:716$5248' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$data$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:716$5249' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$mask$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:717$5250' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$data$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:717$5251' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\csr_rdata_int' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\illegal_csr' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2bits$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:614$5240' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2bits$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:615$5241' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:613$5355_ADDR' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:613$5355_DATA' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:614$5356_ADDR' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:614$5356_DATA' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:615$5357_ADDR' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:615$5357_DATA' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\we_a_dec' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\we_a_decoder.sv2v_autoblock_2.i' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5039$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5040$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5041$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5042$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5043$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5044$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5045$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5046$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5047$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5048$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5049$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5050$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5051$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5052$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5053$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5054$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5055$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5056$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5057$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5058$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5059$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5060$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5061$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5062$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5063$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5064$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5065$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5066$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5067$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5068$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5069$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\use_rs3_q' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:443$5007'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\imm_a_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\imm_b_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\bt_a_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\bt_b_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_operator_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_op_a_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_op_b_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_multicycle_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\mult_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\div_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\use_rs3_d' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\opcode_alu' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:728$4964$\sv2v_cast_7' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:728$4964$\inp' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\ebrk_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\mret_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\dret_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\ecall_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\wfi_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\jump_set_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\icache_inval_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_wdata_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_ren_a_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_ren_b_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\multdiv_operator_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\multdiv_signed_mode_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_access_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_req_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_we_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_type_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_sign_extension_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\jump_in_dec_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\branch_in_dec_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\illegal_insn' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_illegal' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_we' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_op' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\opcode' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:494$4963$\sv2v_cast_7' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:494$4963$\inp' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_op_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:461$4968'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\instr_fetch_err_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:517$4962'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\illegal_insn_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:517$4962'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ecall_insn_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:517$4962'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ebrk_insn_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:517$4962'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\store_err_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:517$4962'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\load_err_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:517$4962'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\instr_req_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ctrl_busy_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\pc_set_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\pc_set_spec_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\pc_mux_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\nt_branch_mispredict_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\exc_pc_mux_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\exc_cause_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_if_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_id_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_wb_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_restore_mret_id_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_restore_dret_id_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_cause_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_mtval_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_cause_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_csr_save_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\perf_jump_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\perf_tbranch_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\flush_id' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\controller_run_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ctrl_fsm_ns' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\nmi_mode_d' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_mode_d' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\halt_if' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\retain_id' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:704$4858$\sv2v_cast_6' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$func$\sv2v_cast_6$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:704$4858$\inp' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\mfip_id' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:543$4904'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\imd_val_we_o' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4818'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\imd_val_d_o' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4817'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\multicycle_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4816'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\clmul_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4815'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\invbutterfly_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4814'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\butterfly_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4813'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shuffle_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4812'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\rev_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4811'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\singlebit_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4810'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\pack_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4809'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\result_o' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:917$4808'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\bwlogic_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:484$4807'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\bwlogic_op_b_negate' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:472$4796'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\sv2v_autoblock_6.i' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:445$4790'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_operand' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:445$4790'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_result_ext' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:445$4790'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\unused_shift_result_ext' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:445$4790'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:445$4790'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_result_rev' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:445$4790'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_left' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:429$4788'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_amt [4:0]' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:423$4782'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_amt [5]' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:421$4779'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\cmp_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:383$4774'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\is_greater_equal' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:377$4769'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\cmp_signed' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:370$4767'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\adder_in_b' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:358$4765'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\adder_op_b_negate' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:348$4762'.
No latch inferred for signal `\ahb_2_apb.\HREADY_next' from process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:133$3216'.
No latch inferred for signal `\ahb_2_apb.\NextState' from process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:87$3212'.
No latch inferred for signal `\ibex_compressed_decoder.\instr_o' from process `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_compressed_decoder.v:320$3188'.
No latch inferred for signal `\ibex_compressed_decoder.\illegal_instr_o' from process `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_compressed_decoder.v:320$3188'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\sign_a' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\sign_b' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\accum' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\mult_valid' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\mac_res_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\mult_hold' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_op_a' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_op_b' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_state_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\alu_operand_a_o' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\alu_operand_b_o' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\md_state_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_numerator_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_by_zero_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_remainder_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_denominator_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_quotient_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_valid' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_counter_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_hold' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\is_greater_equal' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:598$4680'.
No latch inferred for signal `\QSIXIP_RUN.\fdo' from process `\QSIXIP_RUN.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:370$1573'.
No latch inferred for signal `\QSIXIP_RUN.\fdoe' from process `\QSIXIP_RUN.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:370$1573'.
No latch inferred for signal `\QSIXIP_RUN.\fcen' from process `\QSIXIP_RUN.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:370$1573'.
No latch inferred for signal `\QSIXIP_RUN.\clken' from process `\QSIXIP_RUN.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:370$1573'.
No latch inferred for signal `\QSIXIP_INIT.\fdo' from process `\QSIXIP_INIT.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:320$1572'.
No latch inferred for signal `\QSIXIP_INIT.\fdoe' from process `\QSIXIP_INIT.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:320$1572'.
No latch inferred for signal `\QSIXIP_INIT.\fcen' from process `\QSIXIP_INIT.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:320$1572'.
No latch inferred for signal `\QSIXIP_INIT.\clken' from process `\QSIXIP_INIT.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:320$1572'.
No latch inferred for signal `\QSPIXIP.$mem2reg_rd$\CD$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:183$1466_DATA' from process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1569'.
No latch inferred for signal `\QSPIXIP.$mem2reg_rd$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:75$1463_DATA' from process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1566'.
No latch inferred for signal `\QSPIXIP.$mem2reg_rd$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:74$1462_DATA' from process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1563'.
No latch inferred for signal `\QSPIXIP.$mem2reg_rd$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:72$1461_DATA' from process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1560'.
No latch inferred for signal `\QSPIXIP.\next_count' from process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:235$1536'.
No latch inferred for signal `\QSPIXIP.\next_state' from process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:205$1528'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\counter_upd' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:23$4649'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\counter_load' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:23$4649'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\we' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:23$4649'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\counter_d' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:23$4649'.
Latch inferred for signal `\prim_clock_gating.\en_latch' from process `\prim_clock_gating.$proc$/openLANE_flow/designs/IBEX_SoC/src/prim_clock_gating.v:16$1053': $auto$proc_dlatch.cc:430:proc_dlatch$15235
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_valid_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:70$4356'.
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_rdata_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:70$4356'.
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_err_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:70$4356'.
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_err_plus2_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:70$4356'.
No latch inferred for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\dummy_instr_id_o' from process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:0$5744'.
No latch inferred for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\fetch_addr_n' from process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:449$5725'.
No latch inferred for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\exc_pc' from process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:439$5720'.

54.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\i2c_master.\i2c_irq' using process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:914$4299'.
  created $adff cell `$procdff$15236' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master.\al' using process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:897$4291'.
  created $adff cell `$procdff$15237' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master.\rxack' using process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:897$4291'.
  created $adff cell `$procdff$15238' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master.\tip' using process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:897$4291'.
  created $adff cell `$procdff$15239' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master.\irq_flag' using process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:897$4291'.
  created $adff cell `$procdff$15240' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master.\cr' using process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:841$4287'.
  created $adff cell `$procdff$15241' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master.\prer' using process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:823$4285'.
  created $adff cell `$procdff$15242' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master.\ctr' using process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:823$4285'.
  created $adff cell `$procdff$15243' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master.\txr' using process `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:823$4285'.
  created $adff cell `$procdff$15244' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_byte_ctrl.\shift' using process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269'.
  created $adff cell `$procdff$15245' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_byte_ctrl.\cmd_ack' using process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269'.
  created $adff cell `$procdff$15246' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_byte_ctrl.\c_state' using process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269'.
  created $adff cell `$procdff$15247' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_byte_ctrl.\ack_out' using process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269'.
  created $adff cell `$procdff$15248' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_byte_ctrl.\core_cmd' using process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269'.
  created $adff cell `$procdff$15249' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_byte_ctrl.\core_txd' using process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269'.
  created $adff cell `$procdff$15250' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_byte_ctrl.\ld' using process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269'.
  created $adff cell `$procdff$15251' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_byte_ctrl.\dcnt' using process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:557$4265'.
  created $adff cell `$procdff$15252' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_byte_ctrl.\sr' using process `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:548$4264'.
  created $adff cell `$procdff$15253' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\cmd_ack' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:258$4259'.
  created $adff cell `$procdff$15254' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\scl_oen' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:258$4259'.
  created $adff cell `$procdff$15255' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\sda_oen' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:258$4259'.
  created $adff cell `$procdff$15256' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\sda_chk' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:258$4259'.
  created $adff cell `$procdff$15257' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\c_state' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:258$4259'.
  created $adff cell `$procdff$15258' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\dout' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:232$4256'.
  created $dff cell `$procdff$15259' with positive edge clock.
Creating register for signal `\i2c_master_bit_ctrl.\al' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:224$4247'.
  created $adff cell `$procdff$15260' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\cmd_stop' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:218$4245'.
  created $adff cell `$procdff$15261' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\busy' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:208$4241'.
  created $adff cell `$procdff$15262' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\sta_condition' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:194$4234'.
  created $adff cell `$procdff$15263' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\sto_condition' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:194$4234'.
  created $adff cell `$procdff$15264' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\sSCL' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:172$4223'.
  created $adff cell `$procdff$15265' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\sSDA' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:172$4223'.
  created $adff cell `$procdff$15266' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\dSCL' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:172$4223'.
  created $adff cell `$procdff$15267' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\dSDA' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:172$4223'.
  created $adff cell `$procdff$15268' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\fSCL' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:158$4220'.
  created $adff cell `$procdff$15269' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\fSDA' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:158$4220'.
  created $adff cell `$procdff$15270' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\filter_cnt' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:151$4214'.
  created $adff cell `$procdff$15271' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\cSCL' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:137$4213'.
  created $adff cell `$procdff$15272' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\cSDA' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:137$4213'.
  created $adff cell `$procdff$15273' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\clk_en' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:110$4206'.
  created $adff cell `$procdff$15274' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\cnt' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:110$4206'.
  created $adff cell `$procdff$15275' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\slave_wait' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:100$4195'.
  created $adff cell `$procdff$15276' with positive edge clock and positive level reset.
Creating register for signal `\i2c_master_bit_ctrl.\dscl_oen' using process `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:95$4194'.
  created $dff cell `$procdff$15277' with positive edge clock.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\g_branch_set_flop.branch_set_q' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:863$5699'.
  created $adff cell `$procdff$15278' with positive edge clock and negative level reset.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\imd_val_q [33:0]' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5697'.
  created $adff cell `$procdff$15279' with positive edge clock and negative level reset.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\imd_val_q [67:34]' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5695'.
  created $adff cell `$procdff$15280' with positive edge clock and negative level reset.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\id_fsm_q' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:889$5659'.
  created $adff cell `$procdff$15281' with positive edge clock and negative level reset.
Creating register for signal `\IBEX_wrapper.\state' using process `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:89$3962'.
  created $adff cell `$procdff$15282' with positive edge clock and negative level reset.
Creating register for signal `\openstriVe_soc_mem.\rdata' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15283' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_ADDR' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15284' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_DATA' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15285' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15286' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_ADDR' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15287' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_DATA' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15288' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15289' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_ADDR' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15290' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_DATA' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15291' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15292' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_ADDR' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15293' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_DATA' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15294' with positive edge clock.
Creating register for signal `\openstriVe_soc_mem.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN' using process `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
  created $dff cell `$procdff$15295' with positive edge clock.
Creating register for signal `\ibex_core.\fetch_enable_q' using process `\ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:552$3918'.
  created $adff cell `$procdff$15296' with positive edge clock and negative level reset.
Creating register for signal `\ibex_core.\core_busy_q' using process `\ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:546$3916'.
  created $adff cell `$procdff$15297' with positive edge clock and negative level reset.
Creating register for signal `\APB_PWM32.\TMREN' using process `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:97$3902'.
  created $adff cell `$procdff$15298' with positive edge clock and negative level reset.
Creating register for signal `\APB_PWM32.\TMRCMP2' using process `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:86$3898'.
  created $adff cell `$procdff$15299' with positive edge clock and negative level reset.
Creating register for signal `\APB_PWM32.\TMRCMP1' using process `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:75$3894'.
  created $adff cell `$procdff$15300' with positive edge clock and negative level reset.
Creating register for signal `\APB_PWM32.\PRE' using process `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:64$3890'.
  created $adff cell `$procdff$15301' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_BUS0.\APAGE' using process `\AHBlite_BUS0.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:36$3857'.
  created $adff cell `$procdff$15302' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\handle_misaligned_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:311$3699'.
  created $adff cell `$procdff$15303' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\pmp_err_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:311$3699'.
  created $adff cell `$procdff$15304' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\lsu_err_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:311$3699'.
  created $adff cell `$procdff$15305' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\ls_fsm_cs' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:311$3699'.
  created $adff cell `$procdff$15306' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\addr_last_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:157$3657'.
  created $adff cell `$procdff$15307' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\rdata_offset_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:144$3655'.
  created $adff cell `$procdff$15308' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\data_type_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:144$3655'.
  created $adff cell `$procdff$15309' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\data_sign_ext_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:144$3655'.
  created $adff cell `$procdff$15310' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\data_we_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:144$3655'.
  created $adff cell `$procdff$15311' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\rdata_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:139$3653'.
  created $adff cell `$procdff$15312' with positive edge clock and negative level reset.
Creating register for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcountinhibit_q' using process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1190$5511'.
  created $adff cell `$procdff$15313' with positive edge clock and negative level reset.
Creating register for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\priv_lvl_q' using process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:775$5487'.
  created $adff cell `$procdff$15314' with positive edge clock and negative level reset.
Creating register for signal `\APB_TIMER32.\IRQEN' using process `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:122$3473'.
  created $adff cell `$procdff$15315' with positive edge clock and negative level reset.
Creating register for signal `\APB_TIMER32.\TMREN' using process `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:109$3469'.
  created $adff cell `$procdff$15316' with positive edge clock and negative level reset.
Creating register for signal `\APB_TIMER32.\TMROVCLR' using process `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:98$3465'.
  created $adff cell `$procdff$15317' with positive edge clock and negative level reset.
Creating register for signal `\APB_TIMER32.\TMRCMP' using process `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:87$3461'.
  created $adff cell `$procdff$15318' with positive edge clock and negative level reset.
Creating register for signal `\APB_TIMER32.\PRE' using process `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:76$3457'.
  created $adff cell `$procdff$15319' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [991:960]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5230'.
  created $adff cell `$procdff$15320' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [959:928]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5228'.
  created $adff cell `$procdff$15321' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [927:896]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5226'.
  created $adff cell `$procdff$15322' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [895:864]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5224'.
  created $adff cell `$procdff$15323' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [863:832]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5222'.
  created $adff cell `$procdff$15324' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [831:800]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5220'.
  created $adff cell `$procdff$15325' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [799:768]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5218'.
  created $adff cell `$procdff$15326' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [767:736]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5216'.
  created $adff cell `$procdff$15327' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [735:704]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5214'.
  created $adff cell `$procdff$15328' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [703:672]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5212'.
  created $adff cell `$procdff$15329' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [671:640]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5210'.
  created $adff cell `$procdff$15330' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [639:608]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5208'.
  created $adff cell `$procdff$15331' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [607:576]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5206'.
  created $adff cell `$procdff$15332' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [575:544]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5204'.
  created $adff cell `$procdff$15333' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [543:512]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5202'.
  created $adff cell `$procdff$15334' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [511:480]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5200'.
  created $adff cell `$procdff$15335' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [479:448]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5198'.
  created $adff cell `$procdff$15336' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [447:416]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5196'.
  created $adff cell `$procdff$15337' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [415:384]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5194'.
  created $adff cell `$procdff$15338' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [383:352]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5192'.
  created $adff cell `$procdff$15339' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [351:320]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5190'.
  created $adff cell `$procdff$15340' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [319:288]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5188'.
  created $adff cell `$procdff$15341' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [287:256]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5186'.
  created $adff cell `$procdff$15342' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [255:224]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5184'.
  created $adff cell `$procdff$15343' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [223:192]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5182'.
  created $adff cell `$procdff$15344' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [191:160]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5180'.
  created $adff cell `$procdff$15345' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [159:128]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5178'.
  created $adff cell `$procdff$15346' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [127:96]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5176'.
  created $adff cell `$procdff$15347' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [95:64]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5174'.
  created $adff cell `$procdff$15348' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [63:32]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5172'.
  created $adff cell `$procdff$15349' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [31:0]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5170'.
  created $adff cell `$procdff$15350' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ctrl_fsm_cs' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:833$4960'.
  created $adff cell `$procdff$15351' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\nmi_mode_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:833$4960'.
  created $adff cell `$procdff$15352' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_mode_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:833$4960'.
  created $adff cell `$procdff$15353' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\load_err_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:833$4960'.
  created $adff cell `$procdff$15354' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\store_err_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:833$4960'.
  created $adff cell `$procdff$15355' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\exc_req_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:833$4960'.
  created $adff cell `$procdff$15356' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\illegal_insn_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:833$4960'.
  created $adff cell `$procdff$15357' with positive edge clock and negative level reset.
Creating register for signal `\TIMER32.\TMROV' using process `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:56$3417'.
  created $adff cell `$procdff$15358' with positive edge clock and positive level reset.
Creating register for signal `\TIMER32.\TMR' using process `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:46$3415'.
  created $adff cell `$procdff$15359' with positive edge clock and positive level reset.
Creating register for signal `\TIMER32.\clkdiv' using process `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:35$3413'.
  created $adff cell `$procdff$15360' with positive edge clock and positive level reset.
Creating register for signal `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.\busy' using process `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
  created $adff cell `$procdff$15361' with positive edge clock and negative level reset.
Creating register for signal `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.\done' using process `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
  created $adff cell `$procdff$15362' with positive edge clock and negative level reset.
Creating register for signal `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.\csb' using process `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
  created $adff cell `$procdff$15363' with positive edge clock and negative level reset.
Creating register for signal `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.\sclk' using process `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
  created $adff cell `$procdff$15364' with positive edge clock and negative level reset.
Creating register for signal `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.\clk_count' using process `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
  created $adff cell `$procdff$15365' with positive edge clock and negative level reset.
Creating register for signal `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.\state' using process `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
  created $adff cell `$procdff$15366' with positive edge clock and negative level reset.
Creating register for signal `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.\shift_count' using process `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
  created $adff cell `$procdff$15367' with positive edge clock and negative level reset.
Creating register for signal `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.\stop_s' using process `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
  created $adff cell `$procdff$15368' with positive edge clock and negative level reset.
Creating register for signal `\APB2SPI.\DONE' using process `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:85$3342'.
  created $adff cell `$procdff$15369' with positive edge clock and negative level reset.
Creating register for signal `\APB2SPI.\SPI_DATAi_REG' using process `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:64$3330'.
  created $adff cell `$procdff$15370' with positive edge clock and negative level reset.
Creating register for signal `\APB2SPI.\SPI_CFG_REG' using process `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:53$3324'.
  created $adff cell `$procdff$15371' with positive edge clock and negative level reset.
Creating register for signal `\APB2SPI.\SPI_CTRL_REG' using process `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:42$3318'.
  created $adff cell `$procdff$15372' with positive edge clock and negative level reset.
Creating register for signal `\ahb_2_apb.\PWRITE' using process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:197$3231'.
  created $adff cell `$procdff$15373' with positive edge clock and negative level reset.
Creating register for signal `\ahb_2_apb.\PENABLE' using process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:185$3227'.
  created $adff cell `$procdff$15374' with positive edge clock and negative level reset.
Creating register for signal `\ahb_2_apb.\PADDR' using process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:165$3223'.
  created $adff cell `$procdff$15375' with positive edge clock and negative level reset.
Creating register for signal `\ahb_2_apb.\HREADYOUT' using process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:147$3217'.
  created $adff cell `$procdff$15376' with positive edge clock and negative level reset.
Creating register for signal `\ahb_2_apb.\CurrentState' using process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:122$3214'.
  created $adff cell `$procdff$15377' with positive edge clock and negative level reset.
Creating register for signal `\ahb_2_apb.\last_HADDR' using process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:66$3210'.
  created $adff cell `$procdff$15378' with positive edge clock and negative level reset.
Creating register for signal `\ahb_2_apb.\last_HWRITE' using process `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:66$3210'.
  created $adff cell `$procdff$15379' with positive edge clock and negative level reset.
Creating register for signal `\apb_sys_0.\PSEL_next_next' using process `\apb_sys_0.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_sys_0.v:52$3202'.
  created $dff cell `$procdff$15380' with positive edge clock.
Creating register for signal `\apb_sys_0.\PSEL' using process `\apb_sys_0.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_sys_0.v:52$3202'.
  created $adff cell `$procdff$15381' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_state_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:585$4728'.
  created $adff cell `$procdff$15382' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\md_state_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:392$4670'.
  created $adff cell `$procdff$15383' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_numerator_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:392$4670'.
  created $adff cell `$procdff$15384' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_by_zero_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:392$4670'.
  created $adff cell `$procdff$15385' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_quotient_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:392$4670'.
  created $adff cell `$procdff$15386' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_counter_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:392$4670'.
  created $adff cell `$procdff$15387' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.\rdata_q' using process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4664'.
  created $adff cell `$procdff$15388' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.\rdata_q' using process `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4662'.
  created $adff cell `$procdff$15389' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.\rdata_q' using process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4660'.
  created $adff cell `$procdff$15390' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.\rdata_q' using process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4658'.
  created $adff cell `$procdff$15391' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.\rdata_q' using process `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4656'.
  created $adff cell `$procdff$15392' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\fData0' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:279$1557'.
  created $adff cell `$procdff$15393' with negative edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\fData1' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:279$1557'.
  created $adff cell `$procdff$15394' with negative edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\counter' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:244$1539'.
  created $adff cell `$procdff$15395' with negative edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\state' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:226$1534'.
  created $adff cell `$procdff$15396' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\fdo' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:188$1525'.
  created $adff cell `$procdff$15397' with negative edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\fdoe' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:188$1525'.
  created $adff cell `$procdff$15398' with negative edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\fcen' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:188$1525'.
  created $adff cell `$procdff$15399' with negative edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\clken' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:188$1525'.
  created $adff cell `$procdff$15400' with negative edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\HREADYOUT' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:124$1517'.
  created $adff cell `$procdff$15401' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\start' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:117$1514'.
  created $adff cell `$procdff$15402' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\pending_flag' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:107$1508'.
  created $adff cell `$procdff$15403' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\APhase_HADDR' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:92$1506'.
  created $adff cell `$procdff$15404' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\CV' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $adff cell `$procdff$15405' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.$bitselwrite$mask$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:85$1459' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $adff cell `$procdff$15406' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.$bitselwrite$data$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:85$1460' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $adff cell `$procdff$15407' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.\CT[0]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15408' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[1]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15409' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[2]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15410' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[3]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15411' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[4]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15412' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[5]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15413' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[6]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15414' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[7]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15415' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[8]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15416' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[9]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15417' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[10]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15418' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[11]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15419' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[12]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15420' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[13]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15421' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[14]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15422' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[15]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15423' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[16]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15424' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[17]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15425' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[18]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15426' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[19]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15427' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[20]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15428' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[21]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15429' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[22]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15430' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[23]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15431' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[24]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15432' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[25]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15433' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[26]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15434' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[27]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15435' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[28]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15436' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[29]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15437' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[30]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15438' with positive edge clock.
Creating register for signal `\QSPIXIP.\CT[31]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15439' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[0]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15440' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[1]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15441' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[2]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15442' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[3]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15443' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[4]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15444' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[5]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15445' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[6]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15446' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[7]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15447' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[8]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15448' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[9]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15449' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[10]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15450' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[11]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15451' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[12]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15452' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[13]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15453' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[14]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15454' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[15]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15455' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[16]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15456' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[17]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15457' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[18]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15458' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[19]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15459' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[20]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15460' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[21]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15461' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[22]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15462' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[23]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15463' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[24]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15464' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[25]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15465' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[26]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15466' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[27]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15467' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[28]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15468' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[29]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15469' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[30]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15470' with positive edge clock.
Creating register for signal `\QSPIXIP.\CD[31]' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $dff cell `$procdff$15471' with positive edge clock.
Creating register for signal `\QSPIXIP.$mem2reg_wr$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:86$1464_ADDR' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $adff cell `$procdff$15472' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.$mem2reg_wr$\CT$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:86$1464_DATA' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $adff cell `$procdff$15473' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.$mem2reg_wr$\CD$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:87$1465_ADDR' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $adff cell `$procdff$15474' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.$mem2reg_wr$\CD$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:87$1465_DATA' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $adff cell `$procdff$15475' with positive edge clock and negative level reset.
Creating register for signal `\QSPIXIP.$lookahead\CV$1476' using process `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
  created $adff cell `$procdff$15476' with positive edge clock and negative level reset.
Creating register for signal `\AHBSRAM.\buf_pend' using process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:179$1456'.
  created $adff cell `$procdff$15477' with positive edge clock and negative level reset.
Creating register for signal `\AHBSRAM.\buf_hit' using process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:173$1454'.
  created $adff cell `$procdff$15478' with positive edge clock and negative level reset.
Creating register for signal `\AHBSRAM.\buf_addr' using process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:141$1446'.
  created $adff cell `$procdff$15479' with positive edge clock and negative level reset.
Creating register for signal `\AHBSRAM.\buf_we' using process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:135$1444'.
  created $adff cell `$procdff$15480' with positive edge clock and negative level reset.
Creating register for signal `\AHBSRAM.\buf_data [7:0]' using process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:130$1442'.
  created $dff cell `$procdff$15481' with positive edge clock.
Creating register for signal `\AHBSRAM.\buf_data [15:8]' using process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:126$1440'.
  created $dff cell `$procdff$15482' with positive edge clock.
Creating register for signal `\AHBSRAM.\buf_data [23:16]' using process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:122$1438'.
  created $dff cell `$procdff$15483' with positive edge clock.
Creating register for signal `\AHBSRAM.\buf_data [31:24]' using process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:118$1436'.
  created $dff cell `$procdff$15484' with positive edge clock.
Creating register for signal `\AHBSRAM.\buf_data_en' using process `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:112$1434'.
  created $adff cell `$procdff$15485' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.\rdata_q' using process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4654'.
  created $adff cell `$procdff$15486' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_counter\CounterWidth=64.\counter_q' using process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:40$4652'.
  created $adff cell `$procdff$15487' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.\rdata_q' using process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4647'.
  created $adff cell `$procdff$15488' with positive edge clock and negative level reset.
Creating register for signal `$paramod\sro\DATA_WIDTH=8.\datao' using process `$paramod\sro\DATA_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:234$5748'.
  created $adff cell `$procdff$15489' with positive edge clock and negative level reset.
Creating register for signal `$paramod\sro\DATA_WIDTH=8.\dout_s' using process `$paramod\sro\DATA_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:234$5748'.
  created $adff cell `$procdff$15490' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_GPIO.\WGPIODIR' using process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:144$302'.
  created $adff cell `$procdff$15491' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_GPIO.\WGPIOPD' using process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:133$298'.
  created $adff cell `$procdff$15492' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_GPIO.\WGPIOPU' using process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:122$294'.
  created $adff cell `$procdff$15493' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_GPIO.\WGPIODOUT' using process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:111$290'.
  created $adff cell `$procdff$15494' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_GPIO.\IOTRANS' using process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:85$281'.
  created $adff cell `$procdff$15495' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_GPIO.\IOSIZE' using process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:76$279'.
  created $adff cell `$procdff$15496' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_GPIO.\IOWRITE' using process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:67$277'.
  created $adff cell `$procdff$15497' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_GPIO.\IOADDR' using process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:59$275'.
  created $adff cell `$procdff$15498' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_GPIO.\IOSEL' using process `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:51$272'.
  created $adff cell `$procdff$15499' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\valid_req_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:170$4454'.
  created $adff cell `$procdff$15500' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\discard_req_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:170$4454'.
  created $adff cell `$procdff$15501' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\rdata_outstanding_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:170$4454'.
  created $adff cell `$procdff$15502' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\branch_discard_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:170$4454'.
  created $adff cell `$procdff$15503' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\rdata_pmp_err_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:170$4454'.
  created $adff cell `$procdff$15504' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\fetch_addr_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:146$4444'.
  created $dff cell `$procdff$15505' with positive edge clock.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\stored_addr_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:123$4435'.
  created $dff cell `$procdff$15506' with positive edge clock.
Creating register for signal `\PWM32.\pwm' using process `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:50$250'.
  created $adff cell `$procdff$15507' with positive edge clock and positive level reset.
Creating register for signal `\PWM32.\TMR' using process `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:39$248'.
  created $adff cell `$procdff$15508' with positive edge clock and positive level reset.
Creating register for signal `\PWM32.\clkdiv' using process `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:28$246'.
  created $adff cell `$procdff$15509' with positive edge clock and positive level reset.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\rdata_q [95:64]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4407'.
  created $dff cell `$procdff$15510' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\err_q [2]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4407'.
  created $dff cell `$procdff$15511' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\rdata_q [63:32]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4406'.
  created $dff cell `$procdff$15512' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\err_q [1]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4406'.
  created $dff cell `$procdff$15513' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\rdata_q [31:0]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4405'.
  created $dff cell `$procdff$15514' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\err_q [0]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4405'.
  created $dff cell `$procdff$15515' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\valid_q' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:122$4376'.
  created $adff cell `$procdff$15516' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\instr_addr_q' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:90$4363'.
  created $dff cell `$procdff$15517' with positive edge clock.
Creating register for signal `$paramod\sri\DATA_WIDTH=8.\sr_reg' using process `$paramod\sri\DATA_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:205$5745'.
  created $adff cell `$procdff$15518' with positive edge clock and negative level reset.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_rdata_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:598$5741'.
  created $dff cell `$procdff$15519' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_rdata_alu_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:598$5741'.
  created $dff cell `$procdff$15520' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_rdata_c_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:598$5741'.
  created $dff cell `$procdff$15521' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_is_compressed_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:598$5741'.
  created $dff cell `$procdff$15522' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_fetch_err_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:598$5741'.
  created $dff cell `$procdff$15523' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_fetch_err_plus2_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:598$5741'.
  created $dff cell `$procdff$15524' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\illegal_c_insn_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:598$5741'.
  created $dff cell `$procdff$15525' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\pc_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:598$5741'.
  created $dff cell `$procdff$15526' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_valid_id_q' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:586$5739'.
  created $adff cell `$procdff$15527' with positive edge clock and negative level reset.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_new_id_q' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:586$5739'.
  created $adff cell `$procdff$15528' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_db_reg.\db_reg' using process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:88$4319'.
  created $adff cell `$procdff$15529' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_db_reg.\IOTRANS' using process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:69$4310'.
  created $adff cell `$procdff$15530' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_db_reg.\IOSIZE' using process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:60$4308'.
  created $adff cell `$procdff$15531' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_db_reg.\IOWRITE' using process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:51$4306'.
  created $adff cell `$procdff$15532' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_db_reg.\IOADDR' using process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:43$4304'.
  created $adff cell `$procdff$15533' with positive edge clock and negative level reset.
Creating register for signal `\AHBlite_db_reg.\IOSEL' using process `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:35$4301'.
  created $adff cell `$procdff$15534' with positive edge clock and negative level reset.

54.2.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:914$4299'.
Removing empty process `i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:897$4291'.
Found and cleaned up 3 empty switches in `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:841$4287'.
Removing empty process `i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:841$4287'.
Found and cleaned up 2 empty switches in `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:823$4285'.
Removing empty process `i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:823$4285'.
Found and cleaned up 2 empty switches in `\i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:789$4283'.
Removing empty process `i2c_master.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:789$4283'.
Found and cleaned up 15 empty switches in `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269'.
Removing empty process `i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:572$4269'.
Found and cleaned up 2 empty switches in `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:557$4265'.
Removing empty process `i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:557$4265'.
Found and cleaned up 2 empty switches in `\i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:548$4264'.
Removing empty process `i2c_master_byte_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:548$4264'.
Found and cleaned up 4 empty switches in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:258$4259'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:258$4259'.
Found and cleaned up 1 empty switch in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:232$4256'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:232$4256'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:224$4247'.
Found and cleaned up 1 empty switch in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:218$4245'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:218$4245'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:208$4241'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:194$4234'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:172$4223'.
Found and cleaned up 1 empty switch in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:158$4220'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:158$4220'.
Found and cleaned up 2 empty switches in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:151$4214'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:151$4214'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:137$4213'.
Found and cleaned up 2 empty switches in `\i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:110$4206'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:110$4206'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:100$4195'.
Removing empty process `i2c_master_bit_ctrl.$proc$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:95$4194'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:0$5719'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:0$5718'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:863$5699'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5697'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5697'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5695'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:679$5695'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:661$5693'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:661$5693'.
Found and cleaned up 6 empty switches in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:896$5661'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:889$5659'.
Found and cleaned up 4 empty switches in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:757$5599'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:689$5598'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:689$5598'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:616$5592'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:616$5592'.
Found and cleaned up 1 empty switch in `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:126$3990'.
Removing empty process `IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:126$3990'.
Found and cleaned up 1 empty switch in `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:114$3989'.
Removing empty process `IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:114$3989'.
Found and cleaned up 5 empty switches in `\IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:92$3964'.
Removing empty process `IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:92$3964'.
Removing empty process `IBEX_wrapper.$proc$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:89$3962'.
Found and cleaned up 5 empty switches in `\openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
Removing empty process `openstriVe_soc_mem.$proc$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:12$3943'.
Removing empty process `ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:0$3934'.
Found and cleaned up 1 empty switch in `\ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:552$3918'.
Removing empty process `ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:552$3918'.
Removing empty process `ibex_core.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_core.v:546$3916'.
Found and cleaned up 1 empty switch in `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:97$3902'.
Removing empty process `APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:97$3902'.
Found and cleaned up 1 empty switch in `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:86$3898'.
Removing empty process `APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:86$3898'.
Found and cleaned up 1 empty switch in `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:75$3894'.
Removing empty process `APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:75$3894'.
Found and cleaned up 1 empty switch in `\APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:64$3890'.
Removing empty process `APB_PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:64$3890'.
Found and cleaned up 1 empty switch in `\AHBlite_BUS0.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:36$3857'.
Removing empty process `AHBlite_BUS0.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:36$3857'.
Removing empty process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_wb_stage.v:0$5572'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:311$3699'.
Found and cleaned up 8 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:231$3678'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:218$3670'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:218$3670'.
Found and cleaned up 5 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:194$3665'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:194$3665'.
Found and cleaned up 5 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:170$3660'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:170$3660'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:162$3659'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:162$3659'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:157$3657'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:157$3657'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:144$3655'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:144$3655'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:139$3653'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:139$3653'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:131$3652'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:131$3652'.
Found and cleaned up 7 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:91$3649'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:91$3649'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5532'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5528'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5525'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5522'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5519'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5516'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1190$5511'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1117$5506'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1095$5505'.
Found and cleaned up 1 empty switch in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1089$5503'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:1089$5503'.
Found and cleaned up 1 empty switch in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:783$5490'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:783$5490'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:775$5487'.
Found and cleaned up 9 empty switches in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:653$5420'.
Found and cleaned up 4 empty switches in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:543$5380'.
Found and cleaned up 1 empty switch in `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:122$3473'.
Removing empty process `APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:122$3473'.
Found and cleaned up 1 empty switch in `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:109$3469'.
Removing empty process `APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:109$3469'.
Found and cleaned up 1 empty switch in `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:98$3465'.
Removing empty process `APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:98$3465'.
Found and cleaned up 1 empty switch in `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:87$3461'.
Removing empty process `APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:87$3461'.
Found and cleaned up 1 empty switch in `\APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:76$3457'.
Removing empty process `APB_TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:76$3457'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5230'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5230'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5228'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5228'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5226'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5226'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5224'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5224'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5222'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5222'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5220'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5220'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5218'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5218'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5216'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5216'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5214'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5214'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5212'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5212'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5210'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5210'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5208'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5208'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5206'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5206'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5204'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5204'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5202'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5202'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5200'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5200'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5198'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5198'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5196'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5196'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5194'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5194'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5192'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5192'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5190'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5190'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5188'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5188'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5186'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5186'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5184'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5184'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5182'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5182'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5180'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5180'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5178'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5178'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5176'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5176'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5174'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5174'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5172'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5172'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5170'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:47$5170'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:37$5070'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:443$5007'.
Found and cleaned up 14 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:720$4992'.
Found and cleaned up 29 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:470$4974'.
Found and cleaned up 1 empty switch in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:461$4968'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:461$4968'.
Found and cleaned up 6 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:517$4962'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:517$4962'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:833$4960'.
Found and cleaned up 32 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:589$4905'.
Found and cleaned up 14 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:543$4904'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:543$4904'.
Found and cleaned up 2 empty switches in `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:56$3417'.
Removing empty process `TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:56$3417'.
Found and cleaned up 2 empty switches in `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:46$3415'.
Removing empty process `TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:46$3415'.
Found and cleaned up 2 empty switches in `\TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:35$3413'.
Removing empty process `TIMER32.$proc$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:35$3413'.
Found and cleaned up 9 empty switches in `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
Removing empty process `$paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:122$4825'.
Found and cleaned up 2 empty switches in `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:85$3342'.
Removing empty process `APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:85$3342'.
Found and cleaned up 1 empty switch in `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:64$3330'.
Removing empty process `APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:64$3330'.
Found and cleaned up 1 empty switch in `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:53$3324'.
Removing empty process `APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:53$3324'.
Found and cleaned up 1 empty switch in `\APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:42$3318'.
Removing empty process `APB2SPI.$proc$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:42$3318'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4818'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4817'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4816'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4815'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4814'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4813'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4812'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4811'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4810'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:0$4809'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:917$4808'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:917$4808'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:484$4807'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:484$4807'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:472$4796'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:472$4796'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:445$4790'.
Found and cleaned up 2 empty switches in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:429$4788'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:429$4788'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:423$4782'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:423$4782'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:421$4779'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:383$4774'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:383$4774'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:377$4769'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:377$4769'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:370$4767'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:370$4767'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:358$4765'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:358$4765'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:348$4762'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:348$4762'.
Found and cleaned up 1 empty switch in `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:197$3231'.
Removing empty process `ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:197$3231'.
Removing empty process `ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:185$3227'.
Found and cleaned up 1 empty switch in `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:165$3223'.
Removing empty process `ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:165$3223'.
Removing empty process `ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:147$3217'.
Found and cleaned up 1 empty switch in `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:133$3216'.
Removing empty process `ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:133$3216'.
Removing empty process `ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:122$3214'.
Found and cleaned up 4 empty switches in `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:87$3212'.
Removing empty process `ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:87$3212'.
Found and cleaned up 1 empty switch in `\ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:66$3210'.
Removing empty process `ahb_2_apb.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:66$3210'.
Removing empty process `apb_sys_0.$proc$/openLANE_flow/designs/IBEX_SoC/src/APB_sys_0.v:52$3202'.
Found and cleaned up 17 empty switches in `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_compressed_decoder.v:320$3188'.
Removing empty process `ibex_compressed_decoder.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_compressed_decoder.v:320$3188'.
Found and cleaned up 1 empty switch in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:585$4728'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:585$4728'.
Found and cleaned up 3 empty switches in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:520$4718'.
Found and cleaned up 4 empty switches in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:613$4689'.
Found and cleaned up 1 empty switch in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:598$4680'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:598$4680'.
Found and cleaned up 1 empty switch in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:392$4670'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:392$4670'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4664'.
Removing empty process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4664'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4662'.
Removing empty process `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4662'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4660'.
Removing empty process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4660'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4658'.
Removing empty process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4658'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4656'.
Removing empty process `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4656'.
Found and cleaned up 1 empty switch in `\QSIXIP_RUN.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:370$1573'.
Removing empty process `QSIXIP_RUN.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:370$1573'.
Found and cleaned up 1 empty switch in `\QSIXIP_INIT.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:320$1572'.
Removing empty process `QSIXIP_INIT.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:320$1572'.
Found and cleaned up 1 empty switch in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1569'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1569'.
Found and cleaned up 1 empty switch in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1566'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1566'.
Found and cleaned up 1 empty switch in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1563'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1563'.
Found and cleaned up 1 empty switch in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1560'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1560'.
Found and cleaned up 2 empty switches in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:279$1557'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:279$1557'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:244$1539'.
Found and cleaned up 1 empty switch in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:235$1536'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:235$1536'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:226$1534'.
Found and cleaned up 4 empty switches in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:205$1528'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:205$1528'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:188$1525'.
Found and cleaned up 6 empty switches in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:124$1517'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:124$1517'.
Found and cleaned up 1 empty switch in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:117$1514'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:117$1514'.
Found and cleaned up 2 empty switches in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:107$1508'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:107$1508'.
Found and cleaned up 1 empty switch in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:92$1506'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:92$1506'.
Found and cleaned up 3 empty switches in `\QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
Removing empty process `QSPIXIP.$proc$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:77$1477'.
Removing empty process `AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:179$1456'.
Found and cleaned up 1 empty switch in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:173$1454'.
Removing empty process `AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:173$1454'.
Found and cleaned up 1 empty switch in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:141$1446'.
Removing empty process `AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:141$1446'.
Found and cleaned up 1 empty switch in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:135$1444'.
Removing empty process `AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:135$1444'.
Found and cleaned up 1 empty switch in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:130$1442'.
Removing empty process `AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:130$1442'.
Found and cleaned up 1 empty switch in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:126$1440'.
Removing empty process `AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:126$1440'.
Found and cleaned up 1 empty switch in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:122$1438'.
Removing empty process `AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:122$1438'.
Found and cleaned up 1 empty switch in `\AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:118$1436'.
Removing empty process `AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:118$1436'.
Removing empty process `AHBSRAM.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:112$1434'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4654'.
Removing empty process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4654'.
Removing empty process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:40$4652'.
Found and cleaned up 3 empty switches in `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:23$4649'.
Removing empty process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:23$4649'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4647'.
Removing empty process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_csr.v:19$4647'.
Found and cleaned up 1 empty switch in `\prim_clock_gating.$proc$/openLANE_flow/designs/IBEX_SoC/src/prim_clock_gating.v:16$1053'.
Removing empty process `prim_clock_gating.$proc$/openLANE_flow/designs/IBEX_SoC/src/prim_clock_gating.v:16$1053'.
Found and cleaned up 1 empty switch in `$paramod\sro\DATA_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:234$5748'.
Removing empty process `$paramod\sro\DATA_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:234$5748'.
Found and cleaned up 1 empty switch in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:144$302'.
Removing empty process `AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:144$302'.
Found and cleaned up 1 empty switch in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:133$298'.
Removing empty process `AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:133$298'.
Found and cleaned up 1 empty switch in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:122$294'.
Removing empty process `AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:122$294'.
Found and cleaned up 1 empty switch in `\AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:111$290'.
Removing empty process `AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:111$290'.
Removing empty process `AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:85$281'.
Removing empty process `AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:76$279'.
Removing empty process `AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:67$277'.
Removing empty process `AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:59$275'.
Removing empty process `AHBlite_GPIO.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:51$272'.
Removing empty process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:170$4454'.
Found and cleaned up 1 empty switch in `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:146$4444'.
Removing empty process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:146$4444'.
Found and cleaned up 1 empty switch in `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:123$4435'.
Removing empty process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:123$4435'.
Found and cleaned up 2 empty switches in `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:50$250'.
Removing empty process `PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:50$250'.
Found and cleaned up 2 empty switches in `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:39$248'.
Removing empty process `PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:39$248'.
Found and cleaned up 2 empty switches in `\PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:28$246'.
Removing empty process `PWM32.$proc$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:28$246'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4407'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4407'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4406'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4406'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4405'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:129$4405'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:122$4376'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:90$4363'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:90$4363'.
Found and cleaned up 2 empty switches in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:70$4356'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:70$4356'.
Found and cleaned up 2 empty switches in `$paramod\sri\DATA_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:205$5745'.
Removing empty process `$paramod\sri\DATA_WIDTH=8.$proc$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:205$5745'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:0$5744'.
Found and cleaned up 1 empty switch in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:598$5741'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:598$5741'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:586$5739'.
Found and cleaned up 1 empty switch in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:449$5725'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:449$5725'.
Found and cleaned up 1 empty switch in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:439$5720'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/IBEX_SoC/src/ibex_if_stage.v:439$5720'.
Found and cleaned up 1 empty switch in `\AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:88$4319'.
Removing empty process `AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:88$4319'.
Removing empty process `AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:69$4310'.
Removing empty process `AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:60$4308'.
Removing empty process `AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:51$4306'.
Removing empty process `AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:43$4304'.
Removing empty process `AHBlite_db_reg.$proc$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:35$4301'.
Cleaned up 383 empty switches.

54.3. Executing FLATTEN pass (flatten design).
Deleting now unused module i2c_master.
Deleting now unused module i2c_master_byte_ctrl.
Deleting now unused module i2c_master_bit_ctrl.
Deleting now unused module APB2I2C.
Deleting now unused module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Deleting now unused module dio.
Deleting now unused module $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Deleting now unused module IBEX_wrapper.
Deleting now unused module openstriVe_soc_mem.
Deleting now unused module ibex_core.
Deleting now unused module di.
Deleting now unused module APB_PWM32.
Deleting now unused module GPIO.
Deleting now unused module AHBlite_BUS0.
Deleting now unused module $paramod\ibex_wb_stage\WritebackStage=1'0.
Deleting now unused module ibex_load_store_unit.
Deleting now unused module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Deleting now unused module APB_TIMER32.
Deleting now unused module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Deleting now unused module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Deleting now unused module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Deleting now unused module TIMER32.
Deleting now unused module $paramod\spi_master\DATA_WIDTH=8\CLK_DIVIDER_WIDTH=8.
Deleting now unused module APB2SPI.
Deleting now unused module $paramod\ibex_alu\RV32B=0.
Deleting now unused module ahb_2_apb.
Deleting now unused module do.
Deleting now unused module apb_sys_0.
Deleting now unused module ibex_compressed_decoder.
Deleting now unused module $paramod\ibex_multdiv_fast\RV32M=2.
Deleting now unused module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.
Deleting now unused module $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.
Deleting now unused module AHBlite_sys_0.
Deleting now unused module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.
Deleting now unused module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.
Deleting now unused module soc_core_m1_b1.
Deleting now unused module $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.
Deleting now unused module QSIXIP_RUN.
Deleting now unused module QSIXIP_INIT.
Deleting now unused module QSPIXIP.
Deleting now unused module AHBSRAM.
Deleting now unused module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.
Deleting now unused module $paramod\ibex_counter\CounterWidth=64.
Deleting now unused module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.
Deleting now unused module prim_clock_gating.
Deleting now unused module $paramod\sro\DATA_WIDTH=8.
Deleting now unused module $paramod$19f5bbc4965ce45d2361eefc3ea15bde1a26c26f\APB_BUS0.
Deleting now unused module AHBlite_GPIO.
Deleting now unused module $paramod\ibex_prefetch_buffer\BranchPredictor=1'0.
Deleting now unused module PWM32.
Deleting now unused module $paramod\ibex_fetch_fifo\NUM_REQS=2.
Deleting now unused module $paramod\sri\DATA_WIDTH=8.
Deleting now unused module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Deleting now unused module AHBlite_db_reg.
<suppressed ~89 debug messages>

54.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~777 debug messages>

54.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 900 unused cells and 4185 unused wires.
<suppressed ~984 debug messages>

54.6. Executing CHECK pass (checking for obvious problems).
checking module IBEX_SoC..
Warning: Wire IBEX_SoC.\Output_DATA is used but has no driver.
found and reported 1 problems.

54.7. Executing OPT pass (performing simple optimizations).

54.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

54.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~9408 debug messages>
Removed a total of 3136 cells.

54.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6120: \uut.IBEX.core.id_stage_i.id_fsm_q -> 1'1
      Replacing known input bits on port B of cell $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6199: \uut.IBEX.core.id_stage_i.id_fsm_q -> 1'0
      Replacing known input bits on port A of cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11052: \uut.IBEX.core.id_stage_i.controller_i.nmi_mode_q -> 1'0
      Replacing known input bits on port A of cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12617: \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.state -> 1'1
      Replacing known input bits on port A of cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12615: \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.state -> 1'1
      Replacing known input bits on port A of cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12613: \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.state -> 1'1
      Replacing known input bits on port A of cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12621: \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.state -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6122.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6124.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6130.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6132.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6138.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6140.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6146.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6148.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6154.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6156.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6167.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6169.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6171.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6173.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6184.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6186.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6188.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6190.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6201.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6203.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6205.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6207.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6216.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6218.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6220.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6235.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6237.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6252.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6254.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6269.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6271.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6285.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6287.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6300.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6302.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6314.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6316.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6330.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6332.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6345.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6347.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6383.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6389.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6395.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6401.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8918.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6407.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6413.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6419.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6425.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6473.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6476.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6482.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6536.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10774.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10777.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10780.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10783.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10786.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10792.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10795.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10798.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10801.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10807.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10810.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10813.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10816.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10822.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10825.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10828.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10834.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10837.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10840.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10846.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10849.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10852.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10858.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10861.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10867.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10870.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10876.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10879.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10885.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10888.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10894.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10900.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10906.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10912.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10918.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10942.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10949.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10952.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10955.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10958.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10960.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10967.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10970.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10973.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10975.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10982.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10985.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10987.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10994.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10997.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10999.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11006.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11009.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11011.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11018.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11021.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11023.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11030.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11033.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11035.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11042.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11045.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11047.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11054.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11057.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11059.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11066.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11068.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11075.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11077.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11084.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11086.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11093.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11095.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11102.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11104.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11111.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11113.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11120.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11122.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11129.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11131.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11141.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11143.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11145.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11147.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11149.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11151.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11161.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11163.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11165.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11167.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11169.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11171.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11181.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11183.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11185.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11187.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11189.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11191.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11221.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11223.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11225.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11227.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11229.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11231.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11241.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11243.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11245.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11247.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11249.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11251.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11261.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11263.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11265.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11267.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11269.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11271.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11288.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11290.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11307.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11309.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11324.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11326.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11341.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11343.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11358.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11360.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11392.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11394.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11409.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11411.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11423.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11429.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11435.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11441.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11453.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11459.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11465.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11471.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11477.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11483.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11489.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11495.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11501.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11507.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11514.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11528.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11535.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11540.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11542.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11551.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11553.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11561.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11569.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11577.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11585.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11593.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11601.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11609.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11617.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11628.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11631.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11636.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11638.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11649.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11654.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11656.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11669.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11671.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11711.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11713.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11723.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11725.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11776.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11785.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11794.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11803.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11812.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11821.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11833.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11835.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11837.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11849.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11851.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11853.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11864.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11866.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11877.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11879.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11889.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11899.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11909.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11919.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11956.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11958.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11988.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11999.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12001.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12011.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12021.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7242.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12032.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12043.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7244.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12054.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7246.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12065.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12076.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12088.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12100.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7252.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7254.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7256.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7262.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7264.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7266.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7272.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7274.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7276.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7282.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7284.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7286.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7299.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7301.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7303.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7312.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7314.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7323.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7325.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7334.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7336.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7345.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7347.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7356.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7358.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7367.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7369.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7378.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7380.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7389.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7391.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7400.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7402.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7411.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7413.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7421.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7429.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7437.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7445.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9189.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7453.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7461.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12269.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12272.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12275.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12278.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12281.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12284.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12287.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12290.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12293.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12296.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12299.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12302.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12305.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12311.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12314.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12317.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12320.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12323.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12326.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12329.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12332.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12335.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12338.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12341.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12344.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12350.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12353.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12356.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12359.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12362.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12365.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12368.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12371.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12374.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12377.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12380.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12386.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12389.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12392.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12395.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12398.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12401.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12404.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12407.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12410.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12413.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12419.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12422.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12425.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12428.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12431.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12434.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12437.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12440.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12443.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12449.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12452.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12455.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12458.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12461.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12464.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12467.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12470.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12476.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12479.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12482.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12485.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12488.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12491.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12494.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12500.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12503.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12506.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12509.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12512.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12515.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12521.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12524.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12527.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12530.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12533.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12539.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12542.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12545.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12548.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12554.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12557.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12560.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12566.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12569.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12575.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10009.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10011.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10022.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10024.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7469.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10035.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10037.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7477.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10044.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10046.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10054.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10056.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7485.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10065.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10067.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7493.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10077.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10079.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10085.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7501.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10091.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10097.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7509.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10103.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10109.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7517.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10115.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10121.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7525.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10127.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10139.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7537.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10151.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10169.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10171.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10178.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10186.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10193.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10207.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10224.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10226.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10239.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10241.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10256.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10258.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10266.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10274.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10282.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10291.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10294.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10296.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10298.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10308.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10311.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10313.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10315.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10323.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10326.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10328.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10330.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10341.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10344.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10346.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7621.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10348.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7623.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10357.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10360.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10362.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10364.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7648.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10377.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10379.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10381.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10390.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10392.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7668.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10403.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10405.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10407.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10418.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7688.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10420.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10422.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7701.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10434.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10436.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7714.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10446.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7734.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10459.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10461.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10475.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7747.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10489.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7760.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10504.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7773.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10519.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10532.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7786.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7799.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10546.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10561.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10576.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10591.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7812.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10607.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10623.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7825.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7838.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7852.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7854.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7873.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7894.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7896.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8156.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8192.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9448.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9450.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9455.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9461.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9466.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9472.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9477.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9479.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9484.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9486.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9491.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9493.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9498.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9500.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9507.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9515.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9523.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9530.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9555.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9557.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8199.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9569.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9571.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9587.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9589.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9597.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9605.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9613.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9623.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9625.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9627.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9636.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9638.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9644.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9646.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9653.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9655.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9670.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9683.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9696.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9710.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9724.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9738.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9752.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9771.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9785.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9800.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9814.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9829.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9844.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9860.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9875.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9890.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8827.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8207.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9980.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9982.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8216.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9991.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9993.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8226.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12778.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12781.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12783.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12785.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12794.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12796.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8237.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12798.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12808.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12810.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12812.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12814.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12823.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12825.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8249.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12827.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12836.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12838.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12840.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8262.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12848.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12850.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12858.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8275.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12860.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12869.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12871.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12881.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12883.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8289.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12892.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8304.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8320.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8337.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12901.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8355.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12912.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12914.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12916.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8374.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12927.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12929.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12931.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12941.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12943.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12945.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12954.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12956.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12965.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12967.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.\mcycle_counter_i.$procmux$15078.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12976.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12978.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12987.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12989.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\cs_registers_i.\minstret_counter_i.$procmux$15078.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$13000.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$13011.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$13022.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$13024.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$13034.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$13044.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procmux$15141.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6707.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6713.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6719.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6725.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6731.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6738.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6745.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6752.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6759.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6768.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6770.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6779.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6781.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6789.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6797.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6805.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6813.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6821.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6829.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6838.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6847.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6856.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6865.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6876.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6878.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6889.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6891.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6902.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6904.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6915.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6917.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6927.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6937.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6947.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6957.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6987.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6997.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7007.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7083.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7089.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7096.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7104.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7114.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7120.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7127.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7135.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7169.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7178.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7180.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7186.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7196.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7198.
    dead port 1/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7208.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7210.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7217.
    dead port 2/2 on $mux $flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13678.
    dead port 2/2 on $mux $flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13684.
    dead port 2/2 on $mux $flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13691.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13072.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13078.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13084.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13090.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13097.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13113.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13150.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13158.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13170.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13182.
    dead port 2/2 on $mux $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13194.
    dead port 2/2 on $mux $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$procmux$12744.
    dead port 2/2 on $mux $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$procmux$12746.
    dead port 2/2 on $mux $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$procmux$12752.
    dead port 2/2 on $mux $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$procmux$12760.
    dead port 2/2 on $mux $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procmux$5804.
Removed 714 multiplexer ports.
<suppressed ~505 debug messages>

54.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12140: $auto$opt_reduce.cc:134:opt_mux$15536
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9156: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8826_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8824_CMP $auto$opt_reduce.cc:134:opt_mux$15538 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12168: { $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12033_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11838_CMP $auto$opt_reduce.cc:134:opt_mux$15540 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12191: { $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11543_CMP $auto$opt_reduce.cc:134:opt_mux$15542 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12218: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11543_CMP
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12251: { $auto$opt_reduce.cc:134:opt_mux$15544 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9105: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL }
    New ctrl vector for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11052: { }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6386: $auto$opt_reduce.cc:134:opt_mux$15546
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8525: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10029: $auto$opt_reduce.cc:134:opt_mux$15548
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8569: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8968: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10183: $auto$opt_reduce.cc:134:opt_mux$15550
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9197: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8922: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8191_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10213: $auto$opt_reduce.cc:134:opt_mux$15552
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10233: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10219_CMP $auto$opt_reduce.cc:134:opt_mux$15554 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8745: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10247: { $auto$opt_reduce.cc:134:opt_mux$15560 $auto$opt_reduce.cc:134:opt_mux$15558 $auto$opt_reduce.cc:134:opt_mux$15556 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10371: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10375_CTRL
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10430: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10375_CMP [0]
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10485: { $auto$opt_reduce.cc:134:opt_mux$15562 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10460_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10515: $auto$opt_reduce.cc:134:opt_mux$15564
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10626: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10608_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10562_CMP $auto$opt_reduce.cc:134:opt_mux$15566 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10012_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10643: { $auto$opt_reduce.cc:134:opt_mux$15568 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10172_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10654: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10562_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10547_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10505_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10462_CMP $auto$opt_reduce.cc:134:opt_mux$15570 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10299_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10227_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10172_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10012_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10713: $auto$opt_reduce.cc:134:opt_mux$15572
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9014: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8611: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8191_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8697: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8191_CMP }
    New ctrl vector for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9505: { }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9330: { $auto$opt_reduce.cc:134:opt_mux$15576 $auto$opt_reduce.cc:134:opt_mux$15574 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9520: $auto$opt_reduce.cc:134:opt_mux$15578
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9536: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9552_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9551_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9550_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9549_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9548_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9547_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9546_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9545_CMP $auto$opt_reduce.cc:134:opt_mux$15580 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9563: $auto$opt_reduce.cc:134:opt_mux$15582
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9581: $auto$opt_reduce.cc:134:opt_mux$15584
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8794: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8826_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8824_CMP $auto$opt_reduce.cc:134:opt_mux$15586 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9893: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9711_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9684_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9558_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9902: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9786_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9711_CMP $auto$opt_reduce.cc:134:opt_mux$15590 $auto$opt_reduce.cc:134:opt_mux$15588 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9480_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9451_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9915: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9711_CMP $auto$opt_reduce.cc:134:opt_mux$15592 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9628_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9558_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9480_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9927: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9845_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9786_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9711_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9684_CMP $auto$opt_reduce.cc:134:opt_mux$15594 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9480_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9986: $auto$opt_reduce.cc:134:opt_mux$15596
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8835: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL }
    New ctrl vector for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11774: { }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12921: { $auto$opt_reduce.cc:134:opt_mux$15598 $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12907_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9060: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7226: { $flatten\uut.\IBEX.\core.\cs_registers_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:791$5495_Y $flatten\uut.\IBEX.\core.\cs_registers_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:791$5494_Y $auto$opt_reduce.cc:134:opt_mux$15600 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$13004: { $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12887_CMP [1] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12784_CMP $auto$opt_reduce.cc:134:opt_mux$15602 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$13029: { $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12882_CMP $auto$opt_reduce.cc:134:opt_mux$15604 $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$13030_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12675: { $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12689_CTRL $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12688_CTRL $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12687_CTRL $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12685_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7062: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:325$3704_Y $auto$opt_reduce.cc:134:opt_mux$15606 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7072: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6739_CMP $auto$opt_reduce.cc:134:opt_mux$15608 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12103: { $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12113_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12112_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12111_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12089_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12033_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11838_CMP $auto$opt_reduce.cc:134:opt_mux$15610 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8481: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.$procmux$6587: { $flatten\uut.\IBEX.$procmux$6591_CMP $flatten\uut.\IBEX.$procmux$6589_CMP $auto$opt_reduce.cc:134:opt_mux$15612 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12115: { $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11838_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11639_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11543_CMP $auto$opt_reduce.cc:134:opt_mux$15614 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.$procmux$6593: { $auto$opt_reduce.cc:134:opt_mux$15616 $flatten\uut.\IBEX.$procmux$6594_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.$procmux$6635: { \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.gnt_or_pmp_err $flatten\uut.\IBEX.$eq$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:101$3966_Y \uut.IBEX.core.load_store_unit_i.data_gnt_i $flatten\uut.\IBEX.$eq$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:103$3970_Y }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8656: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $auto$opt_reduce.cc:134:opt_mux$15618 $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9111_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8919_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9109_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13670: { $flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13673_CMP $flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13672_CMP $auto$opt_reduce.cc:134:opt_mux$15620 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13058: { $auto$opt_reduce.cc:134:opt_mux$15622 $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13060_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13059_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12124: { $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11838_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11639_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11543_CMP $auto$opt_reduce.cc:134:opt_mux$15624 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13104: { $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13061_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13060_CMP $auto$opt_reduce.cc:134:opt_mux$15626 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13115: { $auto$opt_reduce.cc:134:opt_mux$15630 $auto$opt_reduce.cc:134:opt_mux$15628 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13120: { $auto$opt_reduce.cc:134:opt_mux$15634 $auto$opt_reduce.cc:134:opt_mux$15632 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13125: { $auto$opt_reduce.cc:134:opt_mux$15638 $auto$opt_reduce.cc:134:opt_mux$15636 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13130: { $auto$opt_reduce.cc:134:opt_mux$15642 $auto$opt_reduce.cc:134:opt_mux$15640 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13135: $auto$opt_reduce.cc:134:opt_mux$15644
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13140: { $auto$opt_reduce.cc:134:opt_mux$15646 $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13060_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13059_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13330: { $flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13352_CMP $auto$opt_reduce.cc:134:opt_mux$15656 $auto$opt_reduce.cc:134:opt_mux$15654 $auto$opt_reduce.cc:134:opt_mux$15652 $flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13337_CMP $flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13336_CMP $auto$opt_reduce.cc:134:opt_mux$15650 $flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13333_CMP $flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13332_CMP $auto$opt_reduce.cc:134:opt_mux$15648 }
    New ctrl vector for $pmux cell $flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13298: { $flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13328_CMP $flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13327_CMP $flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13326_CMP $flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13325_CMP $flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13324_CMP $flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13323_CMP $flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13322_CMP $flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13321_CMP $flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13320_CMP $auto$opt_reduce.cc:134:opt_mux$15662 $auto$opt_reduce.cc:134:opt_mux$15660 $auto$opt_reduce.cc:134:opt_mux$15658 $flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13492_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12133: { $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11838_CMP $auto$opt_reduce.cc:134:opt_mux$15664 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8885: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8826_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8824_CMP $auto$opt_reduce.cc:134:opt_mux$15666 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13201: $auto$opt_reduce.cc:134:opt_mux$15668
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13207: { $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13203_CMP $auto$opt_reduce.cc:134:opt_mux$15670 $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13151_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13217: $auto$opt_reduce.cc:134:opt_mux$15672
    New ctrl vector for $pmux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5971: $auto$opt_reduce.cc:134:opt_mux$15674
    New ctrl vector for $pmux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5981: { $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6005_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5998_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5997_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5996_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5995_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5993_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5992_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5991_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5989_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5988_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5987_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5985_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5984_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5983_CMP $auto$opt_reduce.cc:134:opt_mux$15676 }
    New ctrl vector for $pmux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6011: { $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5983_CMP $auto$opt_reduce.cc:134:opt_mux$15678 }
    New ctrl vector for $pmux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6035: { $auto$opt_reduce.cc:134:opt_mux$15684 $auto$opt_reduce.cc:134:opt_mux$15682 $auto$opt_reduce.cc:134:opt_mux$15680 }
    New ctrl vector for $pmux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6058: { $auto$opt_reduce.cc:134:opt_mux$15688 $auto$opt_reduce.cc:134:opt_mux$15686 }
    Consolidated identical input bits for $mux cell $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641:
      Old ports: A=0, B=255, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y
      New ports: A=1'0, B=1'1, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y [0]
      New connections: $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y [31:1] = { 24'000000000000000000000000 $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653:
      Old ports: A=0, B=65280, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y
      New ports: A=1'0, B=1'1, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [8]
      New connections: { $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [31:9] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [7:0] } = { 16'0000000000000000 $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665:
      Old ports: A=0, B=16711680, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y
      New ports: A=1'0, B=1'1, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [16]
      New connections: { $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [31:17] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [15:0] } = { 8'00000000 $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677:
      Old ports: A=0, B=32'11111111000000000000000000000000, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y
      New ports: A=1'0, B=1'1, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [24]
      New connections: { $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [31:25] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [23:0] } = { $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [24] 24'000000000000000000000000 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$15551: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10214_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10215_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10216_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10217_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10218_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10219_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10220_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10221_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10222_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$15573: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9331_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8601_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8518_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8512_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8511_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8510_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8509_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8191_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$15601: { $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12870_CMP $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12882_CMP $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12887_CMP [3:2] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12887_CMP [0] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12888_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12180: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6643:
      Old ports: A=0, B=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946
      New ports: A=1'0, B=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y [0], Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946 [0]
      New connections: $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946 [31:1] = { 24'000000000000000000000000 $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946 [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946 [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946 [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946 [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946 [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946 [0] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946 [0] }
    Consolidated identical input bits for $mux cell $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6655:
      Old ports: A=0, B=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949
      New ports: A=1'0, B=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [8], Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949 [8]
      New connections: { $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949 [31:9] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949 [7:0] } = { 16'0000000000000000 $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949 [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949 [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949 [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949 [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949 [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949 [8] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN[31:0]$3949 [8] 8'00000000 }
    Consolidated identical input bits for $mux cell $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6667:
      Old ports: A=0, B=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952
      New ports: A=1'0, B=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [16], Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952 [16]
      New connections: { $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952 [31:17] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952 [15:0] } = { 8'00000000 $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952 [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952 [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952 [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952 [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952 [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952 [16] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952 [16] 16'0000000000000000 }
    Consolidated identical input bits for $mux cell $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6679:
      Old ports: A=0, B=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y, Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955
      New ports: A=1'0, B=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [24], Y=$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955 [24]
      New connections: { $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955 [31:25] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955 [23:0] } = { $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955 [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955 [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955 [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955 [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955 [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955 [24] $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN[31:0]$3955 [24] 24'000000000000000000000000 }
  Optimizing cells in module \IBEX_SoC.
Performed a total of 94 changes.

54.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~213 debug messages>
Removed a total of 71 cells.

54.7.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\uut.\ahb_sys_0_uut.\S_2.$procdff$15498 ($adff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $flatten\uut.\ahb_sys_0_uut.\S_2.$procdff$15498 ($adff) from module IBEX_SoC.

54.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 51 unused cells and 2548 unused wires.
<suppressed ~91 debug messages>

54.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~5 debug messages>

54.7.9. Rerunning OPT passes. (Maybe there is more to do..)

54.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~525 debug messages>

54.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13104: { $auto$opt_reduce.cc:134:opt_mux$15690 $auto$opt_reduce.cc:134:opt_mux$15626 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10626: { $auto$opt_reduce.cc:134:opt_mux$15692 $auto$opt_reduce.cc:134:opt_mux$15566 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10012_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10637: { $auto$opt_reduce.cc:134:opt_mux$15694 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10172_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10693: $auto$opt_reduce.cc:134:opt_mux$15696
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9902: { $auto$opt_reduce.cc:134:opt_mux$15698 $auto$opt_reduce.cc:134:opt_mux$15590 $auto$opt_reduce.cc:134:opt_mux$15588 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9480_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9451_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7035: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:325$3704_Y $auto$opt_reduce.cc:134:opt_mux$15700 }
  Optimizing cells in module \IBEX_SoC.
Performed a total of 6 changes.

54.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

54.7.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 0 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 0 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC.

54.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

54.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

54.7.16. Rerunning OPT passes. (Maybe there is more to do..)

54.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~525 debug messages>

54.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.7.20. Executing OPT_DFF pass (perform DFF optimizations).

54.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..

54.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

54.7.23. Finished OPT passes. (There is nothing left to do.)

54.8. Executing FSM pass (extract and optimize FSM).

54.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking IBEX_SoC.uut.IBEX.core.cs_registers_i.u_cpuctrl_csr.rdata_q as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register IBEX_SoC.uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q.
Found FSM state register IBEX_SoC.uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q.
Not marking IBEX_SoC.uut.IBEX.core.id_stage_i.controller_i.ctrl_fsm_cs as FSM state register:
    Circuit seems to be self-resetting.
Found FSM state register IBEX_SoC.uut.IBEX.core.load_store_unit_i.data_type_q.
Not marking IBEX_SoC.uut.IBEX.core.load_store_unit_i.ls_fsm_cs as FSM state register:
    Users of register don't seem to benefit from recoding.
    Circuit seems to be self-resetting.
Not marking IBEX_SoC.uut.ahb_sys_0_uut.S0.state as FSM state register:
    Circuit seems to be self-resetting.
Not marking IBEX_SoC.uut.ahb_sys_0_uut.apb_sys_inst_0.AHB2APB_BR.CurrentState as FSM state register:
    Circuit seems to be self-resetting.
Not marking IBEX_SoC.uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.c_state as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register IBEX_SoC.uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.c_state.
Found FSM state register IBEX_SoC.uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.core_cmd.

54.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q' from module `\IBEX_SoC'.
  found $adff cell for state register: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$15382
  root of input selection tree: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.mult_en_internal
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13059_CMP
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13060_CMP
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13061_CMP
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13062_CMP
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:546$4720_Y
  found state code: 2'11
  found state code: 2'10
  found state code: 2'01
  found ctrl output: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13062_CMP
  found ctrl output: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13061_CMP
  found ctrl output: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13060_CMP
  found ctrl output: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13059_CMP
  ctrl inputs: { \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.mult_en_internal $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:546$4720_Y }
  ctrl outputs: { $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0] $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13059_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13060_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13061_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13062_CMP }
  transition:       2'00 2'0- ->       2'00 6'000001
  transition:       2'00 2'1- ->       2'01 6'010001
  transition:       2'10 2'0- ->       2'10 6'100100
  transition:       2'10 2'10 ->       2'11 6'110100
  transition:       2'10 2'11 ->       2'00 6'000100
  transition:       2'01 2'0- ->       2'01 6'010010
  transition:       2'01 2'1- ->       2'10 6'100010
  transition:       2'11 2'0- ->       2'11 6'111000
  transition:       2'11 2'1- ->       2'00 6'001000
Extracting FSM `\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q' from module `\IBEX_SoC'.
  found $adff cell for state register: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$15383
  root of input selection tree: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.div_en_internal
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13151_CMP
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13159_CMP
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13210_CMP
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13202_CMP
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13203_CMP
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13171_CMP
  found state code: 3'110
  found state code: 3'101
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:659$4705_Y
  found state code: 3'011
  found state code: 3'100
  found state code: 3'010
  found ctrl input: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$logic_and$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:629$4694_Y
  found state code: 3'001
  found ctrl output: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13251_CMP
  found ctrl output: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13210_CMP
  found ctrl output: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13203_CMP
  found ctrl output: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13202_CMP
  found ctrl output: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13171_CMP
  found ctrl output: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13159_CMP
  found ctrl output: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13151_CMP
  ctrl inputs: { \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.div_en_internal $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$logic_and$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:629$4694_Y $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:659$4705_Y }
  ctrl outputs: { $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13151_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13159_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13171_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13202_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13203_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13210_CMP $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13251_CMP }
  transition:      3'000 3'0-- ->      3'000 10'0000010000
  transition:      3'000 3'10- ->      3'001 10'0010010000
  transition:      3'000 3'11- ->      3'110 10'1100010000
  transition:      3'100 3'0-- ->      3'100 10'1000100000
  transition:      3'100 3'1-- ->      3'101 10'1010100000
  transition:      3'010 3'0-- ->      3'010 10'0100001000
  transition:      3'010 3'1-- ->      3'011 10'0110001000
  transition:      3'110 3'0-- ->      3'110 10'1100000001
  transition:      3'110 3'1-- ->      3'000 10'0000000001
  transition:      3'001 3'0-- ->      3'001 10'0010000100
  transition:      3'001 3'1-- ->      3'010 10'0100000100
  transition:      3'101 3'0-- ->      3'101 10'1011000000
  transition:      3'101 3'1-- ->      3'110 10'1101000000
  transition:      3'011 3'0-- ->      3'011 10'0110000010
  transition:      3'011 3'1-0 ->      3'011 10'0110000010
  transition:      3'011 3'1-1 ->      3'100 10'1000000010
Extracting FSM `\uut.IBEX.core.load_store_unit_i.data_type_q' from module `\IBEX_SoC'.
  found $adff cell for state register: $flatten\uut.\IBEX.\core.\load_store_unit_i.$procdff$15309
  root of input selection tree: $flatten\uut.\IBEX.\core.\load_store_unit_i.$0\data_type_q[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: \uut.IBEX.core.load_store_unit_i.ctrl_update
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$15572
  found ctrl input: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10473_CMP
  found ctrl input: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10474_CMP
  found state code: 2'01
  found state code: 2'10
  found ctrl output: $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7077_CMP [0]
  found ctrl output: $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7077_CMP [1]
  found ctrl output: $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7078_CMP
  found ctrl output: $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7079_CMP
  ctrl inputs: { $auto$opt_reduce.cc:134:opt_mux$15572 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10473_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10474_CMP \uut.IBEX.core.load_store_unit_i.ctrl_update }
  ctrl outputs: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7079_CMP $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7078_CMP $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7077_CMP $flatten\uut.\IBEX.\core.\load_store_unit_i.$0\data_type_q[1:0] }
  transition:       2'00 4'---0 ->       2'00 6'100000
  transition:       2'00 4'0--1 ->       2'00 6'100000
  transition:       2'00 4'1001 ->       2'00 6'100000
  transition:       2'00 4'1-11 ->       2'10 6'100010
  transition:       2'00 4'11-1 ->       2'01 6'100001
  transition:       2'10 4'---0 ->       2'10 6'000110
  transition:       2'10 4'0--1 ->       2'00 6'000100
  transition:       2'10 4'1001 ->       2'00 6'000100
  transition:       2'10 4'1-11 ->       2'10 6'000110
  transition:       2'10 4'11-1 ->       2'01 6'000101
  transition:       2'01 4'---0 ->       2'01 6'010001
  transition:       2'01 4'0--1 ->       2'00 6'010000
  transition:       2'01 4'1001 ->       2'00 6'010000
  transition:       2'01 4'1-11 ->       2'10 6'010010
  transition:       2'01 4'11-1 ->       2'01 6'010001
Extracting FSM `\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.c_state' from module `\IBEX_SoC'.
  found $adff cell for state register: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procdff$15247
  root of input selection tree: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\c_state[4:0]
  found reset state: 5'00000 (from async reset)
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.al
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5812_CMP
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5819_CMP
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5842_CMP
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5848_CMP
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5830_CMP
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5833_CMP
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.cmd_ack
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [6]
  found state code: 5'10000
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$reduce_or$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:565$4267_Y
  found state code: 5'01000
  found state code: 5'00010
  found state code: 5'00100
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [5]
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.go
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [7]
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [4]
  found state code: 5'00001
  found ctrl output: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5812_CMP
  found ctrl output: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5819_CMP
  found ctrl output: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5830_CMP
  found ctrl output: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5833_CMP
  found ctrl output: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5842_CMP
  found ctrl output: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5848_CMP
  ctrl inputs: { \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [7:4] \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.cmd_ack \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.al $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$reduce_or$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:565$4267_Y \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.go }
  ctrl outputs: { $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5848_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5842_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5833_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5830_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5819_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5812_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\c_state[4:0] }
  transition:    5'00000 8'-----0-0 ->    5'00000 11'00100000000
  transition:    5'00000 8'0-00-0-1 ->    5'10000 11'00100010000
  transition:    5'00000 8'0-01-0-1 ->    5'00100 11'00100000100
  transition:    5'00000 8'0-1--0-1 ->    5'00010 11'00100000010
  transition:    5'00000 8'1----0-1 ->    5'00001 11'00100000001
  transition:    5'00000 8'-----1-- ->    5'00000 11'00100000000
  transition:    5'10000 8'----00-- ->    5'10000 11'00000110000
  transition:    5'10000 8'----10-- ->    5'00000 11'00000100000
  transition:    5'10000 8'-----1-- ->    5'00000 11'00000100000
  transition:    5'01000 8'----00-- ->    5'01000 11'00001001000
  transition:    5'01000 8'-0--10-- ->    5'00000 11'00001000000
  transition:    5'01000 8'-1--10-- ->    5'10000 11'00001010000
  transition:    5'01000 8'-----1-- ->    5'00000 11'00001000000
  transition:    5'00100 8'----00-- ->    5'00100 11'10000000100
  transition:    5'00100 8'----100- ->    5'01000 11'10000001000
  transition:    5'00100 8'----101- ->    5'00100 11'10000000100
  transition:    5'00100 8'-----1-- ->    5'00000 11'10000000000
  transition:    5'00010 8'----00-- ->    5'00010 11'01000000010
  transition:    5'00010 8'----100- ->    5'01000 11'01000001000
  transition:    5'00010 8'----101- ->    5'00010 11'01000000010
  transition:    5'00010 8'-----1-- ->    5'00000 11'01000000000
  transition:    5'00001 8'----00-- ->    5'00001 11'00010000001
  transition:    5'00001 8'--0-10-- ->    5'00100 11'00010000100
  transition:    5'00001 8'--1-10-- ->    5'00010 11'00010000010
  transition:    5'00001 8'-----1-- ->    5'00000 11'00010000000
Extracting FSM `\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.core_cmd' from module `\IBEX_SoC'.
  found $adff cell for state register: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procdff$15249
  root of input selection tree: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\core_cmd[3:0]
  found reset state: 4'0000 (from async reset)
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.al
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5812_CMP
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5819_CMP
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5842_CMP
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5848_CMP
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5830_CMP
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5833_CMP
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.cmd_ack
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [6]
  found state code: 4'0010
  found ctrl input: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$reduce_or$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:565$4267_Y
  found state code: 4'0100
  found state code: 4'1000
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [5]
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.go
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [7]
  found ctrl input: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [4]
  found state code: 4'0001
  found ctrl output: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6004_CMP
  found ctrl output: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6002_CMP
  found ctrl output: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6001_CMP
  found ctrl output: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$eq$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:222$4246_Y
  ctrl inputs: { \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [7:4] \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.cmd_ack \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.al $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5848_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5842_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5833_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5830_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5819_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5812_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$reduce_or$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:565$4267_Y \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.go }
  ctrl outputs: { $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$eq$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:222$4246_Y $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6001_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6002_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6004_CMP $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\core_cmd[3:0] }
  transition:     4'0000 14'-----0000000-- ->     4'0000 8'00000000
  transition:     4'0000 14'-----0--1----0 ->     4'0000 8'00000000
  transition:     4'0000 14'0-00-0--1----1 ->     4'0010 8'00000010
  transition:     4'0000 14'0-01-0--1----1 ->     4'0100 8'00000100
  transition:     4'0000 14'0-1--0--1----1 ->     4'1000 8'00001000
  transition:     4'0000 14'1----0--1----1 ->     4'0001 8'00000001
  transition:     4'0000 14'----00---1---- ->     4'0000 8'00000000
  transition:     4'0000 14'--0-10---1---- ->     4'0100 8'00000100
  transition:     4'0000 14'--1-10---1---- ->     4'1000 8'00001000
  transition:     4'0000 14'----001------- ->     4'0000 8'00000000
  transition:     4'0000 14'----101-----0- ->     4'1000 8'00001000
  transition:     4'0000 14'----101-----1- ->     4'0100 8'00000100
  transition:     4'0000 14'----00-1------ ->     4'0000 8'00000000
  transition:     4'0000 14'----10-1----0- ->     4'0100 8'00000100
  transition:     4'0000 14'----10-1----1- ->     4'1000 8'00001000
  transition:     4'0000 14'----00----1--- ->     4'0000 8'00000000
  transition:     4'0000 14'-0--10----1--- ->     4'0000 8'00000000
  transition:     4'0000 14'-1--10----1--- ->     4'0010 8'00000010
  transition:     4'0000 14'----00-----1-- ->     4'0000 8'00000000
  transition:     4'0000 14'----10-----1-- ->     4'0000 8'00000000
  transition:     4'0000 14'-----1-------- ->     4'0000 8'00000000
  transition:     4'1000 14'-----0000000-- ->     4'1000 8'01001000
  transition:     4'1000 14'-----0--1----0 ->     4'1000 8'01001000
  transition:     4'1000 14'0-00-0--1----1 ->     4'0010 8'01000010
  transition:     4'1000 14'0-01-0--1----1 ->     4'0100 8'01000100
  transition:     4'1000 14'0-1--0--1----1 ->     4'1000 8'01001000
  transition:     4'1000 14'1----0--1----1 ->     4'0001 8'01000001
  transition:     4'1000 14'----00---1---- ->     4'1000 8'01001000
  transition:     4'1000 14'--0-10---1---- ->     4'0100 8'01000100
  transition:     4'1000 14'--1-10---1---- ->     4'1000 8'01001000
  transition:     4'1000 14'----001------- ->     4'1000 8'01001000
  transition:     4'1000 14'----101-----0- ->     4'1000 8'01001000
  transition:     4'1000 14'----101-----1- ->     4'0100 8'01000100
  transition:     4'1000 14'----00-1------ ->     4'1000 8'01001000
  transition:     4'1000 14'----10-1----0- ->     4'0100 8'01000100
  transition:     4'1000 14'----10-1----1- ->     4'1000 8'01001000
  transition:     4'1000 14'----00----1--- ->     4'1000 8'01001000
  transition:     4'1000 14'-0--10----1--- ->     4'0000 8'01000000
  transition:     4'1000 14'-1--10----1--- ->     4'0010 8'01000010
  transition:     4'1000 14'----00-----1-- ->     4'1000 8'01001000
  transition:     4'1000 14'----10-----1-- ->     4'0000 8'01000000
  transition:     4'1000 14'-----1-------- ->     4'0000 8'01000000
  transition:     4'0100 14'-----0000000-- ->     4'0100 8'00100100
  transition:     4'0100 14'-----0--1----0 ->     4'0100 8'00100100
  transition:     4'0100 14'0-00-0--1----1 ->     4'0010 8'00100010
  transition:     4'0100 14'0-01-0--1----1 ->     4'0100 8'00100100
  transition:     4'0100 14'0-1--0--1----1 ->     4'1000 8'00101000
  transition:     4'0100 14'1----0--1----1 ->     4'0001 8'00100001
  transition:     4'0100 14'----00---1---- ->     4'0100 8'00100100
  transition:     4'0100 14'--0-10---1---- ->     4'0100 8'00100100
  transition:     4'0100 14'--1-10---1---- ->     4'1000 8'00101000
  transition:     4'0100 14'----001------- ->     4'0100 8'00100100
  transition:     4'0100 14'----101-----0- ->     4'1000 8'00101000
  transition:     4'0100 14'----101-----1- ->     4'0100 8'00100100
  transition:     4'0100 14'----00-1------ ->     4'0100 8'00100100
  transition:     4'0100 14'----10-1----0- ->     4'0100 8'00100100
  transition:     4'0100 14'----10-1----1- ->     4'1000 8'00101000
  transition:     4'0100 14'----00----1--- ->     4'0100 8'00100100
  transition:     4'0100 14'-0--10----1--- ->     4'0000 8'00100000
  transition:     4'0100 14'-1--10----1--- ->     4'0010 8'00100010
  transition:     4'0100 14'----00-----1-- ->     4'0100 8'00100100
  transition:     4'0100 14'----10-----1-- ->     4'0000 8'00100000
  transition:     4'0100 14'-----1-------- ->     4'0000 8'00100000
  transition:     4'0010 14'-----0000000-- ->     4'0010 8'10000010
  transition:     4'0010 14'-----0--1----0 ->     4'0010 8'10000010
  transition:     4'0010 14'0-00-0--1----1 ->     4'0010 8'10000010
  transition:     4'0010 14'0-01-0--1----1 ->     4'0100 8'10000100
  transition:     4'0010 14'0-1--0--1----1 ->     4'1000 8'10001000
  transition:     4'0010 14'1----0--1----1 ->     4'0001 8'10000001
  transition:     4'0010 14'----00---1---- ->     4'0010 8'10000010
  transition:     4'0010 14'--0-10---1---- ->     4'0100 8'10000100
  transition:     4'0010 14'--1-10---1---- ->     4'1000 8'10001000
  transition:     4'0010 14'----001------- ->     4'0010 8'10000010
  transition:     4'0010 14'----101-----0- ->     4'1000 8'10001000
  transition:     4'0010 14'----101-----1- ->     4'0100 8'10000100
  transition:     4'0010 14'----00-1------ ->     4'0010 8'10000010
  transition:     4'0010 14'----10-1----0- ->     4'0100 8'10000100
  transition:     4'0010 14'----10-1----1- ->     4'1000 8'10001000
  transition:     4'0010 14'----00----1--- ->     4'0010 8'10000010
  transition:     4'0010 14'-0--10----1--- ->     4'0000 8'10000000
  transition:     4'0010 14'-1--10----1--- ->     4'0010 8'10000010
  transition:     4'0010 14'----00-----1-- ->     4'0010 8'10000010
  transition:     4'0010 14'----10-----1-- ->     4'0000 8'10000000
  transition:     4'0010 14'-----1-------- ->     4'0000 8'10000000
  transition:     4'0001 14'-----0000000-- ->     4'0001 8'00010001
  transition:     4'0001 14'-----0--1----0 ->     4'0001 8'00010001
  transition:     4'0001 14'0-00-0--1----1 ->     4'0010 8'00010010
  transition:     4'0001 14'0-01-0--1----1 ->     4'0100 8'00010100
  transition:     4'0001 14'0-1--0--1----1 ->     4'1000 8'00011000
  transition:     4'0001 14'1----0--1----1 ->     4'0001 8'00010001
  transition:     4'0001 14'----00---1---- ->     4'0001 8'00010001
  transition:     4'0001 14'--0-10---1---- ->     4'0100 8'00010100
  transition:     4'0001 14'--1-10---1---- ->     4'1000 8'00011000
  transition:     4'0001 14'----001------- ->     4'0001 8'00010001
  transition:     4'0001 14'----101-----0- ->     4'1000 8'00011000
  transition:     4'0001 14'----101-----1- ->     4'0100 8'00010100
  transition:     4'0001 14'----00-1------ ->     4'0001 8'00010001
  transition:     4'0001 14'----10-1----0- ->     4'0100 8'00010100
  transition:     4'0001 14'----10-1----1- ->     4'1000 8'00011000
  transition:     4'0001 14'----00----1--- ->     4'0001 8'00010001
  transition:     4'0001 14'-0--10----1--- ->     4'0000 8'00010000
  transition:     4'0001 14'-1--10----1--- ->     4'0010 8'00010010
  transition:     4'0001 14'----00-----1-- ->     4'0001 8'00010001
  transition:     4'0001 14'----10-----1-- ->     4'0000 8'00010000
  transition:     4'0001 14'-----1-------- ->     4'0000 8'00010000

54.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.core_cmd$15730' from module `\IBEX_SoC'.
  Merging pattern 14'----00-----1-- and 14'----10-----1-- from group (0 0 8'00000000).
  Merging pattern 14'----10-----1-- and 14'----00-----1-- from group (0 0 8'00000000).
Optimizing FSM `$fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.c_state$15722' from module `\IBEX_SoC'.
Optimizing FSM `$fsm$\uut.IBEX.core.load_store_unit_i.data_type_q$15716' from module `\IBEX_SoC'.
Optimizing FSM `$fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$15707' from module `\IBEX_SoC'.
Optimizing FSM `$fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$15701' from module `\IBEX_SoC'.

54.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 68 unused cells and 69 unused wires.
<suppressed ~72 debug messages>

54.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$15701' from module `\IBEX_SoC'.
  Removing unused output signal $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0] [0].
  Removing unused output signal $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0] [1].
Optimizing FSM `$fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$15707' from module `\IBEX_SoC'.
  Removing unused output signal $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] [0].
  Removing unused output signal $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] [1].
  Removing unused output signal $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] [2].
Optimizing FSM `$fsm$\uut.IBEX.core.load_store_unit_i.data_type_q$15716' from module `\IBEX_SoC'.
  Removing unused output signal $flatten\uut.\IBEX.\core.\load_store_unit_i.$0\data_type_q[1:0] [0].
  Removing unused output signal $flatten\uut.\IBEX.\core.\load_store_unit_i.$0\data_type_q[1:0] [1].
Optimizing FSM `$fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.c_state$15722' from module `\IBEX_SoC'.
  Removing unused output signal $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\c_state[4:0] [0].
  Removing unused output signal $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\c_state[4:0] [1].
  Removing unused output signal $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\c_state[4:0] [2].
  Removing unused output signal $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\c_state[4:0] [3].
  Removing unused output signal $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\c_state[4:0] [4].
Optimizing FSM `$fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.core_cmd$15730' from module `\IBEX_SoC'.
  Removing unused output signal $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\core_cmd[3:0] [0].
  Removing unused output signal $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\core_cmd[3:0] [1].
  Removing unused output signal $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\core_cmd[3:0] [2].
  Removing unused output signal $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\core_cmd[3:0] [3].

54.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$15701' from module `\IBEX_SoC' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---
Recoding FSM `$fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$15707' from module `\IBEX_SoC' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ------1
  100 -> -----1-
  010 -> ----1--
  110 -> ---1---
  001 -> --1----
  101 -> -1-----
  011 -> 1------
Recoding FSM `$fsm$\uut.IBEX.core.load_store_unit_i.data_type_q$15716' from module `\IBEX_SoC' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--
Recoding FSM `$fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.c_state$15722' from module `\IBEX_SoC' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00000 -> -----1
  10000 -> ----1-
  01000 -> ---1--
  00100 -> --1---
  00010 -> -1----
  00001 -> 1-----
Recoding FSM `$fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.core_cmd$15730' from module `\IBEX_SoC' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ----1
  1000 -> ---1-
  0100 -> --1--
  0010 -> -1---
  0001 -> 1----

54.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$15701' from module `IBEX_SoC':
-------------------------------------

  Information on FSM $fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$15701 (\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q):

  Number of input signals:    2
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:546$4720_Y
    1: \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.mult_en_internal

  Output signals:
    0: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13062_CMP
    1: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13061_CMP
    2: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13060_CMP
    3: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13059_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'0-   ->     0 4'0001
      1:     0 2'1-   ->     2 4'0001
      2:     1 2'11   ->     0 4'0100
      3:     1 2'0-   ->     1 4'0100
      4:     1 2'10   ->     3 4'0100
      5:     2 2'1-   ->     1 4'0010
      6:     2 2'0-   ->     2 4'0010
      7:     3 2'1-   ->     0 4'1000
      8:     3 2'0-   ->     3 4'1000

-------------------------------------

FSM `$fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$15707' from module `IBEX_SoC':
-------------------------------------

  Information on FSM $fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$15707 (\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q):

  Number of input signals:    3
  Number of output signals:   7
  Number of state bits:       7

  Input signals:
    0: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:659$4705_Y
    1: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$logic_and$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:629$4694_Y
    2: \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.div_en_internal

  Output signals:
    0: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13251_CMP
    1: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13210_CMP
    2: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13203_CMP
    3: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13202_CMP
    4: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13171_CMP
    5: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13159_CMP
    6: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13151_CMP

  State encoding:
    0:  7'------1  <RESET STATE>
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'0--   ->     0 7'0010000
      1:     0 3'11-   ->     3 7'0010000
      2:     0 3'10-   ->     4 7'0010000
      3:     1 3'0--   ->     1 7'0100000
      4:     1 3'1--   ->     5 7'0100000
      5:     2 3'0--   ->     2 7'0001000
      6:     2 3'1--   ->     6 7'0001000
      7:     3 3'1--   ->     0 7'0000001
      8:     3 3'0--   ->     3 7'0000001
      9:     4 3'1--   ->     2 7'0000100
     10:     4 3'0--   ->     4 7'0000100
     11:     5 3'1--   ->     3 7'1000000
     12:     5 3'0--   ->     5 7'1000000
     13:     6 3'1-1   ->     1 7'0000010
     14:     6 3'1-0   ->     6 7'0000010
     15:     6 3'0--   ->     6 7'0000010

-------------------------------------

FSM `$fsm$\uut.IBEX.core.load_store_unit_i.data_type_q$15716' from module `IBEX_SoC':
-------------------------------------

  Information on FSM $fsm$\uut.IBEX.core.load_store_unit_i.data_type_q$15716 (\uut.IBEX.core.load_store_unit_i.data_type_q):

  Number of input signals:    4
  Number of output signals:   4
  Number of state bits:       3

  Input signals:
    0: \uut.IBEX.core.load_store_unit_i.ctrl_update
    1: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10474_CMP
    2: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10473_CMP
    3: $auto$opt_reduce.cc:134:opt_mux$15572

  Output signals:
    0: $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7077_CMP [0]
    1: $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7077_CMP [1]
    2: $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7078_CMP
    3: $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7079_CMP

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 4'---0   ->     0 4'1000
      1:     0 4'1001   ->     0 4'1000
      2:     0 4'0--1   ->     0 4'1000
      3:     0 4'1-11   ->     1 4'1000
      4:     0 4'11-1   ->     2 4'1000
      5:     1 4'1001   ->     0 4'0001
      6:     1 4'0--1   ->     0 4'0001
      7:     1 4'---0   ->     1 4'0001
      8:     1 4'1-11   ->     1 4'0001
      9:     1 4'11-1   ->     2 4'0001
     10:     2 4'1001   ->     0 4'0100
     11:     2 4'0--1   ->     0 4'0100
     12:     2 4'1-11   ->     1 4'0100
     13:     2 4'---0   ->     2 4'0100
     14:     2 4'11-1   ->     2 4'0100

-------------------------------------

FSM `$fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.c_state$15722' from module `IBEX_SoC':
-------------------------------------

  Information on FSM $fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.c_state$15722 (\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.c_state):

  Number of input signals:    8
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.go
    1: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$reduce_or$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:565$4267_Y
    2: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.al
    3: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.cmd_ack
    4: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [4]
    5: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [5]
    6: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [6]
    7: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [7]

  Output signals:
    0: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5812_CMP
    1: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5819_CMP
    2: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5830_CMP
    3: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5833_CMP
    4: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5842_CMP
    5: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5848_CMP

  State encoding:
    0:   6'-----1  <RESET STATE>
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 8'-----0-0   ->     0 6'001000
      1:     0 8'-----1--   ->     0 6'001000
      2:     0 8'0-00-0-1   ->     1 6'001000
      3:     0 8'0-01-0-1   ->     3 6'001000
      4:     0 8'0-1--0-1   ->     4 6'001000
      5:     0 8'1----0-1   ->     5 6'001000
      6:     1 8'----10--   ->     0 6'000001
      7:     1 8'-----1--   ->     0 6'000001
      8:     1 8'----00--   ->     1 6'000001
      9:     2 8'-0--10--   ->     0 6'000010
     10:     2 8'-----1--   ->     0 6'000010
     11:     2 8'-1--10--   ->     1 6'000010
     12:     2 8'----00--   ->     2 6'000010
     13:     3 8'-----1--   ->     0 6'100000
     14:     3 8'----100-   ->     2 6'100000
     15:     3 8'----101-   ->     3 6'100000
     16:     3 8'----00--   ->     3 6'100000
     17:     4 8'-----1--   ->     0 6'010000
     18:     4 8'----100-   ->     2 6'010000
     19:     4 8'----101-   ->     4 6'010000
     20:     4 8'----00--   ->     4 6'010000
     21:     5 8'-----1--   ->     0 6'000100
     22:     5 8'--0-10--   ->     3 6'000100
     23:     5 8'--1-10--   ->     4 6'000100
     24:     5 8'----00--   ->     5 6'000100

-------------------------------------

FSM `$fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.core_cmd$15730' from module `IBEX_SoC':
-------------------------------------

  Information on FSM $fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.core_cmd$15730 (\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.core_cmd):

  Number of input signals:   14
  Number of output signals:   4
  Number of state bits:       5

  Input signals:
    0: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.go
    1: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$reduce_or$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:565$4267_Y
    2: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5812_CMP
    3: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5819_CMP
    4: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5830_CMP
    5: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5833_CMP
    6: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5842_CMP
    7: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5848_CMP
    8: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.al
    9: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.cmd_ack
   10: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [4]
   11: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [5]
   12: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [6]
   13: \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [7]

  Output signals:
    0: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6004_CMP
    1: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6002_CMP
    2: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6001_CMP
    3: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$eq$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:222$4246_Y

  State encoding:
    0:    5'----1  <RESET STATE>
    1:    5'---1-
    2:    5'--1--
    3:    5'-1---
    4:    5'1----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 14'-----0--1----0   ->     0 4'0000
      1:     0 14'-----0000000--   ->     0 4'0000
      2:     0 14'-----0-----1--   ->     0 4'0000
      3:     0 14'----00----1---   ->     0 4'0000
      4:     0 14'-0--10----1---   ->     0 4'0000
      5:     0 14'----00---1----   ->     0 4'0000
      6:     0 14'----00-1------   ->     0 4'0000
      7:     0 14'----001-------   ->     0 4'0000
      8:     0 14'-----1--------   ->     0 4'0000
      9:     0 14'0-1--0--1----1   ->     1 4'0000
     10:     0 14'----101-----0-   ->     1 4'0000
     11:     0 14'----10-1----1-   ->     1 4'0000
     12:     0 14'--1-10---1----   ->     1 4'0000
     13:     0 14'0-01-0--1----1   ->     2 4'0000
     14:     0 14'----10-1----0-   ->     2 4'0000
     15:     0 14'----101-----1-   ->     2 4'0000
     16:     0 14'--0-10---1----   ->     2 4'0000
     17:     0 14'0-00-0--1----1   ->     3 4'0000
     18:     0 14'-1--10----1---   ->     3 4'0000
     19:     0 14'1----0--1----1   ->     4 4'0000
     20:     1 14'----10-----1--   ->     0 4'0100
     21:     1 14'-0--10----1---   ->     0 4'0100
     22:     1 14'-----1--------   ->     0 4'0100
     23:     1 14'-----0--1----0   ->     1 4'0100
     24:     1 14'0-1--0--1----1   ->     1 4'0100
     25:     1 14'----101-----0-   ->     1 4'0100
     26:     1 14'----10-1----1-   ->     1 4'0100
     27:     1 14'-----0000000--   ->     1 4'0100
     28:     1 14'----00-----1--   ->     1 4'0100
     29:     1 14'----00----1---   ->     1 4'0100
     30:     1 14'----00---1----   ->     1 4'0100
     31:     1 14'--1-10---1----   ->     1 4'0100
     32:     1 14'----00-1------   ->     1 4'0100
     33:     1 14'----001-------   ->     1 4'0100
     34:     1 14'0-01-0--1----1   ->     2 4'0100
     35:     1 14'----10-1----0-   ->     2 4'0100
     36:     1 14'----101-----1-   ->     2 4'0100
     37:     1 14'--0-10---1----   ->     2 4'0100
     38:     1 14'0-00-0--1----1   ->     3 4'0100
     39:     1 14'-1--10----1---   ->     3 4'0100
     40:     1 14'1----0--1----1   ->     4 4'0100
     41:     2 14'----10-----1--   ->     0 4'0010
     42:     2 14'-0--10----1---   ->     0 4'0010
     43:     2 14'-----1--------   ->     0 4'0010
     44:     2 14'0-1--0--1----1   ->     1 4'0010
     45:     2 14'----101-----0-   ->     1 4'0010
     46:     2 14'----10-1----1-   ->     1 4'0010
     47:     2 14'--1-10---1----   ->     1 4'0010
     48:     2 14'-----0--1----0   ->     2 4'0010
     49:     2 14'0-01-0--1----1   ->     2 4'0010
     50:     2 14'----10-1----0-   ->     2 4'0010
     51:     2 14'----101-----1-   ->     2 4'0010
     52:     2 14'-----0000000--   ->     2 4'0010
     53:     2 14'----00-----1--   ->     2 4'0010
     54:     2 14'----00----1---   ->     2 4'0010
     55:     2 14'----00---1----   ->     2 4'0010
     56:     2 14'--0-10---1----   ->     2 4'0010
     57:     2 14'----00-1------   ->     2 4'0010
     58:     2 14'----001-------   ->     2 4'0010
     59:     2 14'0-00-0--1----1   ->     3 4'0010
     60:     2 14'-1--10----1---   ->     3 4'0010
     61:     2 14'1----0--1----1   ->     4 4'0010
     62:     3 14'----10-----1--   ->     0 4'1000
     63:     3 14'-0--10----1---   ->     0 4'1000
     64:     3 14'-----1--------   ->     0 4'1000
     65:     3 14'0-1--0--1----1   ->     1 4'1000
     66:     3 14'----101-----0-   ->     1 4'1000
     67:     3 14'----10-1----1-   ->     1 4'1000
     68:     3 14'--1-10---1----   ->     1 4'1000
     69:     3 14'0-01-0--1----1   ->     2 4'1000
     70:     3 14'----10-1----0-   ->     2 4'1000
     71:     3 14'----101-----1-   ->     2 4'1000
     72:     3 14'--0-10---1----   ->     2 4'1000
     73:     3 14'-----0--1----0   ->     3 4'1000
     74:     3 14'0-00-0--1----1   ->     3 4'1000
     75:     3 14'-----0000000--   ->     3 4'1000
     76:     3 14'----00-----1--   ->     3 4'1000
     77:     3 14'----00----1---   ->     3 4'1000
     78:     3 14'-1--10----1---   ->     3 4'1000
     79:     3 14'----00---1----   ->     3 4'1000
     80:     3 14'----00-1------   ->     3 4'1000
     81:     3 14'----001-------   ->     3 4'1000
     82:     3 14'1----0--1----1   ->     4 4'1000
     83:     4 14'----10-----1--   ->     0 4'0001
     84:     4 14'-0--10----1---   ->     0 4'0001
     85:     4 14'-----1--------   ->     0 4'0001
     86:     4 14'0-1--0--1----1   ->     1 4'0001
     87:     4 14'----101-----0-   ->     1 4'0001
     88:     4 14'----10-1----1-   ->     1 4'0001
     89:     4 14'--1-10---1----   ->     1 4'0001
     90:     4 14'0-01-0--1----1   ->     2 4'0001
     91:     4 14'----10-1----0-   ->     2 4'0001
     92:     4 14'----101-----1-   ->     2 4'0001
     93:     4 14'--0-10---1----   ->     2 4'0001
     94:     4 14'0-00-0--1----1   ->     3 4'0001
     95:     4 14'-1--10----1---   ->     3 4'0001
     96:     4 14'-----0--1----0   ->     4 4'0001
     97:     4 14'1----0--1----1   ->     4 4'0001
     98:     4 14'-----0000000--   ->     4 4'0001
     99:     4 14'----00-----1--   ->     4 4'0001
    100:     4 14'----00----1---   ->     4 4'0001
    101:     4 14'----00---1----   ->     4 4'0001
    102:     4 14'----00-1------   ->     4 4'0001
    103:     4 14'----001-------   ->     4 4'0001

-------------------------------------

54.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$15701' from module `\IBEX_SoC'.
Mapping FSM `$fsm$\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$15707' from module `\IBEX_SoC'.
Mapping FSM `$fsm$\uut.IBEX.core.load_store_unit_i.data_type_q$15716' from module `\IBEX_SoC'.
Mapping FSM `$fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.c_state$15722' from module `\IBEX_SoC'.
Mapping FSM `$fsm$\uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.core_cmd$15730' from module `\IBEX_SoC'.

54.9. Executing OPT pass (performing simple optimizations).

54.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~36 debug messages>

54.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~129 debug messages>
Removed a total of 43 cells.

54.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~520 debug messages>

54.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15283 ($dff) from module IBEX_SoC (D = $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memrd$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:14$3957_DATA, Q = \uut.openstriVe_soc_mem_Sys0_S1.rdata).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$procdff$15319 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S_3.PRE).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$procdff$15318 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S_3.TMRCMP).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$procdff$15317 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S_3.TMROVCLR).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$procdff$15316 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S_3.TMREN).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$procdff$15315 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S_3.IRQEN).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$procdff$15301 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S_2.PRE).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$procdff$15300 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S_2.TMRCMP1).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$procdff$15299 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S_2.TMRCMP2).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$procdff$15298 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S_2.TMREN).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$procdff$15360 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$0\clkdiv[31:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S3.clkdiv).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$procdff$15359 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$0\TMR[31:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S3.TMR).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$procdff$15358 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$0\TMROV[0:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S3.TMROV).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$procdff$15509 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$0\clkdiv[31:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S2.clkdiv).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$procdff$15508 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$0\TMR[31:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S2.TMR).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$procdff$15507 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$0\pwm[0:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S2.pwm).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.\sro[0].$procdff$15489 ($adff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.sro[0].datao [6:0] \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.sro[0].dout_s }, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.sro[0].datao).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.\sri[0].$procdff$15518 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.\sri[0].$0\sr_reg[7:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.sri[0].sr_reg).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procdff$15368 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.stop, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.stop_s).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procdff$15367 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$0\shift_count[4:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.shift_count).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procdff$15364 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12626_Y, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.sclk).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procdff$15363 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$0\csb[0:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.csb).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procdff$15362 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$0\done[0:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.done).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procdff$15361 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$0\busy[0:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL.busy).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.$procdff$15372 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [1:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CTRL_REG).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.$procdff$15371 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [9:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_CFG_REG).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.$procdff$15370 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [7:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.SPI_DATAi_REG).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.$procdff$15369 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.$0\DONE[0:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S1.DONE).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15275 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$0\cnt[15:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.cnt).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15270 ($adff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.fSDA [1:0] \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.cSDA [1] }, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.fSDA).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15269 ($adff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.fSCL [1:0] \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.cSCL [1] }, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.fSCL).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15261 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.core_cmd [3], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.cmd_stop).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15259 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.sSDA, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.dout).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15258 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$0\c_state[17:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.c_state).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15257 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$0\sda_chk[0:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.sda_chk).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15256 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$0\sda_oen[0:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.sda_oen).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15255 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$0\scl_oen[0:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.bit_controller.scl_oen).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procdff$15253 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\sr[7:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.sr).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procdff$15252 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\dcnt[2:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.dcnt).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procdff$15248 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$0\ack_out[0:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.byte_controller.ack_out).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procdff$15244 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [7:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.txr).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procdff$15243 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [7:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.ctr).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procdff$15242 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [7:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.prer [15:8]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procdff$15242 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [7:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.prer [7:0]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procdff$15241 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [3], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [3]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procdff$15241 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$0\cr[7:0] [7:4], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [7:4]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procdff$15241 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$0\cr[7:0] [2:0], Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.S0.i2c.cr [2:0]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$procdff$15379 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWRITE, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.AHB2APB_BR.last_HWRITE).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$procdff$15378 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.HADDR, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.AHB2APB_BR.last_HADDR).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$procdff$15375 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.apb_sys_inst_0.AHB2APB_BR.HADDR_Mux, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.AHB2APB_BR.PADDR).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$procdff$15373 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.apb_sys_inst_0.AHB2APB_BR.PWRITE_next, Q = \uut.ahb_sys_0_uut.apb_sys_inst_0.AHB2APB_BR.PWRITE).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S_3.$procdff$15529 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [3:0], Q = \uut.ahb_sys_0_uut.S_3.db_reg).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S_2.$procdff$15494 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [15:0], Q = \uut.ahb_sys_0_uut.S_2.WGPIODOUT).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S_2.$procdff$15493 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [15:0], Q = \uut.ahb_sys_0_uut.S_2.WGPIOPU).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S_2.$procdff$15492 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [15:0], Q = \uut.ahb_sys_0_uut.S_2.WGPIOPD).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S_2.$procdff$15491 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [15:0], Q = \uut.ahb_sys_0_uut.S_2.WGPIODIR).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S1.$procdff$15484 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [31:24], Q = \uut.ahb_sys_0_uut.S1.buf_data [31:24]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S1.$procdff$15483 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [23:16], Q = \uut.ahb_sys_0_uut.S1.buf_data [23:16]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S1.$procdff$15482 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [15:8], Q = \uut.ahb_sys_0_uut.S1.buf_data [15:8]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S1.$procdff$15481 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.HWDATA [7:0], Q = \uut.ahb_sys_0_uut.S1.buf_data [7:0]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S1.$procdff$15480 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.buf_we_nxt, Q = \uut.ahb_sys_0_uut.S1.buf_we).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S1.$procdff$15479 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.HADDR [13:2], Q = \uut.ahb_sys_0_uut.S1.buf_addr).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S1.$procdff$15478 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S1.buf_hit_nxt, Q = \uut.ahb_sys_0_uut.S1.buf_hit).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15471 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[31]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15470 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[30]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15469 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[29]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15468 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[28]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15467 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[27]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15466 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[26]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15465 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[25]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15464 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[24]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15463 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[23]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15462 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[22]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15461 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[21]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15460 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[20]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15459 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[19]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15458 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[18]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15457 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[17]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15456 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[16]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15455 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[15]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15454 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[14]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15453 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[13]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15452 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[12]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15451 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[11]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15450 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[10]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15449 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[9]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15448 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[8]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15447 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[7]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15446 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[6]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15445 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[5]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15444 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[4]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15443 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[3]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15442 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[2]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15441 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[1]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15440 ($dff) from module IBEX_SoC (D = { \uut.ahb_sys_0_uut.S0.fData1 \uut.ahb_sys_0_uut.S0.fData0 }, Q = \uut.ahb_sys_0_uut.S0.CD[0]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15439 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[31]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15438 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[30]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15437 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[29]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15436 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[28]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15435 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[27]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15434 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[26]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15433 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[25]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15432 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[24]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15431 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[23]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15430 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[22]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15429 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[21]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15428 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[20]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15427 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[19]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15426 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[18]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15425 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[17]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15424 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[16]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15423 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[15]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15422 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[14]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15421 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[13]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15420 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[12]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15419 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[11]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15418 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[10]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15417 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[9]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15416 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[8]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15415 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[7]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15414 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[6]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15413 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[5]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15412 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[4]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15411 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[3]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15410 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[2]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15409 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[1]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15408 ($dff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:8], Q = \uut.ahb_sys_0_uut.S0.CT[0]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15405 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\S0.$or$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1505_Y, Q = \uut.ahb_sys_0_uut.S0.CV).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15404 ($adff) from module IBEX_SoC (D = \uut.ahb_sys_0_uut.S0.HADDR, Q = \uut.ahb_sys_0_uut.S0.APhase_HADDR).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15403 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\S0.$0\pending_flag[0:0], Q = \uut.ahb_sys_0_uut.S0.pending_flag).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15402 ($adff) from module IBEX_SoC (D = 1'0, Q = \uut.ahb_sys_0_uut.S0.start).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15401 ($adff) from module IBEX_SoC (D = $flatten\uut.\ahb_sys_0_uut.\S0.$0\HREADYOUT[0:0], Q = \uut.ahb_sys_0_uut.S0.HREADYOUT).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15394 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData1 [3:0]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15394 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData1 [7:4]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15394 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData1 [11:8]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15394 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData1 [15:12]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15394 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData1 [19:16]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15394 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData1 [23:20]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15394 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData1 [27:24]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15394 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData1 [31:28]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15393 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData0 [31:28]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15393 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData0 [3:0]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15393 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData0 [7:4]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15393 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData0 [11:8]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15393 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData0 [15:12]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15393 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData0 [19:16]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15393 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData0 [23:20]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\S0.$procdff$15393 ($adff) from module IBEX_SoC (D = \PAD_fdio_Sys0_S0, Q = \uut.ahb_sys_0_uut.S0.fData0 [27:24]).
Adding EN signal on $flatten\uut.\ahb_sys_0_uut.\AHB.$procdff$15302 ($adff) from module IBEX_SoC (D = { 1'0 \uut.ahb_sys_0_uut.S0.HADDR [31:24] }, Q = \uut.ahb_sys_0_uut.AHB.APAGE).
Setting constant 0-bit at position 8 on $auto$opt_dff.cc:764:run$16561 ($adffe) from module IBEX_SoC.
Adding EN signal on $flatten\uut.\IBEX.\core.\load_store_unit_i.$procdff$15312 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31:8], Q = \uut.IBEX.core.load_store_unit_i.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\load_store_unit_i.$procdff$15311 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.load_store_unit_i.lsu_we_i, Q = \uut.IBEX.core.load_store_unit_i.data_we_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\load_store_unit_i.$procdff$15310 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.load_store_unit_i.lsu_sign_ext_i, Q = \uut.IBEX.core.load_store_unit_i.data_sign_ext_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\load_store_unit_i.$procdff$15308 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.ex_block_i.alu_adder_result_ext [2:1], Q = \uut.IBEX.core.load_store_unit_i.rdata_offset_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\load_store_unit_i.$procdff$15307 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.ex_block_i.alu_adder_result_ext [32:1], Q = \uut.IBEX.core.load_store_unit_i.addr_last_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\load_store_unit_i.$procdff$15306 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.load_store_unit_i.ls_fsm_ns, Q = \uut.IBEX.core.load_store_unit_i.ls_fsm_cs).
Adding EN signal on $flatten\uut.\IBEX.\core.\load_store_unit_i.$procdff$15305 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.load_store_unit_i.lsu_err_d, Q = \uut.IBEX.core.load_store_unit_i.lsu_err_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\load_store_unit_i.$procdff$15304 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.load_store_unit_i.pmp_err_d, Q = \uut.IBEX.core.load_store_unit_i.pmp_err_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\load_store_unit_i.$procdff$15303 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.load_store_unit_i.handle_misaligned_d, Q = \uut.IBEX.core.load_store_unit_i.handle_misaligned_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$15517 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_d, Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$15515 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_d [0], Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [0]).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$15514 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_d [31:0], Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [31:0]).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$15513 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_d [1], Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [1]).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$15512 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_d [63:32], Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [63:32]).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$15511 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.rdata_pmp_err_q [0], Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [2]).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$15510 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i, Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [95:64]).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$15506 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d [31:2], Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [31:2]).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$15506 ($dff) from module IBEX_SoC (D = $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:149$4446_Y [1:0], Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [1:0]).
Adding SRST signal on $auto$opt_dff.cc:764:run$16627 ($dffe) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [0], Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [0], rval = 1'0).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$15505 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d, Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$15504 ($adff) from module IBEX_SoC (D = { 1'0 \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.rdata_pmp_err_q [1] }, Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.rdata_pmp_err_q).
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$16630 ($adffe) from module IBEX_SoC.
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.$procdff$15526 ($dff) from module IBEX_SoC (D = { \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q 1'0 }, Q = \uut.IBEX.core.if_stage_i.pc_id_o).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$16631 ($dffe) from module IBEX_SoC.
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.$procdff$15525 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.illegal_c_instr_out, Q = \uut.IBEX.core.if_stage_i.illegal_c_insn_id_o).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.$procdff$15524 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.fetch_err_plus2, Q = \uut.IBEX.core.if_stage_i.instr_fetch_err_plus2_o).
Adding SRST signal on $auto$opt_dff.cc:764:run$16633 ($dffe) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_plus2, Q = \uut.IBEX.core.if_stage_i.instr_fetch_err_plus2_o, rval = 1'0).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.$procdff$15523 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.instr_err_out, Q = \uut.IBEX.core.if_stage_i.instr_fetch_err_o).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.$procdff$15522 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.instr_is_compressed_out, Q = \uut.IBEX.core.if_stage_i.instr_is_compressed_id_o).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.$procdff$15521 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [15:0], Q = \uut.IBEX.core.if_stage_i.instr_rdata_c_id_o).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.$procdff$15520 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.instr_out, Q = \uut.IBEX.core.if_stage_i.instr_rdata_alu_id_o).
Adding EN signal on $flatten\uut.\IBEX.\core.\if_stage_i.$procdff$15519 ($dff) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.instr_out, Q = \uut.IBEX.core.if_stage_i.instr_rdata_id_o).
Adding EN signal on $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procdff$15353 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.id_stage_i.controller_i.debug_mode_d, Q = \uut.IBEX.core.id_stage_i.controller_i.debug_mode_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procdff$15352 ($adff) from module IBEX_SoC (D = 1'0, Q = \uut.IBEX.core.id_stage_i.controller_i.nmi_mode_q).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$16657 ($adffe) from module IBEX_SoC.
Adding EN signal on $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procdff$15351 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.id_stage_i.controller_i.ctrl_fsm_ns, Q = \uut.IBEX.core.id_stage_i.controller_i.ctrl_fsm_cs).
Adding EN signal on $flatten\uut.\IBEX.\core.\id_stage_i.$procdff$15281 ($adff) from module IBEX_SoC (D = $flatten\uut.\IBEX.\core.\id_stage_i.$2\id_fsm_d[0:0], Q = \uut.IBEX.core.id_stage_i.id_fsm_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\id_stage_i.$procdff$15280 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.id_stage_i.imd_val_d_ex_i [67:34], Q = \uut.IBEX.core.id_stage_i.imd_val_q [67:34]).
Adding EN signal on $flatten\uut.\IBEX.\core.\id_stage_i.$procdff$15279 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.id_stage_i.imd_val_d_ex_i [33:32], Q = \uut.IBEX.core.id_stage_i.imd_val_q [33:32]).
Adding EN signal on $flatten\uut.\IBEX.\core.\id_stage_i.$procdff$15279 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.id_stage_i.imd_val_d_ex_i [31:0], Q = \uut.IBEX.core.id_stage_i.imd_val_q [31:0]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15350 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [31:0]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15349 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [63:32]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15348 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [95:64]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15347 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [127:96]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15346 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [159:128]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15345 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [191:160]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15344 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [223:192]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15343 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [255:224]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15342 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [287:256]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15341 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [319:288]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15340 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [351:320]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15339 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [383:352]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15338 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [415:384]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15337 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [447:416]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15336 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [479:448]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15335 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [511:480]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15334 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [543:512]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15333 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [575:544]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15332 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [607:576]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15331 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [639:608]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15330 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [671:640]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15329 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [703:672]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15328 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [735:704]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15327 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [767:736]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15326 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [799:768]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15325 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [831:800]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15324 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [863:832]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15323 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [895:864]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15322 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [927:896]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15321 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [959:928]).
Adding EN signal on $flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$procdff$15320 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.gen_regfile_ff.register_file_i.wdata_a_i, Q = \uut.IBEX.core.gen_regfile_ff.register_file_i.rf_reg_q [991:960]).
Adding EN signal on $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$15387 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.div_counter_d, Q = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.div_counter_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$15386 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.op_quotient_d, Q = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.op_quotient_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$15385 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.ex_block_i.alu_i.is_equal, Q = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.div_by_zero_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$15384 ($adff) from module IBEX_SoC (D = $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:642$4700_Y, Q = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.op_numerator_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_mtvec_csr.$procdff$15390 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.u_mtvec_csr.wr_data_i, Q = \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_mtval_csr.$procdff$15486 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.u_mtval_csr.wr_data_i, Q = \uut.IBEX.core.cs_registers_i.u_mtval_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_mstatus_csr.$procdff$15388 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.u_mstatus_csr.wr_data_i [5:2], Q = \uut.IBEX.core.cs_registers_i.u_mstatus_csr.rdata_q [5:2]).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_mstatus_csr.$procdff$15388 ($adff) from module IBEX_SoC (D = { \uut.IBEX.core.cs_registers_i.csr_wdata_int [17] \uut.IBEX.core.cs_registers_i.csr_wdata_int [21] }, Q = \uut.IBEX.core.cs_registers_i.u_mstatus_csr.rdata_q [1:0]).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_mstack_epc_csr.$procdff$15486 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.u_mepc_csr.rdata_q, Q = \uut.IBEX.core.cs_registers_i.u_mstack_epc_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_mstack_csr.$procdff$15392 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.u_mstatus_csr.rdata_q [4:2], Q = \uut.IBEX.core.cs_registers_i.u_mstack_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_mstack_cause_csr.$procdff$15488 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.u_mcause_csr.rdata_q, Q = \uut.IBEX.core.cs_registers_i.u_mstack_cause_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_mscratch_csr.$procdff$15486 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.csr_wdata_int, Q = \uut.IBEX.core.cs_registers_i.u_mscratch_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_mie_csr.$procdff$15389 ($adff) from module IBEX_SoC (D = { \uut.IBEX.core.cs_registers_i.csr_wdata_int [3] \uut.IBEX.core.cs_registers_i.csr_wdata_int [7] \uut.IBEX.core.cs_registers_i.csr_wdata_int [11] \uut.IBEX.core.cs_registers_i.csr_wdata_int [30:16] }, Q = \uut.IBEX.core.cs_registers_i.u_mie_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_mepc_csr.$procdff$15486 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.u_mepc_csr.wr_data_i, Q = \uut.IBEX.core.cs_registers_i.u_mepc_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_mcause_csr.$procdff$15488 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.u_mcause_csr.wr_data_i, Q = \uut.IBEX.core.cs_registers_i.u_mcause_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_dscratch1_csr.$procdff$15486 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.csr_wdata_int, Q = \uut.IBEX.core.cs_registers_i.u_dscratch1_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_dscratch0_csr.$procdff$15486 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.csr_wdata_int, Q = \uut.IBEX.core.cs_registers_i.u_dscratch0_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_depc_csr.$procdff$15486 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.u_depc_csr.wr_data_i, Q = \uut.IBEX.core.cs_registers_i.u_depc_csr.rdata_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_dcsr_csr.$procdff$15391 ($adff) from module IBEX_SoC (D = { \uut.IBEX.core.cs_registers_i.u_dcsr_csr.wr_data_i [8:6] \uut.IBEX.core.cs_registers_i.u_dcsr_csr.wr_data_i [1:0] }, Q = { \uut.IBEX.core.cs_registers_i.u_dcsr_csr.rdata_q [8:6] \uut.IBEX.core.cs_registers_i.u_dcsr_csr.rdata_q [1:0] }).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_dcsr_csr.$procdff$15391 ($adff) from module IBEX_SoC (D = { 16'0100000000000000 \uut.IBEX.core.cs_registers_i.csr_wdata_int [15] 1'0 \uut.IBEX.core.cs_registers_i.csr_wdata_int [13:11] 5'00000 \uut.IBEX.core.cs_registers_i.csr_wdata_int [2] }, Q = { \uut.IBEX.core.cs_registers_i.u_dcsr_csr.rdata_q [31:9] \uut.IBEX.core.cs_registers_i.u_dcsr_csr.rdata_q [5:2] }).
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 1-bit at position 25 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $auto$opt_dff.cc:764:run$16743 ($adffe) from module IBEX_SoC.
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\u_cpuctrl_csr.$procdff$15488 ($adff) from module IBEX_SoC (D = 6'000000, Q = \uut.IBEX.core.cs_registers_i.u_cpuctrl_csr.rdata_q).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$16744 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$16744 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$16744 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$16744 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$16744 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$16744 ($adffe) from module IBEX_SoC.
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\minstret_counter_i.$procdff$15487 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.minstret_counter_i.counter_d [63:32], Q = \uut.IBEX.core.cs_registers_i.minstret_counter_i.counter_q [63:32]).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\minstret_counter_i.$procdff$15487 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.minstret_counter_i.counter_d [31:0], Q = \uut.IBEX.core.cs_registers_i.minstret_counter_i.counter_q [31:0]).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\mcycle_counter_i.$procdff$15487 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.mcycle_counter_i.counter_d [63:32], Q = \uut.IBEX.core.cs_registers_i.mcycle_counter_i.counter_q [63:32]).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.\mcycle_counter_i.$procdff$15487 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.mcycle_counter_i.counter_d [31:0], Q = \uut.IBEX.core.cs_registers_i.mcycle_counter_i.counter_q [31:0]).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.$procdff$15314 ($adff) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.priv_lvl_d, Q = \uut.IBEX.core.cs_registers_i.priv_lvl_q).
Adding EN signal on $flatten\uut.\IBEX.\core.\cs_registers_i.$procdff$15313 ($adff) from module IBEX_SoC (D = { \uut.IBEX.core.cs_registers_i.csr_wdata_int [2] 1'0 \uut.IBEX.core.cs_registers_i.csr_wdata_int [0] }, Q = \uut.IBEX.core.cs_registers_i.mcountinhibit_q).
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$16776 ($adffe) from module IBEX_SoC.

54.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 299 unused cells and 378 unused wires.
<suppressed ~311 debug messages>

54.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~54 debug messages>

54.9.9. Rerunning OPT passes. (Maybe there is more to do..)

54.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~344 debug messages>

54.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8481: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8611: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8697: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8745: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8922: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8968: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9014: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $auto$opt_reduce.cc:134:opt_mux$16778 $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9060: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9105: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
  Optimizing cells in module \IBEX_SoC.
Performed a total of 9 changes.

54.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~285 debug messages>
Removed a total of 95 cells.

54.9.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$16630 ($adffe) from module IBEX_SoC.

54.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 6 unused cells and 127 unused wires.
<suppressed ~20 debug messages>

54.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~5 debug messages>

54.9.16. Rerunning OPT passes. (Maybe there is more to do..)

54.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~344 debug messages>

54.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.9.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.9.20. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$16620 ($dffe) from module IBEX_SoC.
Adding SRST signal on $auto$opt_dff.cc:764:run$16618 ($dffe) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [2], Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [1], rval = 1'0).
Adding SRST signal on $auto$opt_dff.cc:764:run$16616 ($dffe) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [1], Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [0], rval = 1'0).

54.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 3 unused cells and 6 unused wires.
<suppressed ~4 debug messages>

54.9.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

54.9.23. Rerunning OPT passes. (Maybe there is more to do..)

54.9.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~342 debug messages>

54.9.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.9.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.9.27. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:702:run$16779 ($sdffce) from module IBEX_SoC.
Adding SRST signal on $auto$opt_dff.cc:702:run$16634 ($sdffce) from module IBEX_SoC (D = $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$and$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:66$4343_Y, Q = \uut.IBEX.core.if_stage_i.instr_fetch_err_plus2_o, rval = 1'0).

54.9.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 1 unused cells and 1 unused wires.
<suppressed ~2 debug messages>

54.9.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~3 debug messages>

54.9.30. Rerunning OPT passes. (Maybe there is more to do..)

54.9.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~341 debug messages>

54.9.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.9.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.9.34. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:702:run$16780 ($sdffce) from module IBEX_SoC.

54.9.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 2 unused cells and 5 unused wires.
<suppressed ~3 debug messages>

54.9.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~7 debug messages>

54.9.37. Rerunning OPT passes. (Maybe there is more to do..)

54.9.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~339 debug messages>

54.9.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.9.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.9.41. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:702:run$16783 ($sdffce) from module IBEX_SoC.

54.9.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 1 unused cells and 5 unused wires.
<suppressed ~2 debug messages>

54.9.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~1 debug messages>

54.9.44. Rerunning OPT passes. (Maybe there is more to do..)

54.9.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~339 debug messages>

54.9.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.9.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.9.48. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$16635 ($dffe) from module IBEX_SoC.

54.9.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 1 unused cells and 2 unused wires.
<suppressed ~2 debug messages>

54.9.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~19 debug messages>

54.9.51. Rerunning OPT passes. (Maybe there is more to do..)

54.9.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~338 debug messages>

54.9.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.9.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

54.9.55. Executing OPT_DFF pass (perform DFF optimizations).

54.9.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 0 unused cells and 17 unused wires.
<suppressed ~1 debug messages>

54.9.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~3 debug messages>

54.9.58. Rerunning OPT passes. (Maybe there is more to do..)

54.9.59. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~336 debug messages>

54.9.60. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.9.61. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.9.62. Executing OPT_DFF pass (perform DFF optimizations).

54.9.63. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

54.9.64. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

54.9.65. Rerunning OPT passes. (Maybe there is more to do..)

54.9.66. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~336 debug messages>

54.9.67. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.9.68. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.9.69. Executing OPT_DFF pass (perform DFF optimizations).

54.9.70. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..

54.9.71. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

54.9.72. Finished OPT passes. (There is nothing left to do.)

54.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5533 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5534 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5535 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5536 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5537 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5538 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5539 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5540 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5541 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5542 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5543 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5544 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5545 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5546 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5547 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5548 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:580$5397 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:581$5398 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:582$5399 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:583$5400 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:584$5401 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:585$5402 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:586$5403 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:587$5404 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:588$5405 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:589$5406 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:590$5407 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:591$5408 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:592$5409 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:593$5410 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:594$5411 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:595$5412 (uut.IBEX.core.cs_registers_i.pmp_addr_rdata).
Removed top 15 address bits (of 22) from memory read port IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memrd$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:14$3957 (uut.openstriVe_soc_mem_Sys0_S1.mem).
Removed top 15 address bits (of 22) from memory write port IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3958 (uut.openstriVe_soc_mem_Sys0_S1.mem).
Removed top 15 address bits (of 22) from memory write port IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3959 (uut.openstriVe_soc_mem_Sys0_S1.mem).
Removed top 15 address bits (of 22) from memory write port IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3960 (uut.openstriVe_soc_mem_Sys0_S1.mem).
Removed top 15 address bits (of 22) from memory write port IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3961 (uut.openstriVe_soc_mem_Sys0_S1.mem).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$15891 ($eq).
Removed top 2 bits (of 4) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16232 ($ne).
Removed top 4 bits (of 5) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$15902 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$15926 ($eq).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$15938 ($eq).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$15943 ($eq).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16183 ($ne).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$15983 ($eq).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$15991 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$16012 ($eq).
Removed top 2 bits (of 6) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$16049 ($eq).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16205 ($ne).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$16071 ($eq).
Removed top 4 bits (of 6) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$16086 ($eq).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$16092 ($eq).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$16096 ($eq).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$16102 ($eq).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$16106 ($eq).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$16110 ($eq).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$16115 ($eq).
Removed top 4 bits (of 5) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16241 ($ne).
Removed top 3 bits (of 4) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16248 ($ne).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16261 ($ne).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16283 ($ne).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16507 ($ne).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16509 ($ne).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16576 ($ne).
Removed top 3 bits (of 4) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16645 ($ne).
Removed top 3 bits (of 4) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16661 ($ne).
Removed top 5 bits (of 7) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16671 ($ne).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16677 ($ne).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16760 ($ne).
Removed top 3 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.$eq$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:100$3965 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.$eq$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:101$3966 ($eq).
Removed top 31 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:101$3968 ($mux).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.$eq$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:102$3969 ($eq).
Removed top 31 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:103$3972 ($mux).
Removed top 1 bits (of 3) from mux cell IBEX_SoC.$flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:108$3985 ($mux).
Removed top 31 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:110$3988 ($mux).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.$procmux$6590_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.$procmux$6591_CMP0 ($eq).
Removed top 1 bits (of 3) from mux cell IBEX_SoC.$flatten\uut.\IBEX.$procmux$6593 ($pmux).
Removed top 2 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.$procmux$6596_CMP0 ($eq).
Removed top 2 bits (of 5) from mux cell IBEX_SoC.$flatten\uut.\IBEX.$procmux$6607 ($mux).
Removed top 3 bits (of 5) from mux cell IBEX_SoC.$flatten\uut.\IBEX.$procmux$6617 ($mux).
Removed top 1 bits (of 5) from mux cell IBEX_SoC.$flatten\uut.\IBEX.$procmux$6630 ($mux).
Removed top 4 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.$procmux$6640_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5104 ($eq).
Removed top 3 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5106 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5108 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5110 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5112 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5114 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5116 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5118 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5120 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5122 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5124 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5126 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5128 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5130 ($eq).
Removed top 21 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$shiftx$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:0$5166 ($shiftx).
Removed top 21 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$shiftx$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:0$5169 ($shiftx).
Removed top 31 bits (of 32) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$shl$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5477 ($shl).
Removed top 31 bits (of 32) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$and$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5479 ($and).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:791$5496 ($eq).
Removed top 17 bits (of 18) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$and$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:802$5501 ($and).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7626 ($mux).
Removed top 1 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8191_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP0 ($eq).
Removed top 29 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8428 ($mux).
Removed top 29 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8431 ($mux).
Removed top 30 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8449 ($mux).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP1 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP2 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP3 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP4 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP5 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP6 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP7 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP8 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP9 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP10 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP11 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP12 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP13 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP14 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP15 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP16 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP17 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP18 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP19 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP20 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP21 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP22 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP23 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP24 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP25 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP26 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP27 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CMP28 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8509_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8510_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8511_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8512_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8601_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8811_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8812_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8813_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8814_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8815_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8816_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8817_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8818_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8819_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8820_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8821_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8822_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8823_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8824_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8825_CMP0 ($eq).
Removed top 29 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9156 ($pmux).
Removed top 1 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9331_CMP0 ($eq).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.\mcycle_counter_i.$procmux$15087 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.\mcycle_counter_i.$procmux$15084 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.\mcycle_counter_i.$procmux$15075 ($mux).
Removed top 63 bits (of 64) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:31$4651 ($add).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.\minstret_counter_i.$procmux$15087 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.\minstret_counter_i.$procmux$15084 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.\minstret_counter_i.$procmux$15075 ($mux).
Removed top 63 bits (of 64) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:31$4651 ($add).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:225$3674 ($eq).
Removed top 1 bits (of 3) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:256$3680 ($mux).
Removed top 1 bits (of 3) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:259$3681 ($mux).
Removed top 1 bits (of 3) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:278$3686 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6705 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6723 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6736 ($mux).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6739_CMP0 ($eq).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6743 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6765 ($mux).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6771_CMP0 ($eq).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6776 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6819 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6827 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6836 ($mux).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6839_CMP0 ($eq).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6845 ($mux).
Removed top 1 bits (of 3) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6874 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6887 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6925 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6935 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6985 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7022 ($pmux).
Removed top 2 bits (of 17) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16225 ($ne).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7097_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7162_CMP0 ($eq).
Removed top 1 bits (of 4) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7190 ($pmux).
Removed top 1 bits (of 4) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7203 ($pmux).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$auto$fsm_map.cc:77:implement_pattern_cache$15866 ($eq).
Removed top 2 bits (of 34) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_ex_block.v:384$5574 ($mux).
Removed top 3 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12689_CMP1 ($eq).
Removed top 4 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12689_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12688_CMP1 ($eq).
Removed top 2 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12687_CMP4 ($eq).
Removed top 2 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12687_CMP3 ($eq).
Removed top 2 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12687_CMP1 ($eq).
Removed top 2 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12687_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12685_CMP5 ($eq).
Removed top 1 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12685_CMP4 ($eq).
Removed top 1 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12685_CMP3 ($eq).
Removed top 1 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12685_CMP2 ($eq).
Removed top 1 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12685_CMP1 ($eq).
Removed top 1 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12685_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12684_CMP3 ($eq).
Removed top 1 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12684_CMP2 ($eq).
Removed top 1 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12684_CMP1 ($eq).
Removed top 1 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12684_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:483$4805 ($eq).
Removed top 3 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:483$4804 ($eq).
Removed top 3 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:482$4802 ($eq).
Removed top 4 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:482$4801 ($eq).
Removed top 1 bits (of 33) from port Y of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$sshr$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:454$4794 ($sshr).
Removed top 2 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:442$4789 ($eq).
Removed top 26 bits (of 32) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:422$4781 ($sub).
Removed top 27 bits (of 32) from port Y of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:422$4781 ($sub).
Removed top 5 bits (of 6) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:422$4781 ($sub).
Removed top 1 bits (of 34) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:364$4766 ($add).
Removed top 1 bits (of 34) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:364$4766 ($add).
Removed top 1 bits (of 34) from port Y of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:364$4766 ($add).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13264 ($mux).
Removed top 1 bits (of 34) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13156 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13135 ($mux).
Removed top 1 bits (of 35) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4717 ($add).
Removed top 1 bits (of 35) from port Y of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4717 ($add).
Removed top 1 bits (of 35) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4717 ($add).
Removed top 18 bits (of 35) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4716 ($mul).
Removed top 18 bits (of 35) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4716 ($mul).
Removed top 1 bits (of 35) from port Y of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4716 ($mul).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:677$4712 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:675$4711 ($mux).
Removed top 4 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:659$4705 ($eq).
Removed top 4 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:614$4690 ($sub).
Removed top 31 bits (of 32) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$shl$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:597$4679 ($shl).
Removed top 1 bits (of 33) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:596$4677 ($or).
Removed top 1 bits (of 33) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:596$4677 ($or).
Removed top 1 bits (of 33) from port Y of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:596$4677 ($or).
Removed top 27 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:615$5591 ($mux).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:760$5629 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:760$5630 ($eq).
Removed top 1 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5643 ($eq).
Removed top 1 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5644 ($eq).
Removed top 1 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5646 ($eq).
Removed top 1 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:764$5648 ($eq).
Removed top 29 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:668$5694 ($mux).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6114_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6115_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6116_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6583_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10632_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10631_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10505_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10473_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10462_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10445_CMP2 ($eq).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10445_CMP1 ($eq).
Removed top 2 bits (of 7) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10299_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10227_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10222_CMP9 ($eq).
Removed top 7 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10222_CMP8 ($eq).
Removed top 9 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10222_CMP7 ($eq).
Removed top 7 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10222_CMP6 ($eq).
Removed top 7 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10222_CMP5 ($eq).
Removed top 7 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10222_CMP4 ($eq).
Removed top 8 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10222_CMP3 ($eq).
Removed top 8 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10222_CMP2 ($eq).
Removed top 1 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10222_CMP1 ($eq).
Removed top 6 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10221_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10220_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10219_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10218_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10217_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10216_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10215_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10214_CMP0 ($eq).
Removed top 3 bits (of 7) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10172_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10170_CMP0 ($eq).
Removed top 11 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10033_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10032_CMP0 ($eq).
Removed top 3 bits (of 12) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$10030_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9858 ($mux).
Removed top 1 bits (of 3) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9750 ($mux).
Removed top 2 bits (of 3) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9694 ($mux).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_decoder.v:923$5000 ($eq).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$auto$opt_dff.cc:218:make_patterns_logic$16659 ($ne).
Removed top 3 bits (of 4) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12266 ($mux).
Removed top 3 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12112_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12111_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12089_CMP0 ($eq).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12086 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12074 ($mux).
Removed top 2 bits (of 4) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12063 ($mux).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12033_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11838_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11639_CMP0 ($eq).
Removed top 3 bits (of 6) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11625 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11559 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11481 ($mux).
Removed top 3 bits (of 6) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11295 ($mux).
Removed top 4 bits (of 6) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11259 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11108 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10991 ($mux).
Removed top 2 bits (of 4) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10946 ($mux).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP0 ($eq).
Removed top 4 bits (of 6) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:775$4945 ($mux).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$ne$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:487$4874 ($ne).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.$procmux$15180_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.$procmux$15181_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.$procmux$15182_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.$procmux$15186_CMP0 ($eq).
Removed top 3 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12985 ($mux).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12942_CMP1 ($eq).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12917_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12910_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12909_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12908_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12887_CMP1 ($eq).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12887_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12870_CMP0 ($eq).
Removed top 7 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12821 ($mux).
Removed top 11 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12775 ($mux).
Removed top 3 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_compressed_decoder.v:343$3191 ($eq).
Removed top 29 bits (of 31) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:88$4361 ($add).
Removed top 29 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:145$4443 ($add).
Removed top 4 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_register_file_ff.v:41$5102 ($eq).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6645 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6647 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6649 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6651 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6657 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6659 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6661 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6663 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6669 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6671 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6673 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6675 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6681 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6683 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6685 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6687 ($mux).
Removed top 15 bits (of 22) from FF cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15284 ($dff).
Removed top 24 bits (of 32) from FF cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15285 ($dff).
Removed top 7 bits (of 8) from FF cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff).
Removed top 15 bits (of 22) from FF cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15287 ($dff).
Removed top 16 bits (of 32) from FF cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15288 ($dff).
Removed top 7 bits (of 8) from FF cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff).
Removed top 15 bits (of 22) from FF cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15290 ($dff).
Removed top 8 bits (of 32) from FF cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff).
Removed top 7 bits (of 8) from FF cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff).
Removed top 15 bits (of 22) from FF cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15293 ($dff).
Removed top 7 bits (of 8) from FF cell IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13315_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13316_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13317_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13318_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13319_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13320_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13321_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13322_CMP0 ($eq).
Removed top 4 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13323_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13324_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13325_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13326_CMP0 ($eq).
Removed top 5 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13327_CMP0 ($eq).
Removed top 6 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13328_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13332_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13333_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13334_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13335_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13336_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13337_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13338_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13339_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13340_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13341_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13342_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13343_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13344_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13345_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13346_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13347_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13348_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13349_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13350_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13351_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13352_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13353_CMP0 ($eq).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13718 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13712 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13703 ($mux).
Removed top 1 bits (of 2) from mux cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13682 ($mux).
Removed top 1 bits (of 2) from mux cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13676 ($mux).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13667_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13654_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13636_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13617_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13601_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13584_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13570_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13555_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13543_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13533_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13522_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13514_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13505_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13499_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13492_CMP0 ($eq).
Removed top 3 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13488_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13451_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13450_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13449_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13448_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13447_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13446_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13445_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13444_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13443_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13442_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13441_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13440_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13439_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13438_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13437_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13385_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13384_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13383_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13382_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13381_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13380_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13379_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13378_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13377_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13376_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13375_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13374_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13373_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13372_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$procmux$13371_CMP0 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$eq$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:208$1529 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$eq$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:146$1521 ($eq).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$eq$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:111$1510 ($eq).
Removed top 31 bits (of 32) from port A of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$shl$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:0$1502 ($shl).
Removed top 5 bits (of 12) from mux cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S1.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBSRAM.v:69$1392 ($mux).
Removed top 19 bits (of 22) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$308 ($eq).
Removed top 20 bits (of 22) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$307 ($eq).
Removed top 20 bits (of 22) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$306 ($eq).
Removed top 21 bits (of 22) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$305 ($eq).
Removed top 17 bits (of 20) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:142$300 ($eq).
Removed top 18 bits (of 20) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:131$296 ($eq).
Removed top 18 bits (of 20) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:120$292 ($eq).
Removed top 19 bits (of 20) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:109$288 ($eq).
Removed top 1 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\AHB.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:55$3868 ($eq).
Removed top 1 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\AHB.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:54$3867 ($eq).
Removed top 1 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\AHB.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:53$3866 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\AHB.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:52$3865 ($eq).
Removed top 1 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\AHB.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:47$3863 ($eq).
Removed top 1 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\AHB.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:46$3862 ($eq).
Removed top 1 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\AHB.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:45$3861 ($eq).
Removed top 2 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\AHB.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_bus0.v:44$3860 ($eq).
Removed top 3 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\apbBus.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_bus0.v:154$4484 ($eq).
Removed top 2 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\apbBus.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_bus0.v:153$4485 ($eq).
Removed top 2 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\apbBus.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_bus0.v:152$4486 ($eq).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\apbBus.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_bus0.v:151$4487 ($eq).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\apbBus.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_bus0.v:150$4488 ($eq).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\apbBus.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_bus0.v:149$4489 ($eq).
Removed top 1 bits (of 4) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\apbBus.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_bus0.v:148$4490 ($eq).
Removed top 24 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\apbBus.$and$/openLANE_flow/designs/IBEX_SoC/src/APB_bus0.v:218$4611 ($and).
Removed top 15 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:107$3467 ($eq).
Removed top 11 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:120$3471 ($eq).
Removed top 16 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3479 ($eq).
Removed top 31 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$add$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:42$3414 ($add).
Removed top 31 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$add$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:53$3416 ($add).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$procmux$12580 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$procmux$12585 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$procmux$12590 ($mux).
Removed top 15 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:106$3904 ($eq).
Removed top 17 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:107$3905 ($eq).
Removed top 16 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:108$3906 ($eq).
Removed top 14 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$eq$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3907 ($eq).
Removed top 31 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$add$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:35$247 ($add).
Removed top 31 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$add$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:46$249 ($add).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$procmux$15108 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$procmux$15113 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$procmux$15118 ($mux).
Removed top 31 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$add$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:73$4820 ($add).
Removed top 24 bits (of 32) from port Y of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$add$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:73$4820 ($add).
Removed top 24 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.$ternary$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:122$3344 ($mux).
Removed top 22 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.$ternary$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:121$3345 ($mux).
Removed top 22 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.$ternary$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:120$3346 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.$procmux$12663 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.\sri[0].$procmux$15155 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12655 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12653 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12651 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12644 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12642 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12633 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12631 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12606 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12604 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$procmux$12601 ($mux).
Removed top 31 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$add$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:168$4831 ($add).
Removed top 27 bits (of 32) from port Y of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$add$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:168$4831 ($add).
Removed top 28 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$ge$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:97$4824 ($ge).
Removed top 1 bits (of 8) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$eq$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:74$4822 ($eq).
Removed top 2 bits (of 3) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:563$4266 ($sub).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5910 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5912 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5961 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$procmux$5966 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6100 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6075 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6053 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6030 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6006 ($mux).
Removed top 4 bits (of 18) from mux cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6000 ($pmux).
Removed top 17 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5998_CMP0 ($eq).
Removed top 16 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5997_CMP0 ($eq).
Removed top 15 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5996_CMP0 ($eq).
Removed top 14 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5995_CMP0 ($eq).
Removed top 12 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5993_CMP0 ($eq).
Removed top 11 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5992_CMP0 ($eq).
Removed top 10 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5991_CMP0 ($eq).
Removed top 8 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5989_CMP0 ($eq).
Removed top 7 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5988_CMP0 ($eq).
Removed top 6 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5987_CMP0 ($eq).
Removed top 4 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5985_CMP0 ($eq).
Removed top 3 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5984_CMP0 ($eq).
Removed top 2 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5983_CMP0 ($eq).
Removed top 1 bits (of 18) from mux cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5981 ($pmux).
Removed top 13 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5975_CMP0 ($eq).
Removed top 9 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5974_CMP0 ($eq).
Removed top 5 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5973_CMP0 ($eq).
Removed top 1 bits (of 18) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5972_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:155$4219 ($sub).
Removed top 18 bits (of 32) from port Y of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:155$4219 ($sub).
Removed top 15 bits (of 16) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:128$4212 ($sub).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procmux$5768 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procmux$5763 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procmux$5753 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$procmux$5750 ($mux).
Removed top 3 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$eq$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:754$4281 ($eq).
Removed top 4 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$eq$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:753$4279 ($eq).
Removed top 3 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$eq$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:753$4277 ($eq).
Removed top 3 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$eq$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:752$4275 ($eq).
Removed top 4 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$eq$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:752$4273 ($eq).
Removed top 5 bits (of 6) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.$eq$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:751$4271 ($eq).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$eq$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:157$3219 ($eq).
Removed top 1 bits (of 2) from mux cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$procmux$12741 ($mux).
Removed top 1 bits (of 2) from port B of cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$procmux$12765_CMP0 ($eq).
Removed top 8 bits (of 32) from FF cell IBEX_SoC.$auto$opt_dff.cc:764:run$16292 ($adffe).
Removed top 1 bits (of 3) from mux cell IBEX_SoC.$flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:109$3984 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7699 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7784 ($mux).
Removed cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7823 ($mux).
Removed top 29 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8197 ($mux).
Removed top 29 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8205 ($mux).
Removed top 8 bits (of 32) from mux cell IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHB_2_APB.v:157$3220 ($mux).
Removed top 8 bits (of 32) from FF cell IBEX_SoC.$auto$opt_dff.cc:764:run$16291 ($adffe).
Removed top 29 bits (of 32) from port Y of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$or$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5480 ($or).
Removed top 29 bits (of 32) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$or$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5480 ($or).
Removed top 29 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$or$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5480 ($or).
Removed top 29 bits (of 32) from port Y of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$shl$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5477 ($shl).
Removed top 29 bits (of 32) from port Y of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$and$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5479 ($and).
Removed top 29 bits (of 32) from port B of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$and$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5479 ($and).
Removed top 29 bits (of 32) from port Y of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$not$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5478 ($not).
Removed top 29 bits (of 32) from port A of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$not$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5478 ($not).
Removed top 29 bits (of 32) from port Y of cell IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$shl$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5476 ($shl).
Removed top 1 bits (of 5) from wire IBEX_SoC.$flatten\uut.\IBEX.$2\nstate[4:0].
Removed top 2 bits (of 5) from wire IBEX_SoC.$flatten\uut.\IBEX.$4\nstate[4:0].
Removed top 1 bits (of 3) from wire IBEX_SoC.$flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:109$3984_Y.
Removed top 23 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$1\dcsr_d[31:0].
Removed top 29 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$2$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:613$5355_DATA[31:0]$5417.
Removed top 23 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$2\dcsr_d[31:0].
Removed top 29 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$2\mhpmcounter_we[31:0].
Removed top 29 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$2\mhpmcounterh_we[31:0].
Removed top 29 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$and$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5479_Y.
Removed top 29 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$not$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5478_Y.
Removed top 29 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\cs_registers_i.$shl$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5477_Y.
Removed top 27 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:422$4781_Y.
Removed top 1 bits (of 34) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$3\op_remainder_d[33:0].
Removed top 1 bits (of 35) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4716_Y.
Removed top 1 bits (of 33) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:596$4677_Y.
Removed top 29 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:668$5694_Y.
Removed top 3 bits (of 4) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$14\mfip_id[3:0].
Removed top 2 bits (of 4) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$17\ctrl_fsm_ns[3:0].
Removed top 2 bits (of 4) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0].
Removed top 3 bits (of 6) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$6\exc_cause_o[5:0].
Removed top 4 bits (of 6) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$9\exc_cause_o[5:0].
Removed top 3 bits (of 6) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11295_Y.
Removed top 4 bits (of 6) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:775$4945_Y.
Removed top 2 bits (of 3) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$2\imm_b_mux_sel_o[2:0].
Removed top 1 bits (of 3) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$4\imm_b_mux_sel_o[2:0].
Removed top 2 bits (of 3) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$5\imm_b_mux_sel_o[2:0].
Removed top 11 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$11\instr_o[31:0].
Removed top 7 bits (of 32) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$9\instr_o[31:0].
Removed top 1 bits (of 3) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$2\ls_fsm_ns[2:0].
Removed top 1 bits (of 4) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$3\data_be[3:0].
Removed top 1 bits (of 3) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$3\ls_fsm_ns[2:0].
Removed top 1 bits (of 4) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$4\data_be[3:0].
Removed top 1 bits (of 3) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:256$3680_Y.
Removed top 1 bits (of 3) from wire IBEX_SoC.$flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:259$3681_Y.
Removed top 1 bits (of 2) from wire IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$3\next_state[1:0].
Removed top 1 bits (of 2) from wire IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\S0.$4\next_state[1:0].
Removed top 1 bits (of 2) from wire IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\AHB2APB_BR.$2\NextState[1:0].
Removed top 1 bits (of 18) from wire IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$5981_Y.
Removed top 4 bits (of 18) from wire IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6000_Y.
Removed top 18 bits (of 32) from wire IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:155$4219_Y.
Removed top 22 bits (of 32) from wire IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.$ternary$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:121$3345_Y.
Removed top 24 bits (of 32) from wire IBEX_SoC.$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.$ternary$/openLANE_flow/designs/IBEX_SoC/src/apb2spi.v:122$3344_Y.
Removed top 15 bits (of 22) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_ADDR[21:0]$3944.
Removed top 24 bits (of 32) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_DATA[31:0]$3945.
Removed top 24 bits (of 32) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN[31:0]$3946.
Removed top 15 bits (of 22) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_ADDR[21:0]$3947.
Removed top 16 bits (of 32) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_DATA[31:0]$3948.
Removed top 15 bits (of 22) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_ADDR[21:0]$3950.
Removed top 8 bits (of 32) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_DATA[31:0]$3951.
Removed top 8 bits (of 32) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN[31:0]$3952.
Removed top 15 bits (of 22) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$0$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_ADDR[21:0]$3953.
Removed top 15 bits (of 22) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_ADDR.
Removed top 24 bits (of 32) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_DATA.
Removed top 15 bits (of 22) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_ADDR.
Removed top 8 bits (of 32) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_DATA.
Removed top 24 bits (of 32) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6645_Y.
Removed top 15 bits (of 22) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6649_Y.
Removed top 16 bits (of 32) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6657_Y.
Removed top 15 bits (of 22) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6661_Y.
Removed top 8 bits (of 32) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6669_Y.
Removed top 15 bits (of 22) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6673_Y.
Removed top 15 bits (of 22) from wire IBEX_SoC.$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6685_Y.

54.11. Executing PEEPOPT pass (run peephole optimizers).

54.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 1 unused cells and 144 unused wires.
<suppressed ~2 debug messages>

54.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module IBEX_SoC:
  creating $macc model for $flatten\uut.\IBEX.\core.\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:31$4651 ($add).
  creating $macc model for $flatten\uut.\IBEX.\core.\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:31$4651 ($add).
  creating $macc model for $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:364$4766 ($add).
  creating $macc model for $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:422$4781 ($sub).
  creating $macc model for $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4717 ($add).
  creating $macc model for $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4716 ($mul).
  creating $macc model for $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:614$4690 ($sub).
  creating $macc model for $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:145$4443 ($add).
  creating $macc model for $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:88$4361 ($add).
  creating $macc model for $flatten\uut.\ahb_sys_0_uut.\S0.$add$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:237$1537 ($add).
  creating $macc model for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:563$4266 ($sub).
  creating $macc model for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:128$4212 ($sub).
  creating $macc model for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:155$4219 ($sub).
  creating $macc model for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$add$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:168$4831 ($add).
  creating $macc model for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$add$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:73$4820 ($add).
  creating $macc model for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$add$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:35$247 ($add).
  creating $macc model for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$add$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:46$249 ($add).
  creating $macc model for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$add$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:42$3414 ($add).
  creating $macc model for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$add$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:53$3416 ($add).
  merging $macc model for $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4716 into $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4717.
  creating $alu model for $macc $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$add$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:42$3414.
  creating $alu model for $macc $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$add$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:46$249.
  creating $alu model for $macc $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$add$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:35$247.
  creating $alu model for $macc $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$add$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:73$4820.
  creating $alu model for $macc $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$add$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:168$4831.
  creating $alu model for $macc $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:155$4219.
  creating $alu model for $macc $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:128$4212.
  creating $alu model for $macc $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:563$4266.
  creating $alu model for $macc $flatten\uut.\ahb_sys_0_uut.\S0.$add$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:237$1537.
  creating $alu model for $macc $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:88$4361.
  creating $alu model for $macc $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:145$4443.
  creating $alu model for $macc $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:614$4690.
  creating $alu model for $macc $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$add$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:53$3416.
  creating $alu model for $macc $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:422$4781.
  creating $alu model for $macc $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:364$4766.
  creating $alu model for $macc $flatten\uut.\IBEX.\core.\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:31$4651.
  creating $alu model for $macc $flatten\uut.\IBEX.\core.\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:31$4651.
  creating $macc cell for $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4717: $auto$alumacc.cc:365:replace_macc$16846
  creating $alu model for $flatten\uut.\IBEX.\core.\cs_registers_i.$gt$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:536$5374 ($gt): new $alu
  creating $alu model for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$ge$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:97$4824 ($ge): new $alu
  creating $alu cell for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$ge$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:97$4824: $auto$alumacc.cc:485:replace_alu$16849
  creating $alu cell for $flatten\uut.\IBEX.\core.\cs_registers_i.$gt$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:536$5374: $auto$alumacc.cc:485:replace_alu$16858
  creating $alu cell for $flatten\uut.\IBEX.\core.\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:31$4651: $auto$alumacc.cc:485:replace_alu$16869
  creating $alu cell for $flatten\uut.\IBEX.\core.\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_counter.v:31$4651: $auto$alumacc.cc:485:replace_alu$16872
  creating $alu cell for $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:364$4766: $auto$alumacc.cc:485:replace_alu$16875
  creating $alu cell for $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:422$4781: $auto$alumacc.cc:485:replace_alu$16878
  creating $alu cell for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$add$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:53$3416: $auto$alumacc.cc:485:replace_alu$16881
  creating $alu cell for $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:614$4690: $auto$alumacc.cc:485:replace_alu$16884
  creating $alu cell for $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:145$4443: $auto$alumacc.cc:485:replace_alu$16887
  creating $alu cell for $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:88$4361: $auto$alumacc.cc:485:replace_alu$16890
  creating $alu cell for $flatten\uut.\ahb_sys_0_uut.\S0.$add$/openLANE_flow/designs/IBEX_SoC/src/qspi_xip_cache_ahb.v:237$1537: $auto$alumacc.cc:485:replace_alu$16893
  creating $alu cell for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:563$4266: $auto$alumacc.cc:485:replace_alu$16896
  creating $alu cell for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:128$4212: $auto$alumacc.cc:485:replace_alu$16899
  creating $alu cell for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$sub$/openLANE_flow/designs/IBEX_SoC/src/i2c.v:155$4219: $auto$alumacc.cc:485:replace_alu$16902
  creating $alu cell for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$add$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:168$4831: $auto$alumacc.cc:485:replace_alu$16905
  creating $alu cell for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S1.\SPI_CTRL.$add$/openLANE_flow/designs/IBEX_SoC/src/spi_master.v:73$4820: $auto$alumacc.cc:485:replace_alu$16908
  creating $alu cell for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$add$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:35$247: $auto$alumacc.cc:485:replace_alu$16911
  creating $alu cell for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S2.$add$/openLANE_flow/designs/IBEX_SoC/src/PWM.v:46$249: $auto$alumacc.cc:485:replace_alu$16914
  creating $alu cell for $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S3.$add$/openLANE_flow/designs/IBEX_SoC/src/TIMER32.v:42$3414: $auto$alumacc.cc:485:replace_alu$16917
  created 19 $alu and 1 $macc cells.

54.14. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module IBEX_SoC that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$shl$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:597$4679 ($shl):
    Found 2 activation_patterns using ctrl signal { \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [6] \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [1] \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.is_greater_equal $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:627$4692_Y \uut.IBEX.core.ex_block_i.alu_i.multdiv_sel_i \uut.IBEX.core.ex_block_i.div_sel_i }.
    No candidates found.
  Analyzing resource sharing options for $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4716 ($mul):
    Found cell that is never activated: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4716
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$sshr$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:454$4794 ($sshr):
    Found 1 activation_patterns using ctrl signal { $flatten\uut.\IBEX.\core.\id_stage_i.$procmux$6579_CMP \uut.IBEX.core.id_stage_i.rf_we_id_o \uut.IBEX.core.ex_block_i.alu_i.multdiv_sel_i $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$procmux$12687_CTRL }.
    No candidates found.
Removing 1 cells in module IBEX_SoC:
  Removing cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:517$4716 ($mul).

54.15. Executing OPT pass (performing simple optimizations).

54.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~3 debug messages>

54.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~27 debug messages>
Removed a total of 9 cells.

54.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~324 debug messages>

54.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8481: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8525: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8569: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8611: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8656: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $auto$opt_reduce.cc:134:opt_mux$15618 $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8697: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8319_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8745: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8835: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8968: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7667_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9014: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $auto$opt_reduce.cc:134:opt_mux$16778 $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9060: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9105: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8373_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9197: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8354_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8336_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8303_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8508_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8507_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8506_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8505_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8504_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8503_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8502_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8501_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8500_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8499_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8498_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8497_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8496_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8495_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8494_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8493_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7647_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8248_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8236_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8225_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8215_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12103: { $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12113_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12111_CMP $auto$opt_reduce.cc:134:opt_mux$16921 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12033_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11838_CMP $auto$opt_reduce.cc:134:opt_mux$15610 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12175: { $auto$opt_reduce.cc:134:opt_mux$16923 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7010: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:325$3704_Y $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6839_CMP $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6771_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7017: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6771_CMP $auto$opt_reduce.cc:134:opt_mux$16925 }
  Optimizing cells in module \IBEX_SoC.
Performed a total of 17 changes.

54.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

54.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15295 ($dff) from module IBEX_SoC (D = $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6677_Y [31], Q = $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:18$3942_EN [31], rval = 1'0).
Setting constant 1-bit at position 0 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 1 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 2 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 3 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 4 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 5 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 6 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 7 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 8 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 9 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 10 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 11 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 12 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 13 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 14 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 15 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 16 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 17 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 18 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 19 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 20 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 21 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 22 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 23 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15294 ($dff) from module IBEX_SoC.
Adding SRST signal on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15292 ($dff) from module IBEX_SoC (D = $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6665_Y [23], Q = $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:17$3941_EN [23], rval = 1'0).
Setting constant 1-bit at position 0 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 1 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 2 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 3 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 4 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 5 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 6 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 7 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 8 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 9 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 10 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 11 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 12 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 13 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 14 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 15 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15291 ($dff) from module IBEX_SoC.
Adding SRST signal on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15289 ($dff) from module IBEX_SoC (D = $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6653_Y [15], Q = $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:16$3940_EN [15], rval = 1'0).
Setting constant 1-bit at position 0 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15288 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 1 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15288 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 2 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15288 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 3 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15288 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 4 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15288 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 5 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15288 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 6 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15288 ($dff) from module IBEX_SoC.
Setting constant 1-bit at position 7 on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15288 ($dff) from module IBEX_SoC.
Adding SRST signal on $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procdff$15286 ($dff) from module IBEX_SoC (D = $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$procmux$6641_Y [7], Q = $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:15$3939_EN [7], rval = 1'0).
Adding EN signal on $auto$opt_dff.cc:764:run$16740 ($adffe) from module IBEX_SoC (D = \uut.IBEX.core.cs_registers_i.debug_cause_i, Q = \uut.IBEX.core.cs_registers_i.u_dcsr_csr.rdata_q [8:6]).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$16599 ($adffe) from module IBEX_SoC.

54.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 7 unused cells and 24 unused wires.
<suppressed ~8 debug messages>

54.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~6 debug messages>

54.15.9. Rerunning OPT passes. (Maybe there is more to do..)

54.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~326 debug messages>

54.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7017: $auto$opt_reduce.cc:134:opt_mux$16934
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$16933: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6771_CMP $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6708_CMP $flatten\uut.\IBEX.\core.\load_store_unit_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:325$3704_Y }
  Optimizing cells in module \IBEX_SoC.
Performed a total of 2 changes.

54.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

54.15.13. Executing OPT_DFF pass (perform DFF optimizations).

54.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 1 unused cells and 10 unused wires.
<suppressed ~2 debug messages>

54.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

54.15.16. Rerunning OPT passes. (Maybe there is more to do..)

54.15.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~326 debug messages>

54.15.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7068: $auto$opt_reduce.cc:134:opt_mux$16936
  Optimizing cells in module \IBEX_SoC.
Performed a total of 1 changes.

54.15.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

54.15.20. Executing OPT_DFF pass (perform DFF optimizations).

54.15.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

54.15.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

54.15.23. Rerunning OPT passes. (Maybe there is more to do..)

54.15.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~326 debug messages>

54.15.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.15.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.15.27. Executing OPT_DFF pass (perform DFF optimizations).

54.15.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..

54.15.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

54.15.30. Finished OPT passes. (There is nothing left to do.)

54.16. Executing MEMORY pass.

54.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

54.16.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3958' in module `\IBEX_SoC': merged $dff to cell.
Checking cell `$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3959' in module `\IBEX_SoC': merged $dff to cell.
Checking cell `$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3960' in module `\IBEX_SoC': merged $dff to cell.
Checking cell `$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3961' in module `\IBEX_SoC': merged $dff to cell.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:580$5397' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:581$5398' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:582$5399' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:583$5400' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:584$5401' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:585$5402' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:586$5403' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:587$5404' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:588$5405' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:589$5406' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:590$5407' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:591$5408' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:592$5409' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:593$5410' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:594$5411' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:595$5412' in module `\IBEX_SoC': no (compatible) $dff found.
Checking cell `$flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memrd$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:14$3957' in module `\IBEX_SoC': merged data $dff to cell.

54.16.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 10 unused cells and 11 unused wires.
<suppressed ~11 debug messages>

54.16.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).
Consolidating write ports of memory IBEX_SoC.uut.openstriVe_soc_mem_Sys0_S1.mem by address:
  New clock domain: posedge \HCLK
    Port 0 ($flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3958) has addr \uut.openstriVe_soc_mem_Sys0_S1.addr [6:0].
      Active bits: 00000000000000000000000011111111
    Port 1 ($flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3959) has addr \uut.openstriVe_soc_mem_Sys0_S1.addr [6:0].
      Active bits: 00000000000000001111111100000000
      Merging port 0 into this one.
      Active bits: 00000000000000001111111111111111
    Port 2 ($flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3960) has addr \uut.openstriVe_soc_mem_Sys0_S1.addr [6:0].
      Active bits: 00000000111111110000000000000000
      Merging port 1 into this one.
      Active bits: 00000000111111111111111111111111
    Port 3 ($flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3961) has addr \uut.openstriVe_soc_mem_Sys0_S1.addr [6:0].
      Active bits: 11111111000000000000000000000000
      Merging port 2 into this one.
      Active bits: 11111111111111111111111111111111

54.16.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..

54.16.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\uut.IBEX.core.cs_registers_i.pmp_addr_rdata' in module `\IBEX_SoC':
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5533 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5534 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5535 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5536 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5537 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5538 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5539 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5540 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5541 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5542 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5543 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5544 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5545 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5546 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5547 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:0$5548 ($meminit)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:580$5397 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:581$5398 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:582$5399 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:583$5400 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:584$5401 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:585$5402 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:586$5403 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:587$5404 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:588$5405 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:589$5406 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:590$5407 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:591$5408 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:592$5409 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:593$5410 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:594$5411 ($memrd)
  $flatten\uut.\IBEX.\core.\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:595$5412 ($memrd)
Collecting $memrd, $memwr and $meminit for memory `\uut.openstriVe_soc_mem_Sys0_S1.mem' in module `\IBEX_SoC':
  $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memwr$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:0$3961 ($memwr)
  $flatten\uut.\openstriVe_soc_mem_Sys0_S1.$memrd$\mem$/openLANE_flow/designs/IBEX_SoC/src/openstriVe_soc_mem.v:14$3957 ($memrd)

54.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..

54.18. Executing OPT pass (performing simple optimizations).

54.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~467 debug messages>

54.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~102 debug messages>
Removed a total of 34 cells.

54.18.3. Executing OPT_DFF pass (perform DFF optimizations).

54.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 26 unused cells and 217 unused wires.
<suppressed ~37 debug messages>

54.18.5. Finished fast OPT passes.

54.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \uut.IBEX.core.cs_registers_i.pmp_addr_rdata in module \IBEX_SoC:
  created 16 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 240 $mux cells.
  write interface: 0 write mux blocks.
Mapping memory cell \uut.openstriVe_soc_mem_Sys0_S1.mem in module \IBEX_SoC:
  created 128 $dff cells and 0 static cells of width 32.
  read interface: 1 $dff and 127 $mux cells.
  write interface: 512 write mux blocks.

54.20. Executing OPT pass (performing simple optimizations).

54.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~254 debug messages>

54.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~717 debug messages>

54.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.$procmux$6599:
      Old ports: A=5'10000, B=5'00001, Y=$flatten\uut.\IBEX.$5\nstate[4:0]
      New ports: A=2'10, B=2'01, Y={ $flatten\uut.\IBEX.$5\nstate[4:0] [4] $flatten\uut.\IBEX.$5\nstate[4:0] [0] }
      New connections: $flatten\uut.\IBEX.$5\nstate[4:0] [3:1] = 3'000
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.$procmux$6607:
      Old ports: A=3'100, B=3'001, Y=$auto$wreduce.cc:454:run$16785 [2:0]
      New ports: A=2'10, B=2'01, Y={ $auto$wreduce.cc:454:run$16785 [2] $auto$wreduce.cc:454:run$16785 [0] }
      New connections: $auto$wreduce.cc:454:run$16785 [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.$procmux$6630:
      Old ports: A={ 2'00 $flatten\uut.\IBEX.$3\nstate[4:0] [1:0] }, B=4'1000, Y=$auto$wreduce.cc:454:run$16784 [3:0]
      New ports: A={ 1'0 $flatten\uut.\IBEX.$3\nstate[4:0] [1:0] }, B=3'100, Y={ $auto$wreduce.cc:454:run$16784 [3] $auto$wreduce.cc:454:run$16784 [1:0] }
      New connections: $auto$wreduce.cc:454:run$16784 [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:107$3980:
      Old ports: A=2'00, B=2'10, Y=$flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:107$3980_Y
      New ports: A=1'0, B=1'1, Y=$flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:107$3980_Y [1]
      New connections: $flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:107$3980_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7535:
      Old ports: A={ \uut.IBEX.core.if_stage_i.pc_id_o [31:1] 1'0 }, B={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q 1'0 }, Y=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\exception_pc[31:0]
      New ports: A=\uut.IBEX.core.if_stage_i.pc_id_o [31:1], B=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q, Y=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\exception_pc[31:0] [31:1]
      New connections: $flatten\uut.\IBEX.\core.\cs_registers_i.$2\exception_pc[31:0] [0] = 1'0
    Consolidated identical input bits for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9156:
      Old ports: A=3'001, B=6'100000, Y=$auto$wreduce.cc:454:run$16788 [2:0]
      New ports: A=2'01, B=4'1000, Y={ $auto$wreduce.cc:454:run$16788 [2] $auto$wreduce.cc:454:run$16788 [0] }
      New connections: $auto$wreduce.cc:454:run$16788 [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_cs_registers.v:667$5437:
      Old ports: A={ \uut.IBEX.core.cs_registers_i.csr_wdata_int [31:8] 8'00000001 }, B=1, Y=\uut.IBEX.core.cs_registers_i.u_mtvec_csr.wr_data_i
      New ports: A=\uut.IBEX.core.cs_registers_i.csr_wdata_int [31:8], B=24'000000000000000000000000, Y=\uut.IBEX.core.cs_registers_i.u_mtvec_csr.wr_data_i [31:8]
      New connections: \uut.IBEX.core.cs_registers_i.u_mtvec_csr.wr_data_i [7:0] = 8'00000001
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13192:
      Old ports: A={ 2'00 \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.op_a_i }, B=34'1111111111111111111111111111111111, Y=$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0]
      New ports: A={ 1'0 \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.op_a_i }, B=33'111111111111111111111111111111111, Y=$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0] [32:0]
      New connections: $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0] [33] = $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0] [32]
    Consolidated identical input bits for $pmux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13207:
      Old ports: A={ $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:621$4691_Y 1'1 }, B={ $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:646$4701_Y 1'1 $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:661$4707_Y 1'1 $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:679$4713_Y 1'1 }, Y=\uut.IBEX.core.ex_block_i.alu_i.multdiv_operand_b_i
      New ports: A=$flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:621$4691_Y, B={ $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:646$4701_Y $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:661$4707_Y $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:679$4713_Y }, Y=\uut.IBEX.core.ex_block_i.alu_i.multdiv_operand_b_i [32:1]
      New connections: \uut.IBEX.core.ex_block_i.alu_i.multdiv_operand_b_i [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13217:
      Old ports: A=33'000000000000000000000000000000001, B={ \uut.IBEX.core.id_stage_i.imd_val_q [65:34] 1'1 }, Y=\uut.IBEX.core.ex_block_i.alu_i.multdiv_operand_a_i
      New ports: A=0, B=\uut.IBEX.core.id_stage_i.imd_val_q [65:34], Y=\uut.IBEX.core.ex_block_i.alu_i.multdiv_operand_a_i [32:1]
      New connections: \uut.IBEX.core.ex_block_i.alu_i.multdiv_operand_a_i [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_multdiv_fast.v:596$4678:
      Old ports: A={ 1'0 \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.op_quotient_q }, B={ 1'0 $auto$wreduce.cc:454:run$16798 [31:0] }, Y=\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.next_quotient
      New ports: A=\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.op_quotient_q, B=$auto$wreduce.cc:454:run$16798 [31:0], Y=\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.next_quotient [31:0]
      New connections: \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.next_quotient [32] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_id_stage.v:668$5694:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$16799 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$16799 [2:1]
      New connections: $auto$wreduce.cc:454:run$16799 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10964:
      Old ports: A=4'0101, B=4'0010, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$16\ctrl_fsm_ns[3:0]
      New ports: A=2'01, B=2'10, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$16\ctrl_fsm_ns[3:0] [1:0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$16\ctrl_fsm_ns[3:0] [3:2] = { 1'0 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$16\ctrl_fsm_ns[3:0] [0] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11027:
      Old ports: A=3'000, B=3'100, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$4\pc_mux_o[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$4\pc_mux_o[2:0] [2]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$4\pc_mux_o[2:0] [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11159:
      Old ports: A=4'0101, B=4'1001, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0]
      New ports: A=2'01, B=2'10, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0] [3:2]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0] [1:0] = 2'01
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11259:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:454:run$16804 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$16804 [0]
      New connections: $auto$wreduce.cc:454:run$16804 [1] = $auto$wreduce.cc:454:run$16804 [0]
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11295:
      Old ports: A=3'000, B=3'101, Y=$auto$wreduce.cc:454:run$16805 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$16805 [0]
      New connections: $auto$wreduce.cc:454:run$16805 [2:1] = { $auto$wreduce.cc:454:run$16805 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297:
      Old ports: A={ 3'000 $auto$wreduce.cc:454:run$16805 [2:0] }, B=6'000111, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y
      New ports: A=$auto$wreduce.cc:454:run$16805 [2:0], B=3'111, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2:0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [5:3] = 3'000
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11567:
      Old ports: A=3'001, B=3'100, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$2\debug_cause_o[2:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$2\debug_cause_o[2:0] [2] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$2\debug_cause_o[2:0] [0] }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$2\debug_cause_o[2:0] [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12041:
      Old ports: A=4'0101, B=4'1000, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [3] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [0] }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [2:1] = { $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [0] 1'0 }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12115: { \uut.IBEX.core.id_stage_i.controller_run $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11543_CMP $auto$opt_reduce.cc:134:opt_mux$15614 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12225: { $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11543_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11508_CMP $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12243: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11543_CMP
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12247: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10943_CMP
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:757$4940:
      Old ports: A=2'00, B=2'11, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:757$4940_Y
      New ports: A=1'0, B=1'1, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:757$4940_Y [0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:757$4940_Y [1] = $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:757$4940_Y [0]
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_controller.v:775$4945:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:454:run$16806 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$16806 [0]
      New connections: $auto$wreduce.cc:454:run$16806 [1] = $auto$wreduce.cc:454:run$16806 [0]
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9445:
      Old ports: A=2'00, B=2'11, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0]
      New ports: A=1'0, B=1'1, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [1] = $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [0]
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9520:
      Old ports: A=6'100110, B=6'000000, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$13\alu_operator_o[5:0]
      New ports: A=1'1, B=1'0, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [1]
      New connections: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [5:2] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [0] } = { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [1] 2'00 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9528:
      Old ports: A=3'000, B=3'101, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0] [0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0] [2:1] = { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0] [0] 1'0 }
    Consolidated identical input bits for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9536:
      Old ports: A=6'100110, B=54'000001100101000010000011000100001010001001001000000000, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$12\alu_operator_o[5:0]
      New ports: A=5'10110, B=45'000011010100010000110010001010010010100000000, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [5] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [3:0] }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9620:
      Old ports: A=6'100110, B=6'001000, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$10\alu_operator_o[5:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [3] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] }
      New connections: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [5:4] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [2] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [0] } = { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] 1'0 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9722:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:454:run$16808 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$16808 [1]
      New connections: $auto$wreduce.cc:454:run$16808 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9798:
      Old ports: A=3'101, B=3'000, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0]
      New ports: A=1'1, B=1'0, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0] [0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0] [2:1] = { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0] [0] 1'0 }
    Consolidated identical input bits for $pmux cell $flatten\uut.\IBEX.\core.\if_stage_i.$procmux$15183:
      Old ports: A={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] 8'00000000 }, B={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] 1'0 \uut.IBEX.core.cs_registers_i.csr_mcause_i [4:0] 66'000001101000010001000010000000000000011010000100010000100000001000 }, Y=\uut.IBEX.core.if_stage_i.exc_pc
      New ports: A={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] 5'00000 }, B={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] \uut.IBEX.core.cs_registers_i.csr_mcause_i [4:0] 58'0001101000010001000010000000000011010000100010000100000010 }, Y={ \uut.IBEX.core.if_stage_i.exc_pc [31:8] \uut.IBEX.core.if_stage_i.exc_pc [6:2] }
      New connections: { \uut.IBEX.core.if_stage_i.exc_pc [7] \uut.IBEX.core.if_stage_i.exc_pc [1:0] } = 3'000
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12775:
      Old ports: A={ 1'0 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 15'000000011100111 }, B=21'100000000000001110011, Y=$auto$wreduce.cc:454:run$16810 [20:0]
      New ports: A={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 2'01 }, B=7'0000010, Y={ $auto$wreduce.cc:454:run$16810 [19:15] $auto$wreduce.cc:454:run$16810 [4] $auto$wreduce.cc:454:run$16810 [2] }
      New connections: { $auto$wreduce.cc:454:run$16810 [20] $auto$wreduce.cc:454:run$16810 [14:5] $auto$wreduce.cc:454:run$16810 [3] $auto$wreduce.cc:454:run$16810 [1:0] } = { $auto$wreduce.cc:454:run$16810 [4] 7'0000000 $auto$wreduce.cc:454:run$16810 [2] 5'11011 }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12791:
      Old ports: A={ 11'00000000000 $auto$wreduce.cc:454:run$16810 [20:0] }, B={ 7'0000000 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 3'000 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0110011 }, Y=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0]
      New ports: A={ 4'0000 $auto$wreduce.cc:454:run$16810 [20:0] }, B={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 3'000 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0110011 }, Y=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [24:0]
      New connections: $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [31:25] = 7'0000000
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12821:
      Old ports: A={ 5'00000 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 15'000000001100111 }, B={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] 8'00000000 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0110011 }, Y=$auto$wreduce.cc:454:run$16811 [24:0]
      New ports: A={ 5'00000 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0000001 }, B={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] 5'00000 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 2'10 }, Y={ $auto$wreduce.cc:454:run$16811 [24:15] $auto$wreduce.cc:454:run$16811 [11:7] $auto$wreduce.cc:454:run$16811 [4] $auto$wreduce.cc:454:run$16811 [2] }
      New connections: { $auto$wreduce.cc:454:run$16811 [14:12] $auto$wreduce.cc:454:run$16811 [6:5] $auto$wreduce.cc:454:run$16811 [3] $auto$wreduce.cc:454:run$16811 [1:0] } = { 3'000 $auto$wreduce.cc:454:run$16811 [2] 4'1011 }
    Consolidated identical input bits for $pmux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12906:
      Old ports: A={ 9'010000001 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 5'00001 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0110011 }, B={ 9'000000001 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 5'10001 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 16'0110011000000001 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 5'11001 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 16'0110011000000001 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 5'11101 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0110011 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i }, Y=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0]
      New ports: A={ 9'010000001 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 12'000010110011 }, B={ 9'000000001 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 21'100010110011000000001 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 21'110010110011000000001 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 12'111010110011 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [31:10] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:0] }, Y={ $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [31:10] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [6:0] }
      New connections: $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [9:7] = \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7]
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12985:
      Old ports: A={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0110111 }, B={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [4:3] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [5] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [2] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6] 24'000000010000000100010011 }, Y=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [28:0]
      New ports: A={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 1'1 }, B={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [4:3] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [5] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [2] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6] 12'010000000100 }, Y={ $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [28:24] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17:7] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [2] }
      New connections: { $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [23:18] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [6:3] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [1:0] } = { $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] 1'0 $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [2] 4'1011 }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:145$4440:
      Old ports: A={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:2] 2'00 }, B={ \uut.IBEX.core.if_stage_i.fetch_addr_n [31:1] 1'0 }, Y={ $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:145$4440_Y [31:2] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d [1:0] }
      New ports: A={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:2] 1'0 }, B=\uut.IBEX.core.if_stage_i.fetch_addr_n [31:1], Y={ $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:145$4440_Y [31:2] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d [1] }
      New connections: \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_fetch_fifo.v:64$4331:
      Old ports: A={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15:0] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata [31:16] }, B={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [47:32] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata [31:16] }, Y=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_unaligned
      New ports: A=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15:0], B=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [47:32], Y=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_unaligned [31:16]
      New connections: \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_unaligned [15:0] = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata [31:16]
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7081:
      Old ports: A={ 24'000000000000000000000000 \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31:24] }, B={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31:24] }, Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0]
      New ports: A=1'0, B=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31], Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8]
      New connections: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [31:9] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [7:0] } = { $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31:24] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7087:
      Old ports: A={ 24'000000000000000000000000 \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23:16] }, B={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23:16] }, Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0]
      New ports: A=1'0, B=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23], Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8]
      New connections: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [31:9] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [7:0] } = { $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23:16] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7094:
      Old ports: A={ 24'000000000000000000000000 \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15:8] }, B={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15:8] }, Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0]
      New ports: A=1'0, B=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15], Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8]
      New connections: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [31:9] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [7:0] } = { $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15:8] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7102:
      Old ports: A={ 24'000000000000000000000000 \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7:0] }, B={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7:0] }, Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0]
      New ports: A=1'0, B=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7], Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8]
      New connections: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [31:9] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [7:0] } = { $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7:0] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7112:
      Old ports: A={ 16'0000000000000000 \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7:0] \uut.IBEX.core.load_store_unit_i.rdata_q [23:16] }, B={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7:0] \uut.IBEX.core.load_store_unit_i.rdata_q [23:16] }, Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0]
      New ports: A=1'0, B=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7], Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16]
      New connections: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [31:17] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [15:0] } = { $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7:0] \uut.IBEX.core.load_store_unit_i.rdata_q [23:16] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7118:
      Old ports: A={ 16'0000000000000000 \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31:16] }, B={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31:16] }, Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0]
      New ports: A=1'0, B=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31], Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16]
      New connections: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [31:17] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [15:0] } = { $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31:16] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7125:
      Old ports: A={ 16'0000000000000000 \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23:8] }, B={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23:8] }, Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0]
      New ports: A=1'0, B=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23], Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16]
      New connections: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [31:17] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [15:0] } = { $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23:8] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7133:
      Old ports: A={ 16'0000000000000000 \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15:0] }, B={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15:0] }, Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0]
      New ports: A=1'0, B=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15], Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16]
      New connections: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [31:17] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [15:0] } = { $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15:0] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:256$3680:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:454:run$16816 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$16816 [1]
      New connections: $auto$wreduce.cc:454:run$16816 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:259$3681:
      Old ports: A=2'11, B=2'01, Y=$auto$wreduce.cc:454:run$16817 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$16817 [1]
      New connections: $auto$wreduce.cc:454:run$16817 [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:278$3686:
      Old ports: A=2'11, B=2'00, Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:278$3686_Y [1:0]
      New ports: A=1'1, B=1'0, Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:278$3686_Y [0]
      New connections: $flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:278$3686_Y [1] = $flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:278$3686_Y [0]
    Consolidated identical input bits for $pmux cell $flatten\uut.\ahb_sys_0_uut.\S0.\init_unit.$procmux$13330:
      Old ports: A=10'1011011111, B=100'0011011111011101111001110111110111110000011111101001111101010100000000010000101001000001011011011110, Y={ \uut.ahb_sys_0_uut.S0.fcen_init \uut.ahb_sys_0_uut.S0.clken_init \uut.ahb_sys_0_uut.S0.fdoe_init \uut.ahb_sys_0_uut.S0.fdo_init }
      New ports: A=7'1001111, B=70'0001111010111001011110111000011101001111010100000010001001001011001110, Y={ \uut.ahb_sys_0_uut.S0.fcen_init \uut.ahb_sys_0_uut.S0.clken_init \uut.ahb_sys_0_uut.S0.fdoe_init [1:0] \uut.ahb_sys_0_uut.S0.fdo_init [2:0] }
      New connections: { \uut.ahb_sys_0_uut.S0.fdoe_init [3:2] \uut.ahb_sys_0_uut.S0.fdo_init [3] } = { \uut.ahb_sys_0_uut.S0.fdoe_init [0] \uut.ahb_sys_0_uut.S0.fdoe_init [0] \uut.ahb_sys_0_uut.S0.fdo_init [1] }
    Consolidated identical input bits for $pmux cell $flatten\uut.\ahb_sys_0_uut.\S0.\run_unit.$procmux$13298:
      Old ports: A=10'1011011111, B={ 16'0011011111011111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:20] 6'011111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [19:16] 6'011111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [15:12] 6'011111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [11:8] 6'011111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [7:4] 6'011111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [3] 63'000011111101001111101010100000000010000101001000001011011011110 }, Y={ \uut.ahb_sys_0_uut.S0.fcen_run \uut.ahb_sys_0_uut.S0.clken_run \uut.ahb_sys_0_uut.S0.fdoe_run \uut.ahb_sys_0_uut.S0.fdo_run }
      New ports: A=8'10011111, B={ 12'000111110111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [23:20] 4'0111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [19:16] 4'0111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [15:12] 4'0111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [11:8] 4'0111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [7:4] 4'0111 \uut.ahb_sys_0_uut.S0.APhase_HADDR [3] 51'000011110100111010101000000010010100100010110011110 }, Y={ \uut.ahb_sys_0_uut.S0.fcen_run \uut.ahb_sys_0_uut.S0.clken_run \uut.ahb_sys_0_uut.S0.fdoe_run [1:0] \uut.ahb_sys_0_uut.S0.fdo_run }
      New connections: \uut.ahb_sys_0_uut.S0.fdoe_run [3:2] = { \uut.ahb_sys_0_uut.S0.fdoe_run [0] \uut.ahb_sys_0_uut.S0.fdoe_run [0] }
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309:
      Old ports: A=32'11011110101011011011111011101111, B={ 16'0000000000000000 \uut.ahb_sys_0_uut.S_2.WGPIODIR }, Y=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y
      New ports: A=17'11011111011101111, B={ 1'0 \uut.ahb_sys_0_uut.S_2.WGPIODIR }, Y=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16:0]
      New connections: $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [31:17] = { $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_db_reg.v:97$4322:
      Old ports: A=32'11011110101011011011111011101111, B={ 28'0000000000000000000000000000 \uut.ahb_sys_0_uut.S_3.db_reg }, Y=\uut.ahb_sys_0_uut.AHB.HRDATA_S3
      New ports: A=5'11111, B={ 1'0 \uut.ahb_sys_0_uut.S_3.db_reg }, Y={ \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [3:0] }
      New connections: { \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [31:6] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [4] } = { \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] 1'0 \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] 1'0 \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] 1'0 \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] 1'0 \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] 1'0 \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] 1'0 \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] 1'0 \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] \uut.ahb_sys_0_uut.AHB.HRDATA_S3 [5] 1'0 }
    Consolidated identical input bits for $pmux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6000:
      Old ports: A=14'00000000000000, B=56'00000000000001000000001000001000000000000000001000000000, Y=$auto$wreduce.cc:454:run$16822 [13:0]
      New ports: A=4'0000, B=16'0001001010000100, Y={ $auto$wreduce.cc:454:run$16822 [13] $auto$wreduce.cc:454:run$16822 [9] $auto$wreduce.cc:454:run$16822 [5] $auto$wreduce.cc:454:run$16822 [0] }
      New connections: { $auto$wreduce.cc:454:run$16822 [12:10] $auto$wreduce.cc:454:run$16822 [8:6] $auto$wreduce.cc:454:run$16822 [4:1] } = 10'0000000000
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procmux$6009:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$16821 [16:0] }, B=18'000000000000000000, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$0\c_state[17:0]
      New ports: A=$auto$wreduce.cc:454:run$16821 [16:0], B=17'00000000000000000, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$0\c_state[17:0] [16:0]
      New connections: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$0\c_state[17:0] [17] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908:
      Old ports: A=32'11011110101011011011111011101111, B={ 31'0000000000000000000000000000000 \uut.ahb_sys_0_uut.apb_sys_inst_0.S_2.TMREN }, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y
      New ports: A=2'11, B={ 1'0 \uut.ahb_sys_0_uut.apb_sys_inst_0.S_2.TMREN }, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1:0]
      New connections: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [31:2] = { $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_PWM32.v:109$3908_Y [1] }
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483:
      Old ports: A=32'11011110101011011011111011101111, B={ 31'0000000000000000000000000000000 \uut.ahb_sys_0_uut.apb_sys_inst_0.S_3.IRQEN }, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y
      New ports: A=2'11, B={ 1'0 \uut.ahb_sys_0_uut.apb_sys_inst_0.S_3.IRQEN }, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1:0]
      New connections: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [31:2] = { $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1] }
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:106$3981:
      Old ports: A=$flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:107$3980_Y, B=2'10, Y={ \uut.ahb_sys_0_uut.S0.HTRANS [1] \uut.HTRANS_Sys0 [0] }
      New ports: A=$flatten\uut.\IBEX.$ternary$/openLANE_flow/designs/IBEX_SoC/src/new_wrapper.v:107$3980_Y [1], B=1'1, Y=\uut.ahb_sys_0_uut.S0.HTRANS [1]
      New connections: \uut.HTRANS_Sys0 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7331:
      Old ports: A=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\exception_pc[31:0], B={ \uut.IBEX.core.cs_registers_i.csr_wdata_int [31:1] 1'0 }, Y=$flatten\uut.\IBEX.\core.\cs_registers_i.$3\mepc_d[31:0]
      New ports: A=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\exception_pc[31:0] [31:1], B=\uut.IBEX.core.cs_registers_i.csr_wdata_int [31:1], Y=$flatten\uut.\IBEX.\core.\cs_registers_i.$3\mepc_d[31:0] [31:1]
      New connections: $flatten\uut.\IBEX.\core.\cs_registers_i.$3\mepc_d[31:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7427:
      Old ports: A={ \uut.IBEX.core.cs_registers_i.csr_wdata_int [31:1] 1'0 }, B=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\exception_pc[31:0], Y=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_d[31:0]
      New ports: A=\uut.IBEX.core.cs_registers_i.csr_wdata_int [31:1], B=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\exception_pc[31:0] [31:1], Y=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_d[31:0] [31:1]
      New connections: $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_d[31:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\ex_block_i.\alu_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_alu.v:356$4763:
      Old ports: A={ \uut.IBEX.core.cs_registers_i.csr_wdata_i 1'1 }, B=\uut.IBEX.core.ex_block_i.alu_i.multdiv_operand_a_i, Y=\uut.IBEX.core.ex_block_i.alu_i.adder_in_a
      New ports: A=\uut.IBEX.core.cs_registers_i.csr_wdata_i, B=\uut.IBEX.core.ex_block_i.alu_i.multdiv_operand_a_i [32:1], Y=\uut.IBEX.core.ex_block_i.alu_i.adder_in_a [32:1]
      New connections: \uut.IBEX.core.ex_block_i.alu_i.adder_in_a [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$13156:
      Old ports: A={ 1'0 \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.next_remainder }, B=\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.next_quotient, Y=$auto$wreduce.cc:454:run$16796 [32:0]
      New ports: A=\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.next_remainder, B=\uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.next_quotient [31:0], Y=$auto$wreduce.cc:454:run$16796 [31:0]
      New connections: $auto$wreduce.cc:454:run$16796 [32] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11039:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$16\ctrl_fsm_ns[3:0], B=4'0101, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$15\ctrl_fsm_ns[3:0]
      New ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$16\ctrl_fsm_ns[3:0] [1:0], B=2'01, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$15\ctrl_fsm_ns[3:0] [1:0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$15\ctrl_fsm_ns[3:0] [3:2] = { 1'0 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$15\ctrl_fsm_ns[3:0] [0] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11099:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$4\pc_mux_o[2:0], B=3'011, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$3\pc_mux_o[2:0]
      New ports: A={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$4\pc_mux_o[2:0] [2] 1'0 }, B=2'01, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [2] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [0] }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [1] = $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297:
      Old ports: A=$auto$wreduce.cc:454:run$16805 [2:0], B=3'111, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$16805 [0] }, B=2'11, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [1:0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2] = $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [0]
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y, B={ 4'0000 $auto$wreduce.cc:454:run$16804 [1:0] }, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y
      New ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2:0], B={ 1'0 $auto$wreduce.cc:454:run$16804 [0] $auto$wreduce.cc:454:run$16804 [0] }, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [2:0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [5:3] = 3'000
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11316:
      Old ports: A=4'0101, B=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0], Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11316_Y
      New ports: A=2'01, B=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0] [3:2], Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11316_Y [3:2]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11316_Y [1:0] = 2'01
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12218:
      Old ports: A=3'001, B=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$2\debug_cause_o[2:0], Y=\uut.IBEX.core.cs_registers_i.debug_cause_i
      New ports: A=2'01, B={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$2\debug_cause_o[2:0] [2] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$2\debug_cause_o[2:0] [0] }, Y={ \uut.IBEX.core.cs_registers_i.debug_cause_i [2] \uut.IBEX.core.cs_registers_i.debug_cause_i [0] }
      New connections: \uut.IBEX.core.cs_registers_i.debug_cause_i [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9459:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0], B=2'00, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0]
      New ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [0], B=1'0, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0] [0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0] [1] = $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0] [0]
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9611:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$12\alu_operator_o[5:0], B=6'100110, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$11\alu_operator_o[5:0]
      New ports: A={ $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [5] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [3:0] }, B=5'10110, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$11\alu_operator_o[5:0] [5] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$11\alu_operator_o[5:0] [3:0] }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$11\alu_operator_o[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9634:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$10\alu_operator_o[5:0], B=6'001001, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0]
      New ports: A={ $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [3] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] 1'0 }, B=3'101, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [3] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1:0] }
      New connections: { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [5:4] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [2] } = { $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] 1'0 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12791:
      Old ports: A={ 4'0000 $auto$wreduce.cc:454:run$16810 [20:0] }, B={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 3'000 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0110011 }, Y=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [24:0]
      New ports: A={ 4'0000 $auto$wreduce.cc:454:run$16810 [4] $auto$wreduce.cc:454:run$16810 [19:15] 4'0000 $auto$wreduce.cc:454:run$16810 [2] 1'1 $auto$wreduce.cc:454:run$16810 [4] $auto$wreduce.cc:454:run$16810 [2] }, B={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [11:7] 3'010 }, Y={ $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [24:15] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [11:6] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [4] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [2] }
      New connections: { $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [14:12] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [5] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [3] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [1:0] } = 7'0001011
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12856:
      Old ports: A={ 7'0000000 $auto$wreduce.cc:454:run$16811 [24:0] }, B=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0], Y=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0]
      New ports: A={ $auto$wreduce.cc:454:run$16811 [24:15] 3'000 $auto$wreduce.cc:454:run$16811 [11:7] $auto$wreduce.cc:454:run$16811 [2] 1'1 $auto$wreduce.cc:454:run$16811 [4] 1'0 $auto$wreduce.cc:454:run$16811 [2] 2'11 }, B=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [24:0], Y=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0] [24:0]
      New connections: $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0] [31:25] = 7'0000000
    Consolidated identical input bits for $pmux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12961:
      Old ports: A={ 1'0 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [10] 5'00000 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 5'10101 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0010011 }, B={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 5'11101 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0010011 $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] }, Y=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0]
      New ports: A={ 1'0 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [10] 5'00000 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 12'101010010011 }, B={ \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [12] \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7] 12'111010010011 $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [31:10] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [6:0] }, Y={ $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0] [31:10] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0] [6:0] }
      New connections: $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0] [9:7] = \uut.IBEX.core.if_stage_i.compressed_decoder_i.instr_i [9:7]
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6803:
      Old ports: A=3'100, B={ 1'0 $flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:278$3686_Y [1:0] }, Y=$flatten\uut.\IBEX.\core.\load_store_unit_i.$5\ls_fsm_ns[2:0]
      New ports: A=2'10, B={ 1'0 $flatten\uut.\IBEX.\core.\load_store_unit_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:278$3686_Y [0] }, Y={ $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\ls_fsm_ns[2:0] [2] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\ls_fsm_ns[2:0] [0] }
      New connections: $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\ls_fsm_ns[2:0] [1] = $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\ls_fsm_ns[2:0] [0]
    Consolidated identical input bits for $pmux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7106:
      Old ports: A=$flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0], B={ $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] }, Y=\uut.IBEX.core.load_store_unit_i.rdata_b_ext
      New ports: A={ $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_b_ext[31:0] [8] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7:0] }, B={ $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_b_ext[31:0] [8] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15:8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_b_ext[31:0] [8] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23:16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_b_ext[31:0] [8] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31:24] }, Y=\uut.IBEX.core.load_store_unit_i.rdata_b_ext [8:0]
      New connections: \uut.IBEX.core.load_store_unit_i.rdata_b_ext [31:9] = { \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] \uut.IBEX.core.load_store_unit_i.rdata_b_ext [8] }
    Consolidated identical input bits for $pmux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7137:
      Old ports: A=$flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0], B={ $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] }, Y=\uut.IBEX.core.load_store_unit_i.rdata_h_ext
      New ports: A={ $flatten\uut.\IBEX.\core.\load_store_unit_i.$2\rdata_h_ext[31:0] [16] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [15:0] }, B={ $flatten\uut.\IBEX.\core.\load_store_unit_i.$3\rdata_h_ext[31:0] [16] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [23:8] $flatten\uut.\IBEX.\core.\load_store_unit_i.$4\rdata_h_ext[31:0] [16] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [31:16] $flatten\uut.\IBEX.\core.\load_store_unit_i.$5\rdata_h_ext[31:0] [16] \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_rdata_i [7:0] \uut.IBEX.core.load_store_unit_i.rdata_q [23:16] }, Y=\uut.IBEX.core.load_store_unit_i.rdata_h_ext [16:0]
      New connections: \uut.IBEX.core.load_store_unit_i.rdata_h_ext [31:17] = { \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] \uut.IBEX.core.load_store_unit_i.rdata_h_ext [16] }
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310:
      Old ports: A=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y, B={ 16'0000000000000000 \uut.ahb_sys_0_uut.S_2.WGPIOPD }, Y=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y
      New ports: A=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:157$309_Y [16:0], B={ 1'0 \uut.ahb_sys_0_uut.S_2.WGPIOPD }, Y=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16:0]
      New connections: $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [31:17] = { $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484:
      Old ports: A=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y, B={ 31'0000000000000000000000000000000 \uut.ahb_sys_0_uut.apb_sys_inst_0.S_3.TMREN }, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y
      New ports: A=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:139$3483_Y [1:0], B={ 1'0 \uut.ahb_sys_0_uut.apb_sys_inst_0.S_3.TMREN }, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1:0]
      New connections: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [31:2] = { $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1] }
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7507:
      Old ports: A=$flatten\uut.\IBEX.\core.\cs_registers_i.$3\mepc_d[31:0], B={ \uut.IBEX.core.cs_registers_i.csr_wdata_int [31:1] 1'0 }, Y=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_d[31:0]
      New ports: A=$flatten\uut.\IBEX.\core.\cs_registers_i.$3\mepc_d[31:0] [31:1], B=\uut.IBEX.core.cs_registers_i.csr_wdata_int [31:1], Y=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_d[31:0] [31:1]
      New connections: $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_d[31:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7552:
      Old ports: A={ \uut.IBEX.core.cs_registers_i.csr_wdata_int [31:1] 1'0 }, B=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_d[31:0], Y=\uut.IBEX.core.cs_registers_i.u_depc_csr.wr_data_i
      New ports: A=\uut.IBEX.core.cs_registers_i.csr_wdata_int [31:1], B=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_d[31:0] [31:1], Y=\uut.IBEX.core.cs_registers_i.u_depc_csr.wr_data_i [31:1]
      New connections: \uut.IBEX.core.cs_registers_i.u_depc_csr.wr_data_i [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11117:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$15\ctrl_fsm_ns[3:0], B=4'0101, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$14\ctrl_fsm_ns[3:0]
      New ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$15\ctrl_fsm_ns[3:0] [1:0], B=2'01, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$14\ctrl_fsm_ns[3:0] [1:0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$14\ctrl_fsm_ns[3:0] [3:2] = { 1'0 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$14\ctrl_fsm_ns[3:0] [0] }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y, B={ 4'0010 $auto$wreduce.cc:454:run$16806 [0] $auto$wreduce.cc:454:run$16806 [0] }, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y
      New ports: A={ 1'0 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [2:0] }, B={ 2'10 $auto$wreduce.cc:454:run$16806 [0] $auto$wreduce.cc:454:run$16806 [0] }, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [3:0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [5:4] = 2'00
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11318:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11316_Y, B=4'0101, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11318_Y
      New ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11316_Y [3:2], B=2'01, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11318_Y [3:2]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11318_Y [1:0] = 2'01
    Consolidated identical input bits for $pmux cell $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$procmux$9661:
      Old ports: A=6'000000, B={ 36'100101100110000010000011000100001010 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] }, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$6\alu_operator_o[5:0]
      New ports: A=5'00000, B={ 30'101011011000010000110010001010 $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [3] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1:0] }, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$6\alu_operator_o[5:0] [5] $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$6\alu_operator_o[5:0] [3:0] }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\decoder_i.$6\alu_operator_o[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$procmux$12856:
      Old ports: A={ $auto$wreduce.cc:454:run$16811 [24:15] 3'000 $auto$wreduce.cc:454:run$16811 [11:7] $auto$wreduce.cc:454:run$16811 [2] 1'1 $auto$wreduce.cc:454:run$16811 [4] 1'0 $auto$wreduce.cc:454:run$16811 [2] 2'11 }, B=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [24:0], Y=$flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0] [24:0]
      New ports: A={ $auto$wreduce.cc:454:run$16811 [24:15] $auto$wreduce.cc:454:run$16811 [11:7] $auto$wreduce.cc:454:run$16811 [2] $auto$wreduce.cc:454:run$16811 [4] $auto$wreduce.cc:454:run$16811 [2] }, B={ $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [24:15] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [11:6] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [4] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0] [2] }, Y={ $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0] [24:15] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0] [11:6] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0] [4] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0] [2] }
      New connections: { $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0] [14:12] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0] [5] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0] [3] $flatten\uut.\IBEX.\core.\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0] [1:0] } = 7'0001011
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311:
      Old ports: A=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y, B={ 16'0000000000000000 \uut.ahb_sys_0_uut.S_2.WGPIOPU }, Y=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y
      New ports: A=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:156$310_Y [16:0], B={ 1'0 \uut.ahb_sys_0_uut.S_2.WGPIOPU }, Y=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16:0]
      New connections: $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [31:17] = { $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485:
      Old ports: A=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y, B={ 31'0000000000000000000000000000000 \uut.ahb_sys_0_uut.apb_sys_inst_0.S_3.TMROVCLR }, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y
      New ports: A=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:138$3484_Y [1:0], B={ 1'0 \uut.ahb_sys_0_uut.apb_sys_inst_0.S_3.TMROVCLR }, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1:0]
      New connections: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [31:2] = { $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1] }
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$7605:
      Old ports: A={ \uut.IBEX.core.cs_registers_i.csr_wdata_int [31:1] 1'0 }, B=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_d[31:0], Y=\uut.IBEX.core.cs_registers_i.u_mepc_csr.wr_data_i
      New ports: A=\uut.IBEX.core.cs_registers_i.csr_wdata_int [31:1], B=$flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_d[31:0] [31:1], Y=\uut.IBEX.core.cs_registers_i.u_mepc_csr.wr_data_i [31:1]
      New connections: \uut.IBEX.core.cs_registers_i.u_mepc_csr.wr_data_i [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11303:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y, B=6'000010, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0]
      New ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [3:0], B=4'0010, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0] [3:0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0] [5:4] = 2'00
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11320:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11318_Y, B=4'0101, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$12\ctrl_fsm_ns[3:0]
      New ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11318_Y [3:2], B=2'01, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$12\ctrl_fsm_ns[3:0] [3:2]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$12\ctrl_fsm_ns[3:0] [1:0] = 2'01
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312:
      Old ports: A=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y, B={ 16'0000000000000000 \PAD_GPIO_Sys0_S2 }, Y=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y
      New ports: A=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:155$311_Y [16:0], B={ 1'0 \PAD_GPIO_Sys0_S2 }, Y=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16:0]
      New connections: $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [31:17] = { $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16] 1'0 $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16] $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486:
      Old ports: A=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y, B={ 31'0000000000000000000000000000000 \uut.ahb_sys_0_uut.apb_sys_inst_0.S3.TMROV }, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y
      New ports: A=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:137$3485_Y [1:0], B={ 1'0 \uut.ahb_sys_0_uut.apb_sys_inst_0.S3.TMROV }, Y=$flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1:0]
      New connections: $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [31:2] = { $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] 1'0 $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S_3.$ternary$/openLANE_flow/designs/IBEX_SoC/src/APB_TIMER32.v:136$3486_Y [1] }
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11451:
      Old ports: A=6'000000, B=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0], Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0]
      New ports: A=4'0000, B=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0] [3:0], Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0] [3:0]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0] [5:4] = 2'00
    Consolidated identical input bits for $mux cell $flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:153$313:
      Old ports: A=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y, B={ 16'0000000000000000 \PAD_GPIO_Sys0_S2 }, Y=\uut.ahb_sys_0_uut.AHB.HRDATA_S2
      New ports: A=$flatten\uut.\ahb_sys_0_uut.\S_2.$ternary$/openLANE_flow/designs/IBEX_SoC/src/AHBlite_GPIO.v:154$312_Y [16:0], B={ 1'0 \PAD_GPIO_Sys0_S2 }, Y=\uut.ahb_sys_0_uut.AHB.HRDATA_S2 [16:0]
      New connections: \uut.ahb_sys_0_uut.AHB.HRDATA_S2 [31:17] = { \uut.ahb_sys_0_uut.AHB.HRDATA_S2 [16] \uut.ahb_sys_0_uut.AHB.HRDATA_S2 [16] 1'0 \uut.ahb_sys_0_uut.AHB.HRDATA_S2 [16] \uut.ahb_sys_0_uut.AHB.HRDATA_S2 [16] \uut.ahb_sys_0_uut.AHB.HRDATA_S2 [16] \uut.ahb_sys_0_uut.AHB.HRDATA_S2 [16] 1'0 \uut.ahb_sys_0_uut.AHB.HRDATA_S2 [16] 1'0 \uut.ahb_sys_0_uut.AHB.HRDATA_S2 [16] 1'0 \uut.ahb_sys_0_uut.AHB.HRDATA_S2 [16] \uut.ahb_sys_0_uut.AHB.HRDATA_S2 [16] 1'0 }
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12247:
      Old ports: A=6'000000, B=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0], Y=\uut.IBEX.core.cs_registers_i.csr_mcause_i
      New ports: A=4'0000, B=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0] [3:0], Y=\uut.IBEX.core.cs_registers_i.csr_mcause_i [3:0]
      New connections: \uut.IBEX.core.cs_registers_i.csr_mcause_i [5:4] = 2'00
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $pmux cell $flatten\uut.\IBEX.\core.\if_stage_i.$procmux$15183:
      Old ports: A={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] 5'00000 }, B={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] \uut.IBEX.core.cs_registers_i.csr_mcause_i [4:0] 58'0001101000010001000010000000000011010000100010000100000010 }, Y={ \uut.IBEX.core.if_stage_i.exc_pc [31:8] \uut.IBEX.core.if_stage_i.exc_pc [6:2] }
      New ports: A={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] 4'0000 }, B={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] \uut.IBEX.core.cs_registers_i.csr_mcause_i [3:0] 56'00011010000100010000100000000001101000010001000010000010 }, Y={ \uut.IBEX.core.if_stage_i.exc_pc [31:8] \uut.IBEX.core.if_stage_i.exc_pc [5:2] }
      New connections: \uut.IBEX.core.if_stage_i.exc_pc [6] = 1'0
  Optimizing cells in module \IBEX_SoC.
Performed a total of 100 changes.

54.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

54.20.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7040 in front of them:
        $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6750
        $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6795

54.20.7. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15273 ($adff) from module IBEX_SoC.
Setting constant 0-bit at position 0 on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15272 ($adff) from module IBEX_SoC.
Adding SRST signal on $auto$opt_dff.cc:764:run$16629 ($dffe) from module IBEX_SoC (D = \uut.IBEX.core.if_stage_i.fetch_addr_n [1], Q = \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [1], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$16590 ($adffe) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[0]$17099 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[1]$17101 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[2]$17103 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[3]$17105 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[4]$17107 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[5]$17109 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[6]$17111 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[7]$17113 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[8]$17115 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[9]$17117 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[10]$17119 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[11]$17121 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[12]$17123 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[13]$17125 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[14]$17127 ($dff) from module IBEX_SoC.
Handling const CLK on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC (removing D path).
Setting constant 0-bit at position 0 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 8 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 9 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 10 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 11 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 12 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 13 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 14 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 15 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 16 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 18 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 19 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 20 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 21 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 22 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 23 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 24 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 25 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 26 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 27 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 28 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 29 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 30 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Setting constant 0-bit at position 31 on $memory\uut.IBEX.core.cs_registers_i.pmp_addr_rdata[15]$17129 ($dff) from module IBEX_SoC.
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem$rdreg[0]$18107 ($dff) from module IBEX_SoC (D = $memory\uut.openstriVe_soc_mem_Sys0_S1.mem$rdreg[0]$d$18108, Q = \uut.openstriVe_soc_mem_Sys0_S1.rdata).

54.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 4 unused cells and 786 unused wires.
<suppressed ~5 debug messages>

54.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~31 debug messages>

54.20.10. Rerunning OPT passes. (Maybe there is more to do..)

54.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~715 debug messages>

54.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8481: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcause_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8525: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dcsr_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8569: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mstatus_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mie_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dcsr_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8611: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcause_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dcsr_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8656: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mstatus_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dcsr_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $auto$opt_reduce.cc:134:opt_mux$15618 $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8697: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mstatus_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mie_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcause_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8745: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mstatus_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mie_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8835: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mstatus_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mie_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dcsr_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8922: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcause_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dcsr_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8487_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8968: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mstatus_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mie_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9014: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mie_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $auto$opt_reduce.cc:134:opt_mux$16778 $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9060: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mie_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9105: { $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8561_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mie_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$9197: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8288_CMP $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dcsr_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$7040: { $flatten\uut.\IBEX.\core.\load_store_unit_i.$eq$/openLANE_flow/designs/IBEX_SoC/src/ibex_load_store_unit.v:325$3704_Y $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6839_CMP $auto$opt_reduce.cc:134:opt_mux$20902 $flatten\uut.\IBEX.\core.\load_store_unit_i.$procmux$6708_CMP }
  Optimizing cells in module \IBEX_SoC.
Performed a total of 15 changes.

54.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

54.20.14. Executing OPT_SHARE pass.

54.20.15. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[9]$17869 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[9] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[9]$17869 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[9] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[9]$17869 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[9] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[9]$17869 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[9] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[99]$18049 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[99] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[99]$18049 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[99] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[99]$18049 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[99] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[99]$18049 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[99] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[98]$18047 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[98] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[98]$18047 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[98] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[98]$18047 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[98] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[98]$18047 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[98] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[97]$18045 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[97] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[97]$18045 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[97] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[97]$18045 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[97] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[97]$18045 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[97] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[96]$18043 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[96] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[96]$18043 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[96] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[96]$18043 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[96] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[96]$18043 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[96] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[95]$18041 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[95] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[95]$18041 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[95] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[95]$18041 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[95] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[95]$18041 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[95] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[94]$18039 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[94] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[94]$18039 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[94] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[94]$18039 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[94] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[94]$18039 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[94] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[93]$18037 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[93] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[93]$18037 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[93] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[93]$18037 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[93] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[93]$18037 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[93] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[92]$18035 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[92] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[92]$18035 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[92] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[92]$18035 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[92] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[92]$18035 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[92] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[91]$18033 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[91] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[91]$18033 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[91] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[91]$18033 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[91] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[91]$18033 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[91] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[90]$18031 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[90] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[90]$18031 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[90] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[90]$18031 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[90] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[90]$18031 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[90] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[8]$17867 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[8] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[8]$17867 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[8] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[8]$17867 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[8] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[8]$17867 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[8] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[89]$18029 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[89] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[89]$18029 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[89] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[89]$18029 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[89] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[89]$18029 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[89] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[88]$18027 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[88] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[88]$18027 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[88] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[88]$18027 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[88] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[88]$18027 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[88] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[87]$18025 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[87] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[87]$18025 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[87] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[87]$18025 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[87] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[87]$18025 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[87] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[86]$18023 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[86] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[86]$18023 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[86] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[86]$18023 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[86] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[86]$18023 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[86] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[85]$18021 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[85] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[85]$18021 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[85] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[85]$18021 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[85] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[85]$18021 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[85] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[84]$18019 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[84] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[84]$18019 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[84] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[84]$18019 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[84] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[84]$18019 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[84] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[83]$18017 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[83] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[83]$18017 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[83] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[83]$18017 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[83] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[83]$18017 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[83] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[82]$18015 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[82] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[82]$18015 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[82] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[82]$18015 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[82] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[82]$18015 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[82] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[81]$18013 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[81] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[81]$18013 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[81] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[81]$18013 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[81] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[81]$18013 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[81] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[80]$18011 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[80] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[80]$18011 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[80] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[80]$18011 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[80] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[80]$18011 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[80] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[7]$17865 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[7] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[7]$17865 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[7] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[7]$17865 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[7] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[7]$17865 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[7] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[79]$18009 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[79] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[79]$18009 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[79] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[79]$18009 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[79] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[79]$18009 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[79] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[78]$18007 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[78] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[78]$18007 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[78] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[78]$18007 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[78] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[78]$18007 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[78] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[77]$18005 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[77] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[77]$18005 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[77] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[77]$18005 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[77] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[77]$18005 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[77] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[76]$18003 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[76] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[76]$18003 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[76] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[76]$18003 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[76] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[76]$18003 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[76] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[75]$18001 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[75] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[75]$18001 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[75] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[75]$18001 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[75] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[75]$18001 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[75] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[74]$17999 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[74] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[74]$17999 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[74] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[74]$17999 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[74] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[74]$17999 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[74] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[73]$17997 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[73] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[73]$17997 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[73] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[73]$17997 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[73] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[73]$17997 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[73] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[72]$17995 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[72] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[72]$17995 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[72] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[72]$17995 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[72] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[72]$17995 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[72] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[71]$17993 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[71] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[71]$17993 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[71] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[71]$17993 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[71] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[71]$17993 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[71] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[70]$17991 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[70] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[70]$17991 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[70] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[70]$17991 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[70] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[70]$17991 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[70] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[6]$17863 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[6] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[6]$17863 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[6] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[6]$17863 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[6] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[6]$17863 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[6] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[69]$17989 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[69] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[69]$17989 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[69] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[69]$17989 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[69] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[69]$17989 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[69] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[68]$17987 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[68] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[68]$17987 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[68] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[68]$17987 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[68] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[68]$17987 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[68] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[67]$17985 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[67] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[67]$17985 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[67] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[67]$17985 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[67] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[67]$17985 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[67] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[66]$17983 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[66] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[66]$17983 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[66] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[66]$17983 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[66] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[66]$17983 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[66] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[65]$17981 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[65] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[65]$17981 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[65] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[65]$17981 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[65] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[65]$17981 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[65] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[64]$17979 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[64] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[64]$17979 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[64] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[64]$17979 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[64] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[64]$17979 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[64] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[63]$17977 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[63] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[63]$17977 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[63] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[63]$17977 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[63] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[63]$17977 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[63] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[62]$17975 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[62] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[62]$17975 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[62] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[62]$17975 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[62] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[62]$17975 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[62] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[61]$17973 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[61] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[61]$17973 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[61] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[61]$17973 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[61] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[61]$17973 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[61] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[60]$17971 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[60] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[60]$17971 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[60] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[60]$17971 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[60] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[60]$17971 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[60] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[5]$17861 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[5] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[5]$17861 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[5] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[5]$17861 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[5] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[5]$17861 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[5] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[59]$17969 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[59] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[59]$17969 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[59] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[59]$17969 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[59] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[59]$17969 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[59] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[58]$17967 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[58] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[58]$17967 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[58] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[58]$17967 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[58] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[58]$17967 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[58] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[57]$17965 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[57] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[57]$17965 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[57] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[57]$17965 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[57] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[57]$17965 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[57] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[56]$17963 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[56] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[56]$17963 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[56] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[56]$17963 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[56] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[56]$17963 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[56] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[55]$17961 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[55] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[55]$17961 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[55] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[55]$17961 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[55] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[55]$17961 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[55] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[54]$17959 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[54] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[54]$17959 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[54] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[54]$17959 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[54] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[54]$17959 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[54] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[53]$17957 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[53] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[53]$17957 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[53] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[53]$17957 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[53] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[53]$17957 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[53] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[52]$17955 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[52] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[52]$17955 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[52] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[52]$17955 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[52] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[52]$17955 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[52] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[51]$17953 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[51] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[51]$17953 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[51] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[51]$17953 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[51] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[51]$17953 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[51] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[50]$17951 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[50] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[50]$17951 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[50] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[50]$17951 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[50] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[50]$17951 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[50] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[4]$17859 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[4] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[4]$17859 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[4] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[4]$17859 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[4] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[4]$17859 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[4] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[49]$17949 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[49] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[49]$17949 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[49] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[49]$17949 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[49] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[49]$17949 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[49] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[48]$17947 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[48] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[48]$17947 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[48] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[48]$17947 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[48] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[48]$17947 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[48] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[47]$17945 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[47] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[47]$17945 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[47] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[47]$17945 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[47] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[47]$17945 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[47] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[46]$17943 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[46] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[46]$17943 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[46] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[46]$17943 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[46] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[46]$17943 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[46] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[45]$17941 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[45] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[45]$17941 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[45] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[45]$17941 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[45] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[45]$17941 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[45] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[44]$17939 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[44] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[44]$17939 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[44] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[44]$17939 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[44] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[44]$17939 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[44] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[43]$17937 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[43] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[43]$17937 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[43] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[43]$17937 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[43] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[43]$17937 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[43] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[42]$17935 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[42] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[42]$17935 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[42] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[42]$17935 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[42] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[42]$17935 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[42] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[41]$17933 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[41] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[41]$17933 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[41] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[41]$17933 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[41] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[41]$17933 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[41] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[40]$17931 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[40] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[40]$17931 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[40] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[40]$17931 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[40] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[40]$17931 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[40] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[3]$17857 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[3] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[3]$17857 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[3] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[3]$17857 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[3] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[3]$17857 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[3] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[39]$17929 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[39] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[39]$17929 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[39] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[39]$17929 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[39] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[39]$17929 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[39] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[38]$17927 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[38] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[38]$17927 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[38] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[38]$17927 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[38] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[38]$17927 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[38] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[37]$17925 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[37] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[37]$17925 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[37] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[37]$17925 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[37] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[37]$17925 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[37] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[36]$17923 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[36] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[36]$17923 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[36] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[36]$17923 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[36] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[36]$17923 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[36] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[35]$17921 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[35] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[35]$17921 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[35] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[35]$17921 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[35] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[35]$17921 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[35] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[34]$17919 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[34] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[34]$17919 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[34] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[34]$17919 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[34] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[34]$17919 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[34] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[33]$17917 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[33] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[33]$17917 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[33] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[33]$17917 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[33] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[33]$17917 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[33] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[32]$17915 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[32] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[32]$17915 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[32] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[32]$17915 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[32] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[32]$17915 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[32] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[31]$17913 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[31] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[31]$17913 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[31] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[31]$17913 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[31] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[31]$17913 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[31] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[30]$17911 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[30] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[30]$17911 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[30] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[30]$17911 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[30] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[30]$17911 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[30] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[2]$17855 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[2] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[2]$17855 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[2] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[2]$17855 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[2] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[2]$17855 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[2] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[29]$17909 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[29] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[29]$17909 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[29] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[29]$17909 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[29] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[29]$17909 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[29] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[28]$17907 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[28] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[28]$17907 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[28] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[28]$17907 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[28] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[28]$17907 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[28] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[27]$17905 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[27] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[27]$17905 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[27] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[27]$17905 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[27] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[27]$17905 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[27] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[26]$17903 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[26] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[26]$17903 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[26] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[26]$17903 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[26] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[26]$17903 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[26] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[25]$17901 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[25] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[25]$17901 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[25] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[25]$17901 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[25] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[25]$17901 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[25] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[24]$17899 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[24] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[24]$17899 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[24] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[24]$17899 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[24] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[24]$17899 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[24] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[23]$17897 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[23] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[23]$17897 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[23] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[23]$17897 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[23] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[23]$17897 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[23] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[22]$17895 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[22] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[22]$17895 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[22] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[22]$17895 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[22] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[22]$17895 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[22] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[21]$17893 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[21] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[21]$17893 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[21] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[21]$17893 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[21] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[21]$17893 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[21] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[20]$17891 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[20] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[20]$17891 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[20] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[20]$17891 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[20] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[20]$17891 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[20] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[1]$17853 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[1] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[1]$17853 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[1] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[1]$17853 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[1] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[1]$17853 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[1] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[19]$17889 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[19] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[19]$17889 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[19] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[19]$17889 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[19] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[19]$17889 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[19] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[18]$17887 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[18] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[18]$17887 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[18] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[18]$17887 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[18] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[18]$17887 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[18] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[17]$17885 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[17] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[17]$17885 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[17] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[17]$17885 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[17] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[17]$17885 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[17] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[16]$17883 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[16] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[16]$17883 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[16] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[16]$17883 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[16] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[16]$17883 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[16] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[15]$17881 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[15] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[15]$17881 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[15] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[15]$17881 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[15] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[15]$17881 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[15] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[14]$17879 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[14] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[14]$17879 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[14] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[14]$17879 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[14] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[14]$17879 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[14] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[13]$17877 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[13] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[13]$17877 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[13] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[13]$17877 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[13] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[13]$17877 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[13] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[12]$17875 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[12] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[12]$17875 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[12] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[12]$17875 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[12] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[12]$17875 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[12] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[127]$18105 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[127] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[127]$18105 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[127] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[127]$18105 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[127] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[127]$18105 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[127] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[126]$18103 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[126] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[126]$18103 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[126] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[126]$18103 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[126] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[126]$18103 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[126] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[125]$18101 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[125] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[125]$18101 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[125] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[125]$18101 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[125] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[125]$18101 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[125] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[124]$18099 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[124] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[124]$18099 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[124] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[124]$18099 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[124] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[124]$18099 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[124] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[123]$18097 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[123] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[123]$18097 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[123] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[123]$18097 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[123] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[123]$18097 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[123] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[122]$18095 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[122] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[122]$18095 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[122] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[122]$18095 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[122] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[122]$18095 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[122] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[121]$18093 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[121] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[121]$18093 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[121] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[121]$18093 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[121] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[121]$18093 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[121] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[120]$18091 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[120] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[120]$18091 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[120] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[120]$18091 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[120] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[120]$18091 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[120] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[11]$17873 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[11] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[11]$17873 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[11] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[11]$17873 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[11] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[11]$17873 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[11] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[119]$18089 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[119] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[119]$18089 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[119] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[119]$18089 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[119] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[119]$18089 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[119] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[118]$18087 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[118] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[118]$18087 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[118] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[118]$18087 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[118] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[118]$18087 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[118] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[117]$18085 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[117] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[117]$18085 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[117] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[117]$18085 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[117] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[117]$18085 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[117] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[116]$18083 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[116] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[116]$18083 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[116] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[116]$18083 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[116] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[116]$18083 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[116] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[115]$18081 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[115] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[115]$18081 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[115] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[115]$18081 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[115] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[115]$18081 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[115] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[114]$18079 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[114] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[114]$18079 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[114] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[114]$18079 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[114] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[114]$18079 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[114] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[113]$18077 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[113] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[113]$18077 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[113] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[113]$18077 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[113] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[113]$18077 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[113] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[112]$18075 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[112] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[112]$18075 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[112] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[112]$18075 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[112] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[112]$18075 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[112] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[111]$18073 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[111] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[111]$18073 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[111] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[111]$18073 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[111] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[111]$18073 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[111] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[110]$18071 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[110] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[110]$18071 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[110] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[110]$18071 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[110] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[110]$18071 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[110] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[10]$17871 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[10] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[10]$17871 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[10] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[10]$17871 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[10] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[10]$17871 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[10] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[109]$18069 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[109] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[109]$18069 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[109] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[109]$18069 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[109] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[109]$18069 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[109] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[108]$18067 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[108] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[108]$18067 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[108] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[108]$18067 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[108] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[108]$18067 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[108] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[107]$18065 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[107] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[107]$18065 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[107] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[107]$18065 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[107] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[107]$18065 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[107] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[106]$18063 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[106] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[106]$18063 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[106] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[106]$18063 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[106] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[106]$18063 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[106] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[105]$18061 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[105] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[105]$18061 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[105] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[105]$18061 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[105] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[105]$18061 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[105] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[104]$18059 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[104] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[104]$18059 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[104] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[104]$18059 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[104] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[104]$18059 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[104] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[103]$18057 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[103] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[103]$18057 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[103] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[103]$18057 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[103] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[103]$18057 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[103] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[102]$18055 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[102] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[102]$18055 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[102] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[102]$18055 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[102] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[102]$18055 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[102] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[101]$18053 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[101] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[101]$18053 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[101] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[101]$18053 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[101] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[101]$18053 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[101] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[100]$18051 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[100] [31:24]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[100]$18051 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[100] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[100]$18051 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[100] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[100]$18051 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[100] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[0]$17851 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [7:0], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[0] [7:0]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[0]$17851 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [15:8], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[0] [15:8]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[0]$17851 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [23:16], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[0] [23:16]).
Adding EN signal on $memory\uut.openstriVe_soc_mem_Sys0_S1.mem[0]$17851 ($dff) from module IBEX_SoC (D = \uut.openstriVe_soc_mem_Sys0_S1.wdata [31:24], Q = \uut.openstriVe_soc_mem_Sys0_S1.mem[0] [31:24]).
Setting constant 0-bit at position 0 on $flatten\uut.\ahb_sys_0_uut.\apb_sys_inst_0.\S0.\i2c.\byte_controller.\bit_controller.$procdff$15272 ($adff) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$16932 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$16739 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$16735 ($adffe) from module IBEX_SoC.
Setting constant 1-bit at position 0 on $auto$opt_dff.cc:764:run$16724 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$16724 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$16724 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$16724 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$16724 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$16724 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$16724 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$16724 ($adffe) from module IBEX_SoC.
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$16629 ($dffe) from module IBEX_SoC.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$16230 ($adffe) from module IBEX_SoC.

54.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 512 unused cells and 532 unused wires.
<suppressed ~513 debug messages>

54.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~3 debug messages>

54.20.18. Rerunning OPT passes. (Maybe there is more to do..)

54.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10804: \uut.IBEX.core.id_stage_i.controller_i.load_err_q -> 1'0
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~202 debug messages>

54.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8569: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mstatus_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mie_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8611: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcause_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dcsr_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    New ctrl vector for $pmux cell $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8697: { $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mstatus_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mie_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mscratch_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mepc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcause_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mtval_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\depc_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch0_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\dscratch1_en[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8206_CTRL $flatten\uut.\IBEX.\core.\cs_registers_i.$procmux$8198_CTRL }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10804:
      Old ports: A=1'0, B=1'0, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$5\load_err_prio[0:0]
      New ports: A={ }, B={ }, Y={ }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$5\load_err_prio[0:0] = 1'0
    New ctrl vector for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10804: { }
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:149$4446:
      Old ports: A={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:1] 1'0 }, B={ \uut.IBEX.core.if_stage_i.fetch_addr_n [31:1] 1'0 }, Y=$flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:149$4446_Y
      New ports: A=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:1], B=\uut.IBEX.core.if_stage_i.fetch_addr_n [31:1], Y=$flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:149$4446_Y [31:1]
      New connections: $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:149$4446_Y [0] = 1'0
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10831:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$5\load_err_prio[0:0], B=1'0, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$4\load_err_prio[0:0]
      New ports: A={ }, B={ }, Y={ }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$4\load_err_prio[0:0] = 1'0
    New ctrl vector for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10831: { }
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10864:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$4\load_err_prio[0:0], B=1'0, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$3\load_err_prio[0:0]
      New ports: A={ }, B={ }, Y={ }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$3\load_err_prio[0:0] = 1'0
    New ctrl vector for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10864: { }
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10897:
      Old ports: A=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$3\load_err_prio[0:0], B=1'0, Y=\uut.IBEX.core.id_stage_i.controller_i.load_err_prio
      New ports: A={ }, B={ }, Y={ }
      New connections: \uut.IBEX.core.id_stage_i.controller_i.load_err_prio = 1'0
    New ctrl vector for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$10897: { }
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297:
      Old ports: A={ 1'0 \uut.IBEX.core.id_stage_i.controller_i.load_err_prio }, B=2'11, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [1] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2] }
      New ports: A=1'0, B=1'1, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [1] = $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2]
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299:
      Old ports: A={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2:1] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2] }, B={ 1'0 $auto$wreduce.cc:454:run$16804 [1] $auto$wreduce.cc:454:run$16804 [1] }, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [2:0]
      New ports: A={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2] }, B={ 1'0 $auto$wreduce.cc:454:run$16804 [1] }, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [2] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [0] }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [1] = $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [0]
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301:
      Old ports: A={ 1'0 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [2:0] }, B={ 2'10 $auto$wreduce.cc:454:run$16806 [1] $auto$wreduce.cc:454:run$16806 [1] }, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [3:0]
      New ports: A={ 1'0 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [2] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [0] }, B={ 2'10 $auto$wreduce.cc:454:run$16806 [1] }, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [3:2] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [0] }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [1] = $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [0]
  Optimizing cells in module \IBEX_SoC.
Performed a total of 15 changes.

54.20.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.20.22. Executing OPT_SHARE pass.

54.20.23. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procdff$15354 ($adff) from module IBEX_SoC.
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:702:run$16628 ($sdffce) from module IBEX_SoC.

54.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

54.20.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~10 debug messages>

54.20.26. Rerunning OPT passes. (Maybe there is more to do..)

54.20.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~200 debug messages>

54.20.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299:
      Old ports: A={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11297_Y [2] }, B={ 1'0 $auto$wreduce.cc:454:run$16804 [1] }, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [2:1]
      New ports: A=1'0, B=$auto$wreduce.cc:454:run$16804 [1], Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [1]
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:149$4447:
      Old ports: A={ $flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:149$4446_Y [31:1] 1'0 }, B={ \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [31:1] 1'0 }, Y=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d
      New ports: A=$flatten\uut.\IBEX.\core.\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/IBEX_SoC/src/ibex_prefetch_buffer.v:149$4446_Y [31:1], B=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [31:1], Y=\uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d [31:1]
      New connections: \uut.IBEX.core.if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d [0] = 1'0
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301:
      Old ports: A={ 1'0 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [2:1] }, B={ 2'10 $auto$wreduce.cc:454:run$16806 [1] }, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [3:1]
      New ports: A={ 1'0 $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11299_Y [1] }, B={ 1'1 $auto$wreduce.cc:454:run$16806 [1] }, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [3] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [1] }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [2] = 1'0
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11303:
      Old ports: A={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [3:1] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [1] }, B=4'0010, Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0] [3:0]
      New ports: A={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [3] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [1] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11301_Y [1] }, B=3'010, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0] [3] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0] [1:0] }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0] [2] = 1'0
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$11451:
      Old ports: A=4'0000, B=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0] [3:0], Y=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0] [3:0]
      New ports: A=3'000, B={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0] [3] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$8\exc_cause_o[5:0] [1:0] }, Y={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0] [3] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0] [1:0] }
      New connections: $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0] [2] = 1'0
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $mux cell $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$procmux$12247:
      Old ports: A=4'0000, B=$flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0] [3:0], Y=\uut.IBEX.core.cs_registers_i.csr_mcause_i [3:0]
      New ports: A=3'000, B={ $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0] [3] $flatten\uut.\IBEX.\core.\id_stage_i.\controller_i.$7\exc_cause_o[5:0] [1:0] }, Y={ \uut.IBEX.core.cs_registers_i.csr_mcause_i [3] \uut.IBEX.core.cs_registers_i.csr_mcause_i [1:0] }
      New connections: \uut.IBEX.core.cs_registers_i.csr_mcause_i [2] = 1'0
  Optimizing cells in module \IBEX_SoC.
    Consolidated identical input bits for $pmux cell $flatten\uut.\IBEX.\core.\if_stage_i.$procmux$15183:
      Old ports: A={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] 4'0000 }, B={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] \uut.IBEX.core.cs_registers_i.csr_mcause_i [3:0] 56'00011010000100010000100000000001101000010001000010000010 }, Y={ \uut.IBEX.core.if_stage_i.exc_pc [31:8] \uut.IBEX.core.if_stage_i.exc_pc [5:2] }
      New ports: A={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] 3'000 }, B={ \uut.IBEX.core.cs_registers_i.u_mtvec_csr.rdata_q [31:8] \uut.IBEX.core.cs_registers_i.csr_mcause_i [3] \uut.IBEX.core.cs_registers_i.csr_mcause_i [1:0] 54'000110100001000100001000000000110100001000100001000010 }, Y={ \uut.IBEX.core.if_stage_i.exc_pc [31:8] \uut.IBEX.core.if_stage_i.exc_pc [5] \uut.IBEX.core.if_stage_i.exc_pc [3:2] }
      New connections: \uut.IBEX.core.if_stage_i.exc_pc [4] = 1'0
  Optimizing cells in module \IBEX_SoC.
Performed a total of 7 changes.

54.20.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.20.30. Executing OPT_SHARE pass.

54.20.31. Executing OPT_DFF pass (perform DFF optimizations).

54.20.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

54.20.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~1 debug messages>

54.20.34. Rerunning OPT passes. (Maybe there is more to do..)

54.20.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~200 debug messages>

54.20.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

54.20.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

54.20.38. Executing OPT_SHARE pass.

54.20.39. Executing OPT_DFF pass (perform DFF optimizations).

54.20.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..

54.20.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

54.20.42. Finished OPT passes. (There is nothing left to do.)

54.21. Executing TECHMAP pass (map to technology primitives).

54.21.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

54.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper maccmap for cells of type $macc.
  add { \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.sign_a \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_op_a } * { \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.sign_b \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_op_b } (17x17 bits, signed)
  add \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.accum (34 bits, signed)
Using extmapper simplemap for cells of type $or.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=4 for cells of type $pmux.
Using extmapper simplemap for cells of type $dlatch.
Using template $paramod$constmap:27416298eff2bef5b024d2c6ba87bd3d61407e73$paramod$82cc366d01f8fe741c66522b043725b812342daf\_90_shift_shiftx for cells of type $shiftx.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$constmap:087bfedf5adb861684835f4fd4823e581f87d305$paramod$6e7719328f2d94689b6b8e5526363af5462deb90\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=64\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=11 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=12 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=11 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=12 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=13 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=9\S_WIDTH=12 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=33\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=9\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=17\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=32\Y_WIDTH=32 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using template $paramod$constmap:e2101c44e3f83a0dc2da774cd1fdd19ff2da5f4f$paramod$70c4eba548f8011e647fa410bb9937e224a61f0e\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=34\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=18\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=0\B_WIDTH=1\Y_WIDTH=1 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod$constmap:dbcddb7b4524c1c5fa25e15435f3b9049e3d7d7a$paramod$7ef3ad10a9687337780288b591d283c11b1fd9ea\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=27\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=29\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=29\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=8\Y_WIDTH=8 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=13 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=7\S_WIDTH=10 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=31 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=64\S_WIDTH=31 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=1\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=1\Y_WIDTH=16 for cells of type $alu.
Using extmapper simplemap for cells of type $dff.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=17\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=1\Y_WIDTH=14 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=8\S_WIDTH=7 for cells of type $pmux.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=16 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=8 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=14 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=30 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=1 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=33 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=64 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=31 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=34 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=34\B_WIDTH=34\Y_WIDTH=34 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=34 for cells of type $lcu.
No more expansions possible.
<suppressed ~11227 debug messages>

54.22. Executing OPT pass (performing simple optimizations).

54.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~21038 debug messages>

54.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~16032 debug messages>
Removed a total of 5344 cells.

54.22.3. Executing OPT_DFF pass (perform DFF optimizations).

54.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 9204 unused cells and 10158 unused wires.
<suppressed ~9205 debug messages>

54.22.5. Finished fast OPT passes.

54.23. Executing ABC pass (technology mapping using ABC).

54.23.1. Extracting gate netlist of module `\IBEX_SoC' to `<abc-temp-dir>/input.blif'..
Extracted 28661 gates and 38032 wires to a netlist network with 9369 inputs and 1940 outputs.

54.23.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

54.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      767
ABC RESULTS:            ANDNOT cells:     8121
ABC RESULTS:               MUX cells:     8820
ABC RESULTS:              NAND cells:      569
ABC RESULTS:               NOR cells:     1045
ABC RESULTS:               NOT cells:     1917
ABC RESULTS:                OR cells:     5831
ABC RESULTS:             ORNOT cells:      714
ABC RESULTS:              XNOR cells:      431
ABC RESULTS:               XOR cells:     1067
ABC RESULTS:        internal signals:    26723
ABC RESULTS:           input signals:     9369
ABC RESULTS:          output signals:     1940
Removing temp directory.

54.24. Executing OPT pass (performing simple optimizations).

54.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.
<suppressed ~4493 debug messages>

54.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
<suppressed ~129 debug messages>
Removed a total of 43 cells.

54.24.3. Executing OPT_DFF pass (perform DFF optimizations).

54.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 21 unused cells and 16390 unused wires.
<suppressed ~568 debug messages>

54.24.5. Finished fast OPT passes.

54.25. Executing HIERARCHY pass (managing design hierarchy).

54.25.1. Analyzing design hierarchy..
Top module:  \IBEX_SoC

54.25.2. Analyzing design hierarchy..
Top module:  \IBEX_SoC
Removed 0 unused modules.

54.26. Printing statistics.

=== IBEX_SoC ===

   Number of wires:              30163
   Number of wire bits:          56684
   Number of public wires:        1899
   Number of public wire bits:   28416
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              38632
     $_ANDNOT_                    8112
     $_AND_                        766
     $_DFFE_NN0P_                   64
     $_DFFE_PN0N_                   31
     $_DFFE_PN0P_                 2159
     $_DFFE_PN1P_                   30
     $_DFFE_PN_                     81
     $_DFFE_PP_                   6908
     $_DFF_NN0_                      7
     $_DFF_NN1_                      7
     $_DFF_PN0_                    111
     $_DFF_PN1_                      8
     $_DFF_P_                        2
     $_DLATCH_N_                     6
     $_MUX_                       8819
     $_NAND_                       568
     $_NOR_                       1026
     $_NOT_                       1896
     $_ORNOT_                      712
     $_OR_                        5821
     $_XNOR_                       431
     $_XOR_                       1067

54.27. Executing CHECK pass (checking for obvious problems).
checking module IBEX_SoC..
found and reported 0 problems.

55. Executing SHARE pass (SAT-based resource sharing).

56. Executing OPT pass (performing simple optimizations).

56.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

56.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

56.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

56.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

56.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

56.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$46427 ($_DFF_PN0_) from module IBEX_SoC (D = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [0], Q = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [2]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$46426 ($_DFF_PN0_) from module IBEX_SoC (D = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [2], Q = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [1]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$29397 ($_DFF_PN0_) from module IBEX_SoC (D = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [1], Q = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [5]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$29394 ($_DFF_PN0_) from module IBEX_SoC (D = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [4], Q = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [2]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$29392 ($_DFF_PN1_) from module IBEX_SoC (D = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [3], Q = \uut.IBEX.core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [0]).

56.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 5 unused cells and 5 unused wires.
<suppressed ~6 debug messages>

56.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

56.9. Rerunning OPT passes. (Maybe there is more to do..)

56.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \IBEX_SoC..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

56.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \IBEX_SoC.
Performed a total of 0 changes.

56.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\IBEX_SoC'.
Removed a total of 0 cells.

56.13. Executing OPT_DFF pass (perform DFF optimizations).

56.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..

56.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module IBEX_SoC.

56.16. Finished OPT passes. (There is nothing left to do.)

57. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 0 unused cells and 1354 unused wires.
<suppressed ~1354 debug messages>

58. Printing statistics.

=== IBEX_SoC ===

   Number of wires:              28804
   Number of wire bits:          38994
   Number of public wires:         545
   Number of public wire bits:   10731
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              38627
     $_ANDNOT_                    8112
     $_AND_                        766
     $_DFFE_NN0P_                   64
     $_DFFE_PN0N_                   31
     $_DFFE_PN0P_                 2163
     $_DFFE_PN1P_                   31
     $_DFFE_PN_                     81
     $_DFFE_PP_                   6908
     $_DFF_NN0_                      7
     $_DFF_NN1_                      7
     $_DFF_PN0_                    107
     $_DFF_PN1_                      7
     $_DFF_P_                        2
     $_DLATCH_N_                     6
     $_MUX_                       8814
     $_NAND_                       568
     $_NOR_                       1026
     $_NOT_                       1896
     $_ORNOT_                      712
     $_OR_                        5821
     $_XNOR_                       431
     $_XOR_                       1067

59. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_4 (noninv, pins=3, area=23.77) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_4 (noninv, pins=4, area=28.78) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_4 (noninv, pins=4, area=30.03) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_4 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_4 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_4 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

59.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\IBEX_SoC':
  mapped 2372 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_4 cells.
  mapped 45 $_DFF_PN1_ cells to \sky130_fd_sc_hd__dfstp_4 cells.
  mapped 6991 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_4 cells.

60. Printing statistics.

=== IBEX_SoC ===

   Number of wires:              38160
   Number of wire bits:          48350
   Number of public wires:         545
   Number of public wire bits:   10731
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              47983
     $_ANDNOT_                    8112
     $_AND_                        766
     $_DLATCH_N_                     6
     $_MUX_                      18092
     $_NAND_                       568
     $_NOR_                       1026
     $_NOT_                       1974
     $_ORNOT_                      712
     $_OR_                        5821
     $_XNOR_                       431
     $_XOR_                       1067
     sky130_fd_sc_hd__dfrtp_4     2372
     sky130_fd_sc_hd__dfstp_4       45
     sky130_fd_sc_hd__dfxtp_4     6991

61. Executing ABC pass (technology mapping using ABC).

61.1. Extracting gate netlist of module `\IBEX_SoC' to `/tmp/yosys-abc-xL0QBS/input.blif'..
Extracted 38569 gates and 47979 wires to a netlist network with 9409 inputs and 9486 outputs.

61.1.1. Executing ABC.
Running ABC command: /build/bin/yosys-abc -s -f /tmp/yosys-abc-xL0QBS/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-xL0QBS/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-xL0QBS/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/IBEX_SoC/runs/17-12_18-16/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.02 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/IBEX_SoC/runs/17-12_18-16/tmp/trimmed.lib" has 43 cells (6 skipped: 6 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.02 sec
ABC: Memory =    1.92 MB. Time =     0.02 sec
ABC: + read_constr -v /openLANE_flow/designs/IBEX_SoC/runs/17-12_18-16/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/IBEX_SoC/runs/17-12_18-16/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 10000 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + map -p -a -B 0.2 -A 0.9 -M 0 
ABC: The cell areas are multiplied by the factor: <num_fanins> ^ (0.90).
ABC: The cell delays are multiplied by the factor: <num_fanins> ^ (0.20).
ABC: + retime -D -D 10000 
ABC: + buffer -N 5 -S 1000.0 
ABC: + upsize -D 10000 
ABC: Current delay (9900.30 ps) does not exceed the target delay (10000.00 ps). Upsizing is not performed.
ABC: + dnsize -D 10000 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =  61758 ( 32.8 %)   Cap = 14.3 ff (  0.5 %)   Area =   741062.00 ( 98.4 %)   Delay = 10020.55 ps  ( 38.2 %)               
ABC: Path  0 --    3223 : 0    4 pi                        A =   0.00  Df =  12.1   -8.2 ps  S =  25.2 ps  Cin =  0.0 ff  Cout =   9.8 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --   19030 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df = 341.3 -140.1 ps  S = 415.7 ps  Cin =  2.1 ff  Cout =  35.2 ff  Cmax = 130.0 ff  G = 1597  
ABC: Path  2 --   19712 : 1    5 sky130_fd_sc_hd__buf_4    A =   7.51  Df = 561.1 -146.4 ps  S =  72.0 ps  Cin =  2.4 ff  Cout =  19.3 ff  Cmax = 561.2 ff  G =  763  
ABC: Path  3 --   19713 : 1    5 sky130_fd_sc_hd__buf_4    A =   7.51  Df = 736.5 -152.9 ps  S = 117.6 ps  Cin =  2.4 ff  Cout =  39.2 ff  Cmax = 561.2 ff  G = 1555  
ABC: Path  4 --   19714 : 1    5 sky130_fd_sc_hd__buf_4    A =   7.51  Df = 928.7 -168.1 ps  S = 117.6 ps  Cin =  2.4 ff  Cout =  39.2 ff  Cmax = 561.2 ff  G = 1555  
ABC: Path  5 --   19715 : 1    5 sky130_fd_sc_hd__buf_4    A =   7.51  Df =1073.8 -162.5 ps  S =  54.5 ps  Cin =  2.4 ff  Cout =  14.8 ff  Cmax = 561.2 ff  G =  587  
ABC: Path  6 --   19716 : 1    5 sky130_fd_sc_hd__buf_4    A =   7.51  Df =1227.0 -157.3 ps  S =  96.0 ps  Cin =  2.4 ff  Cout =  30.9 ff  Cmax = 561.2 ff  G = 1226  
ABC: Path  7 --   19717 : 1    5 sky130_fd_sc_hd__buf_4    A =   7.51  Df =1411.2 -168.1 ps  S = 117.6 ps  Cin =  2.4 ff  Cout =  39.2 ff  Cmax = 561.2 ff  G = 1555  
ABC: Path  8 --   19718 : 1    5 sky130_fd_sc_hd__buf_4    A =   7.51  Df =1582.2 -173.1 ps  S =  88.7 ps  Cin =  2.4 ff  Cout =  28.0 ff  Cmax = 561.2 ff  G = 1114  
ABC: Path  9 --   20670 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =1826.7 -253.6 ps  S = 263.7 ps  Cin =  2.1 ff  Cout =  21.8 ff  Cmax = 130.0 ff  G =  987  
ABC: Path 10 --   20671 : 1    5 sky130_fd_sc_hd__buf_4    A =   7.51  Df =2033.8 -271.7 ps  S =  85.5 ps  Cin =  2.4 ff  Cout =  25.9 ff  Cmax = 561.2 ff  G = 1028  
ABC: Path 11 --   20672 : 1    5 sky130_fd_sc_hd__buf_4    A =   7.51  Df =2192.6 -269.8 ps  S =  88.1 ps  Cin =  2.4 ff  Cout =  27.8 ff  Cmax = 561.2 ff  G = 1115  
ABC: Path 12 --   20673 : 1    5 sky130_fd_sc_hd__buf_4    A =   7.51  Df =2386.6 -284.7 ps  S = 134.8 ps  Cin =  2.4 ff  Cout =  45.8 ff  Cmax = 561.2 ff  G = 1819  
ABC: Path 13 --   20674 : 2    1 sky130_fd_sc_hd__nor2_4   A =  11.26  Df =2437.2 -231.0 ps  S =  65.1 ps  Cin =  8.7 ff  Cout =   4.8 ff  Cmax = 251.8 ff  G =   50  
ABC: Path 14 --   20675 : 4    1 sky130_fd_sc_hd__a211o_4  A =  17.52  Df =2691.7  -48.9 ps  S =  48.8 ps  Cin =  4.6 ff  Cout =   4.5 ff  Cmax = 559.4 ff  G =   94  
ABC: Path 15 --   20703 : 4    1 sky130_fd_sc_hd__a211o_4  A =  17.52  Df =3005.3 -255.1 ps  S =  48.9 ps  Cin =  4.6 ff  Cout =   4.6 ff  Cmax = 559.4 ff  G =   95  
ABC: Path 16 --   20723 : 3    4 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =3237.7 -212.7 ps  S =  92.2 ps  Cin =  4.5 ff  Cout =  29.2 ff  Cmax = 568.6 ff  G =  621  
ABC: Path 17 --   33429 : 3    1 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =3291.5 -205.8 ps  S =  49.4 ps  Cin =  8.7 ff  Cout =   2.6 ff  Cmax = 469.7 ff  G =   28  
ABC: Path 18 --   33430 : 3    2 sky130_fd_sc_hd__a21boi_4 A =  18.77  Df =3524.4 -285.4 ps  S = 196.7 ps  Cin =  6.8 ff  Cout =  20.7 ff  Cmax = 215.2 ff  G =  292  
ABC: Path 19 --   34081 : 1    5 sky130_fd_sc_hd__inv_8    A =  11.26  Df =3580.7 -271.3 ps  S =  49.2 ps  Cin = 17.7 ff  Cout =  24.8 ff  Cmax =1035.5 ff  G =  136  
ABC: Path 20 --   34139 : 2    1 sky130_fd_sc_hd__and2_4   A =   8.76  Df =3709.2 -280.7 ps  S =  30.1 ps  Cin =  2.4 ff  Cout =   2.2 ff  Cmax = 539.3 ff  G =   88  
ABC: Path 21 --   34140 : 1    3 sky130_fd_sc_hd__buf_1    A =   3.75  Df =3918.7 -149.4 ps  S = 429.7 ps  Cin =  2.1 ff  Cout =  36.4 ff  Cmax = 130.0 ff  G = 1653  
ABC: Path 22 --   34253 : 2    2 sky130_fd_sc_hd__xnor2_4  A =  27.53  Df =4218.9  -89.4 ps  S = 244.5 ps  Cin = 16.3 ff  Cout =  25.0 ff  Cmax = 211.5 ff  G =  145  
ABC: Path 23 --   34254 : 2    2 sky130_fd_sc_hd__xor2_4   A =  27.53  Df =4511.5 -179.2 ps  S = 233.5 ps  Cin = 16.2 ff  Cout =  25.2 ff  Cmax = 219.7 ff  G =  151  
ABC: Path 24 --   34389 : 2    2 sky130_fd_sc_hd__xnor2_4  A =  27.53  Df =4734.2 -187.0 ps  S = 215.5 ps  Cin = 16.3 ff  Cout =  20.8 ff  Cmax = 211.5 ff  G =  124  
ABC: Path 25 --   34422 : 3    2 sky130_fd_sc_hd__maj3_4   A =  13.76  Df =5102.9 -267.2 ps  S =  71.0 ps  Cin =  4.5 ff  Cout =  11.3 ff  Cmax = 534.7 ff  G =  242  
ABC: Path 26 --   34423 : 2    1 sky130_fd_sc_hd__or2_4    A =   8.76  Df =5326.9 -141.7 ps  S =  41.8 ps  Cin =  2.4 ff  Cout =   2.2 ff  Cmax = 514.5 ff  G =   88  
ABC: Path 27 --   34424 : 1    4 sky130_fd_sc_hd__buf_1    A =   3.75  Df =5509.7  -60.1 ps  S = 321.1 ps  Cin =  2.1 ff  Cout =  26.9 ff  Cmax = 130.0 ff  G = 1238  
ABC: Path 28 --   34477 : 3    1 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =5751.9 -123.1 ps  S =  43.8 ps  Cin =  4.5 ff  Cout =   8.8 ff  Cmax = 568.6 ff  G =  188  
ABC: Path 29 --   34478 : 2    2 sky130_fd_sc_hd__nand2_4  A =  11.26  Df =5834.5 -110.0 ps  S =  91.8 ps  Cin =  8.7 ff  Cout =  22.7 ff  Cmax = 530.1 ff  G =  250  
ABC: Path 30 --   34654 : 2    1 sky130_fd_sc_hd__xor2_4   A =  27.53  Df =6062.4   -9.5 ps  S = 172.5 ps  Cin = 16.2 ff  Cout =  15.8 ff  Cmax = 219.7 ff  G =   92  
ABC: Path 31 --   34655 : 2    2 sky130_fd_sc_hd__xor2_4   A =  27.53  Df =6295.2  -60.7 ps  S = 200.2 ps  Cin = 16.2 ff  Cout =  20.2 ff  Cmax = 219.7 ff  G =  118  
ABC: Path 32 --   35455 : 2    1 sky130_fd_sc_hd__xor2_4   A =  27.53  Df =6525.9 -122.4 ps  S = 172.5 ps  Cin = 16.2 ff  Cout =  15.8 ff  Cmax = 219.7 ff  G =   92  
ABC: Path 33 --   35456 : 2    2 sky130_fd_sc_hd__xor2_4   A =  27.53  Df =6725.1 -161.4 ps  S = 148.4 ps  Cin = 16.2 ff  Cout =  11.3 ff  Cmax = 219.7 ff  G =   67  
ABC: Path 34 --   35457 : 2    1 sky130_fd_sc_hd__or2_4    A =   8.76  Df =6855.9  -74.4 ps  S =  41.8 ps  Cin =  2.4 ff  Cout =   2.2 ff  Cmax = 514.5 ff  G =   88  
ABC: Path 35 --   35458 : 1    3 sky130_fd_sc_hd__buf_1    A =   3.75  Df =7121.7 -157.4 ps  S = 323.1 ps  Cin =  2.1 ff  Cout =  27.1 ff  Cmax = 130.0 ff  G = 1241  
ABC: Path 36 --   35467 : 5    5 sky130_fd_sc_hd__a41oi_4  A =  27.53  Df =7546.5 -176.6 ps  S = 354.3 ps  Cin =  8.4 ff  Cout =  34.3 ff  Cmax = 194.1 ff  G =  382  
ABC: Path 37 --   35468 : 3    1 sky130_fd_sc_hd__or3_4    A =  11.26  Df =7758.3   -8.6 ps  S =  73.9 ps  Cin =  2.4 ff  Cout =   8.8 ff  Cmax = 531.9 ff  G =  368  
ABC: Path 38 --   35473 : 3    5 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =7899.8  -15.6 ps  S = 170.2 ps  Cin =  8.7 ff  Cout =  45.1 ff  Cmax = 469.7 ff  G =  501  
ABC: Path 39 --   35539 : 3    2 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =7981.2   -0.5 ps  S =  66.9 ps  Cin =  8.7 ff  Cout =   6.7 ff  Cmax = 469.7 ff  G =   75  
ABC: Path 40 --   35545 : 4    2 sky130_fd_sc_hd__and4_4   A =  11.26  Df =8185.4  -48.9 ps  S =  59.8 ps  Cin =  2.4 ff  Cout =   7.1 ff  Cmax = 531.9 ff  G =  283  
ABC: Path 41 --   35546 : 3    1 sky130_fd_sc_hd__or3_4    A =  11.26  Df =8468.8 -162.1 ps  S =  73.4 ps  Cin =  2.4 ff  Cout =   8.8 ff  Cmax = 531.9 ff  G =  363  
ABC: Path 42 --   35549 : 2    3 sky130_fd_sc_hd__nand2_4  A =  11.26  Df =8574.7 -201.5 ps  S =  98.2 ps  Cin =  8.7 ff  Cout =  26.8 ff  Cmax = 530.1 ff  G =  294  
ABC: Path 43 --   35551 : 2    1 sky130_fd_sc_hd__nand2_4  A =  11.26  Df =8620.4 -192.0 ps  S =  47.1 ps  Cin =  8.7 ff  Cout =   4.7 ff  Cmax = 530.1 ff  G =   51  
ABC: Path 44 --   35552 : 3    3 sky130_fd_sc_hd__o21a_4   A =  15.01  Df =8756.7 -177.5 ps  S =  84.7 ps  Cin =  4.6 ff  Cout =  22.8 ff  Cmax = 510.0 ff  G =  471  
ABC: Path 45 --   35553 : 2    2 sky130_fd_sc_hd__nor2_4   A =  11.26  Df =8930.0 -290.9 ps  S = 195.0 ps  Cin =  8.7 ff  Cout =  27.5 ff  Cmax = 251.8 ff  G =  299  
ABC: Path 46 --   35554 : 1    1 sky130_fd_sc_hd__inv_8    A =  11.26  Df =8965.7 -269.9 ps  S =  36.3 ps  Cin = 17.7 ff  Cout =   8.8 ff  Cmax =1035.5 ff  G =   49  
ABC: Path 47 --   35562 : 3    2 sky130_fd_sc_hd__nand3_4  A =  17.52  Df =9030.6 -133.1 ps  S =  79.9 ps  Cin =  8.7 ff  Cout =  13.5 ff  Cmax = 469.7 ff  G =  149  
ABC: Path 48 --   35581 : 3    1 sky130_fd_sc_hd__a21oi_4  A =  16.27  Df =9088.8  -51.3 ps  S = 120.6 ps  Cin =  8.8 ff  Cout =   9.0 ff  Cmax = 221.6 ff  G =   95  
ABC: Path 49 --   35582 : 3    1 sky130_fd_sc_hd__nor3_4   A =  16.27  Df =9194.6 -113.2 ps  S = 126.4 ps  Cin =  8.7 ff  Cout =   4.7 ff  Cmax = 153.8 ff  G =   50  
ABC: Path 50 --   35766 : 4    3 sky130_fd_sc_hd__a2bb2o_4 A =  20.02  Df =9422.6 -149.0 ps  S =  40.4 ps  Cin =  4.6 ff  Cout =   6.6 ff  Cmax = 502.6 ff  G =  136  
ABC: Path 51 --   40775 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =9543.0 -118.5 ps  S = 148.7 ps  Cin =  2.1 ff  Cout =  11.8 ff  Cmax = 130.0 ff  G =  538  
ABC: Path 52 --   41368 : 1    5 sky130_fd_sc_hd__buf_1    A =   3.75  Df =9679.5  -76.0 ps  S = 150.9 ps  Cin =  2.1 ff  Cout =  12.0 ff  Cmax = 130.0 ff  G =  551  
ABC: Path 53 --   41458 : 2    1 sky130_fd_sc_hd__and2_4   A =   8.76  Df =9823.3  -57.8 ps  S =  39.3 ps  Cin =  2.4 ff  Cout =   4.8 ff  Cmax = 539.3 ff  G =  186  
ABC: Path 54 --   41459 : 3    1 sky130_fd_sc_hd__a21o_4   A =  15.01  Df =10020.5 -152.9 ps  S =  64.6 ps  Cin =  4.5 ff  Cout =  17.6 ff  Cmax = 568.6 ff  G =  389  
ABC: Start-point = pi3222 (\uut.IBEX.core.gen_regfile_ff.register_file_i.raddr_b_i [0]).  End-point = po1077 ($auto$rtlil.cc:2290:MuxGate$153484).
ABC: + print_stats -m 
ABC: netlist                       : i/o = 9409/ 9486  lat =    0  nd = 61758  edge = 153184  area =329320.25  delay =7161.35  lev = 63
ABC: + write_blif /tmp/yosys-abc-xL0QBS/output.blif 

61.1.2. Re-integrating ABC results.
ABC RESULTS:          _const0_ cells:        1
ABC RESULTS:   sky130_fd_sc_hd__a2111o_4 cells:      360
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_4 cells:      446
ABC RESULTS:   sky130_fd_sc_hd__a211o_4 cells:     2515
ABC RESULTS:   sky130_fd_sc_hd__a21bo_4 cells:       83
ABC RESULTS:   sky130_fd_sc_hd__a21boi_4 cells:      268
ABC RESULTS:   sky130_fd_sc_hd__a21o_4 cells:     6469
ABC RESULTS:   sky130_fd_sc_hd__a21oi_4 cells:     1030
ABC RESULTS:   sky130_fd_sc_hd__a22oi_4 cells:      155
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_4 cells:      127
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_4 cells:       60
ABC RESULTS:   sky130_fd_sc_hd__a32o_4 cells:      135
ABC RESULTS:   sky130_fd_sc_hd__a32oi_4 cells:      139
ABC RESULTS:   sky130_fd_sc_hd__a41o_4 cells:      173
ABC RESULTS:   sky130_fd_sc_hd__a41oi_4 cells:      202
ABC RESULTS:   sky130_fd_sc_hd__and2_4 cells:     1359
ABC RESULTS:   sky130_fd_sc_hd__and3_4 cells:      863
ABC RESULTS:   sky130_fd_sc_hd__and4_4 cells:     5522
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:    16947
ABC RESULTS:   sky130_fd_sc_hd__buf_4 cells:      980
ABC RESULTS:   sky130_fd_sc_hd__buf_8 cells:        3
ABC RESULTS:   sky130_fd_sc_hd__inv_8 cells:     2332
ABC RESULTS:   sky130_fd_sc_hd__maj3_4 cells:      141
ABC RESULTS:   sky130_fd_sc_hd__nand2_4 cells:     1495
ABC RESULTS:   sky130_fd_sc_hd__nand3_4 cells:     2769
ABC RESULTS:   sky130_fd_sc_hd__nand4_4 cells:     3135
ABC RESULTS:   sky130_fd_sc_hd__nor2_4 cells:     2920
ABC RESULTS:   sky130_fd_sc_hd__nor3_4 cells:     1083
ABC RESULTS:   sky130_fd_sc_hd__nor4_4 cells:      310
ABC RESULTS:   sky130_fd_sc_hd__o21a_4 cells:     5657
ABC RESULTS:   sky130_fd_sc_hd__o21ai_4 cells:     2712
ABC RESULTS:   sky130_fd_sc_hd__o22a_4 cells:       61
ABC RESULTS:   sky130_fd_sc_hd__o32a_4 cells:       25
ABC RESULTS:   sky130_fd_sc_hd__o32ai_4 cells:       90
ABC RESULTS:   sky130_fd_sc_hd__o41a_4 cells:       82
ABC RESULTS:   sky130_fd_sc_hd__o41ai_4 cells:       23
ABC RESULTS:   sky130_fd_sc_hd__or2_4 cells:      170
ABC RESULTS:   sky130_fd_sc_hd__or3_4 cells:       50
ABC RESULTS:   sky130_fd_sc_hd__or4_4 cells:        6
ABC RESULTS:   sky130_fd_sc_hd__xnor2_4 cells:      355
ABC RESULTS:   sky130_fd_sc_hd__xor2_4 cells:      505
ABC RESULTS:        internal signals:    29084
ABC RESULTS:           input signals:     9409
ABC RESULTS:          output signals:     9486
Removing temp directory.

62. Executing SETUNDEF pass (replace undef values with defined constants).

63. Executing HILOMAP pass (mapping to constant drivers).

64. Executing SPLITNETS pass (splitting up multi-bit signals).

65. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \IBEX_SoC..
Removed 260 unused cells and 48594 unused wires.
<suppressed ~1521 debug messages>

66. Executing INSBUF pass (insert buffer cells for connected wires).

67. Executing CHECK pass (checking for obvious problems).
checking module IBEX_SoC..
found and reported 0 problems.

68. Printing statistics.

=== IBEX_SoC ===

   Number of wires:              71075
   Number of wire bits:          71103
   Number of public wires:        9443
   Number of public wire bits:    9471
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              71091
     $_DLATCH_N_                     6
     sky130_fd_sc_hd__a2111o_4     360
     sky130_fd_sc_hd__a2111oi_4    446
     sky130_fd_sc_hd__a211o_4     2515
     sky130_fd_sc_hd__a21bo_4       83
     sky130_fd_sc_hd__a21boi_4     268
     sky130_fd_sc_hd__a21o_4      6447
     sky130_fd_sc_hd__a21oi_4     1030
     sky130_fd_sc_hd__a22oi_4      155
     sky130_fd_sc_hd__a2bb2o_4     127
     sky130_fd_sc_hd__a2bb2oi_4     60
     sky130_fd_sc_hd__a32o_4       135
     sky130_fd_sc_hd__a32oi_4      139
     sky130_fd_sc_hd__a41o_4       173
     sky130_fd_sc_hd__a41oi_4      202
     sky130_fd_sc_hd__and2_4      1359
     sky130_fd_sc_hd__and3_4       863
     sky130_fd_sc_hd__and4_4      5500
     sky130_fd_sc_hd__buf_1      16932
     sky130_fd_sc_hd__buf_4        980
     sky130_fd_sc_hd__buf_8          3
     sky130_fd_sc_hd__conb_1         5
     sky130_fd_sc_hd__dfrtp_4     2349
     sky130_fd_sc_hd__dfstp_4       45
     sky130_fd_sc_hd__dfxtp_4     6991
     sky130_fd_sc_hd__inv_8       2331
     sky130_fd_sc_hd__maj3_4       141
     sky130_fd_sc_hd__nand2_4     1495
     sky130_fd_sc_hd__nand3_4     2768
     sky130_fd_sc_hd__nand4_4     3135
     sky130_fd_sc_hd__nor2_4      2920
     sky130_fd_sc_hd__nor3_4      1083
     sky130_fd_sc_hd__nor4_4       310
     sky130_fd_sc_hd__o21a_4      5656
     sky130_fd_sc_hd__o21ai_4     2712
     sky130_fd_sc_hd__o22a_4        61
     sky130_fd_sc_hd__o32a_4        25
     sky130_fd_sc_hd__o32ai_4       90
     sky130_fd_sc_hd__o41a_4        82
     sky130_fd_sc_hd__o41ai_4       23
     sky130_fd_sc_hd__or2_4        170
     sky130_fd_sc_hd__or3_4         50
     sky130_fd_sc_hd__or4_4          6
     sky130_fd_sc_hd__xnor2_4      355
     sky130_fd_sc_hd__xor2_4       505

   Area for cell type $_DLATCH_N_ is unknown!

   Chip area for module '\IBEX_SoC': 975548.128001

69. Executing Verilog backend.
Dumping module `\IBEX_SoC'.

Warnings: 17 unique messages, 19 total
End of script. Logfile hash: 8faf39c298, CPU: user 68.62s system 0.21s, MEM: 367.78 MB peak
Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)
Time spent: 32% 2x abc (32 sec), 15% 2x write_verilog (14 sec), ...
