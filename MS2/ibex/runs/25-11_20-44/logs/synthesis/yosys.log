
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_register_file_ff.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v' to AST representation.
Generating RTLIL representation for module `\ibex_register_file_ff'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_wb_stage.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_wb_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_wb_stage'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_load_store_unit.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v' to AST representation.
Generating RTLIL representation for module `\ibex_load_store_unit'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v' to AST representation.
Generating RTLIL representation for module `\ibex_compressed_decoder'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_counter.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_counter.v' to AST representation.
Generating RTLIL representation for module `\ibex_counter'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_ex_block.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_ex_block.v' to AST representation.
Generating RTLIL representation for module `\ibex_ex_block'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_csr.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_csr.v' to AST representation.
Generating RTLIL representation for module `\ibex_csr'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_core.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_core.v' to AST representation.
Generating RTLIL representation for module `\ibex_core'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_register_file_latch.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_register_file_latch.v' to AST representation.
Generating RTLIL representation for module `\ibex_register_file_latch'.
Warning: Replacing memory \mem with list of registers. See /openLANE_flow/designs/ibex/src/ibex_register_file_latch.v:111, /openLANE_flow/designs/ibex/src/ibex_register_file_latch.v:87
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_if_stage.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_if_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_if_stage'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_branch_predict.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_branch_predict.v' to AST representation.
Generating RTLIL representation for module `\ibex_branch_predict'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_cs_registers.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_cs_registers.v' to AST representation.
Generating RTLIL representation for module `\ibex_cs_registers'.
Warning: Replacing memory \mhpmevent with list of registers. See /openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1122
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_id_stage.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_id_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_id_stage'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_icache.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_icache.v' to AST representation.
Generating RTLIL representation for module `\ibex_icache'.
Warning: Replacing memory \fill_data_q with list of registers. See /openLANE_flow/designs/ibex/src/ibex_icache.v:509
Warning: Replacing memory \fill_way_q with list of registers. See /openLANE_flow/designs/ibex/src/ibex_icache.v:496
Warning: Replacing memory \fill_addr_q with list of registers. See /openLANE_flow/designs/ibex/src/ibex_icache.v:493
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v' to AST representation.
Generating RTLIL representation for module `\ibex_fetch_fifo'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_pmp.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_pmp.v' to AST representation.
Generating RTLIL representation for module `\ibex_pmp'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_controller.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_controller.v' to AST representation.
Generating RTLIL representation for module `\ibex_controller'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v' to AST representation.
Generating RTLIL representation for module `\ibex_multdiv_fast'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v' to AST representation.
Generating RTLIL representation for module `\ibex_prefetch_buffer'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_alu.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_alu.v' to AST representation.
Generating RTLIL representation for module `\ibex_alu'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_dummy_instr.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_dummy_instr.v' to AST representation.
Generating RTLIL representation for module `\ibex_dummy_instr'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_multdiv_slow.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_multdiv_slow.v' to AST representation.
Generating RTLIL representation for module `\ibex_multdiv_slow'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_decoder.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_decoder.v' to AST representation.
Generating RTLIL representation for module `\ibex_decoder'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_core_tracing.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_core_tracing.v' to AST representation.
Generating RTLIL representation for module `\ibex_core_tracing'.
Successfully finished Verilog frontend.

25. Executing HIERARCHY pass (managing design hierarchy).

25.1. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     \ibex_register_file_ff
Used module:     \ibex_cs_registers
Used module:         \ibex_counter
Used module:         \ibex_csr
Used module:     \ibex_wb_stage
Used module:     \ibex_load_store_unit
Used module:     \ibex_ex_block
Used module:         \ibex_multdiv_fast
Used module:         \ibex_alu
Used module:     \ibex_id_stage
Used module:         \ibex_controller
Used module:         \ibex_decoder
Used module:     \ibex_if_stage
Used module:         \ibex_prefetch_buffer
Used module:             \ibex_fetch_fifo
Used module:         \ibex_compressed_decoder
Parameter \RV32M = 2

25.2. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_multdiv_fast'.
Parameter \RV32M = 2
Generating RTLIL representation for module `$paramod\ibex_multdiv_fast\RV32M=2'.
Parameter \RV32B = 0

25.3. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_alu'.
Parameter \RV32B = 0
Generating RTLIL representation for module `$paramod\ibex_alu\RV32B=0'.
Parameter \RV32E = 1'0
Parameter \DataWidth = 32
Parameter \DummyInstructions = 1'0

25.4. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_register_file_ff'.
Parameter \RV32E = 1'0
Parameter \DataWidth = 32
Parameter \DummyInstructions = 1'0
Generating RTLIL representation for module `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0'.
Parameter \DbgTriggerEn = 1'0
Parameter \DbgHwBreakNum = 1
Parameter \DataIndTiming = 1'0
Parameter \DummyInstructions = 1'0
Parameter \ShadowCSR = 1'0
Parameter \ICache = 1'0
Parameter \MHPMCounterNum = 0
Parameter \MHPMCounterWidth = 40
Parameter \PMPEnable = 1'0
Parameter \PMPGranularity = 0
Parameter \PMPNumRegions = 4
Parameter \RV32E = 1'0
Parameter \RV32M = 2

25.5. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_cs_registers'.
Parameter \DbgTriggerEn = 1'0
Parameter \DbgHwBreakNum = 1
Parameter \DataIndTiming = 1'0
Parameter \DummyInstructions = 1'0
Parameter \ShadowCSR = 1'0
Parameter \ICache = 1'0
Parameter \MHPMCounterNum = 0
Parameter \MHPMCounterWidth = 40
Parameter \PMPEnable = 1'0
Parameter \PMPGranularity = 0
Parameter \PMPNumRegions = 4
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Generating RTLIL representation for module `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers'.
Warning: Replacing memory \mhpmevent with list of registers. See /openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1122
Parameter \WritebackStage = 1'0

25.6. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_wb_stage'.
Parameter \WritebackStage = 1'0
Generating RTLIL representation for module `$paramod\ibex_wb_stage\WritebackStage=1'0'.
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0

25.7. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_ex_block'.
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0
Generating RTLIL representation for module `$paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \DataIndTiming = 1'0
Parameter \BranchTargetALU = 1'0
Parameter \SpecBranch = 1'0
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0

25.8. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_id_stage'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \DataIndTiming = 1'0
Parameter \BranchTargetALU = 1'0
Parameter \SpecBranch = 1'0
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage'.
Parameter \DmHaltAddr = 437323776
Parameter \DmExceptionAddr = 437323784
Parameter \DummyInstructions = 1'0
Parameter \ICache = 1'0
Parameter \ICacheECC = 1'0
Parameter \PCIncrCheck = 1'0
Parameter \BranchPredictor = 1'0

25.9. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_if_stage'.
Parameter \DmHaltAddr = 437323776
Parameter \DmExceptionAddr = 437323784
Parameter \DummyInstructions = 1'0
Parameter \ICache = 1'0
Parameter \ICacheECC = 1'0
Parameter \PCIncrCheck = 1'0
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage'.
ERROR: Module `\prim_clock_gating' referenced in module `\ibex_core' in cell `\core_clock_gate_i' is not part of the design.
