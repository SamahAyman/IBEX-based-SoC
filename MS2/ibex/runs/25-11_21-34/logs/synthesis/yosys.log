
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Wolf <claire@symbioticeda.com>          |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)

[TCL: yosys -import] Command name collision: found pre-existing command `cd' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `eval' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `exec' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `read' -> skip.
[TCL: yosys -import] Command name collision: found pre-existing command `trace' -> skip.

1. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_register_file_ff.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v' to AST representation.
Generating RTLIL representation for module `\ibex_register_file_ff'.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_wb_stage.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_wb_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_wb_stage'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_load_store_unit.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v' to AST representation.
Generating RTLIL representation for module `\ibex_load_store_unit'.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v' to AST representation.
Generating RTLIL representation for module `\ibex_compressed_decoder'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_counter.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_counter.v' to AST representation.
Generating RTLIL representation for module `\ibex_counter'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_ex_block.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_ex_block.v' to AST representation.
Generating RTLIL representation for module `\ibex_ex_block'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_csr.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_csr.v' to AST representation.
Generating RTLIL representation for module `\ibex_csr'.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_core.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_core.v' to AST representation.
Generating RTLIL representation for module `\ibex_core'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_register_file_latch.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_register_file_latch.v' to AST representation.
Generating RTLIL representation for module `\ibex_register_file_latch'.
Warning: Replacing memory \mem with list of registers. See /openLANE_flow/designs/ibex/src/ibex_register_file_latch.v:111, /openLANE_flow/designs/ibex/src/ibex_register_file_latch.v:87
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_if_stage.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_if_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_if_stage'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_branch_predict.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_branch_predict.v' to AST representation.
Generating RTLIL representation for module `\ibex_branch_predict'.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_cs_registers.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_cs_registers.v' to AST representation.
Generating RTLIL representation for module `\ibex_cs_registers'.
Warning: Replacing memory \mhpmevent with list of registers. See /openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1122
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_id_stage.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_id_stage.v' to AST representation.
Generating RTLIL representation for module `\ibex_id_stage'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_icache.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_icache.v' to AST representation.
Generating RTLIL representation for module `\ibex_icache'.
Warning: Replacing memory \fill_data_q with list of registers. See /openLANE_flow/designs/ibex/src/ibex_icache.v:509
Warning: Replacing memory \fill_way_q with list of registers. See /openLANE_flow/designs/ibex/src/ibex_icache.v:496
Warning: Replacing memory \fill_addr_q with list of registers. See /openLANE_flow/designs/ibex/src/ibex_icache.v:493
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v' to AST representation.
Generating RTLIL representation for module `\ibex_fetch_fifo'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_pmp.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_pmp.v' to AST representation.
Generating RTLIL representation for module `\ibex_pmp'.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_controller.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_controller.v' to AST representation.
Generating RTLIL representation for module `\ibex_controller'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v' to AST representation.
Generating RTLIL representation for module `\ibex_multdiv_fast'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v' to AST representation.
Generating RTLIL representation for module `\ibex_prefetch_buffer'.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_alu.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_alu.v' to AST representation.
Generating RTLIL representation for module `\ibex_alu'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_dummy_instr.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_dummy_instr.v' to AST representation.
Generating RTLIL representation for module `\ibex_dummy_instr'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/prim_clock_gating.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/prim_clock_gating.v' to AST representation.
Generating RTLIL representation for module `\prim_clock_gating'.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_multdiv_slow.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_multdiv_slow.v' to AST representation.
Generating RTLIL representation for module `\ibex_multdiv_slow'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_decoder.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_decoder.v' to AST representation.
Generating RTLIL representation for module `\ibex_decoder'.
Successfully finished Verilog frontend.

25. Executing Verilog-2005 frontend: /openLANE_flow/designs/ibex/src/ibex_core_tracing.v
Parsing Verilog input from `/openLANE_flow/designs/ibex/src/ibex_core_tracing.v' to AST representation.
Generating RTLIL representation for module `\ibex_core_tracing'.
Successfully finished Verilog frontend.

26. Executing HIERARCHY pass (managing design hierarchy).

26.1. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     \ibex_register_file_ff
Used module:     \ibex_cs_registers
Used module:         \ibex_counter
Used module:         \ibex_csr
Used module:     \ibex_wb_stage
Used module:     \ibex_load_store_unit
Used module:     \ibex_ex_block
Used module:         \ibex_multdiv_fast
Used module:         \ibex_alu
Used module:     \ibex_id_stage
Used module:         \ibex_controller
Used module:         \ibex_decoder
Used module:     \ibex_if_stage
Used module:         \ibex_prefetch_buffer
Used module:             \ibex_fetch_fifo
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating
Parameter \RV32M = 2

26.2. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_multdiv_fast'.
Parameter \RV32M = 2
Generating RTLIL representation for module `$paramod\ibex_multdiv_fast\RV32M=2'.
Parameter \RV32B = 0

26.3. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_alu'.
Parameter \RV32B = 0
Generating RTLIL representation for module `$paramod\ibex_alu\RV32B=0'.
Parameter \RV32E = 1'0
Parameter \DataWidth = 32
Parameter \DummyInstructions = 1'0

26.4. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_register_file_ff'.
Parameter \RV32E = 1'0
Parameter \DataWidth = 32
Parameter \DummyInstructions = 1'0
Generating RTLIL representation for module `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0'.
Parameter \DbgTriggerEn = 1'0
Parameter \DbgHwBreakNum = 1
Parameter \DataIndTiming = 1'0
Parameter \DummyInstructions = 1'0
Parameter \ShadowCSR = 1'0
Parameter \ICache = 1'0
Parameter \MHPMCounterNum = 0
Parameter \MHPMCounterWidth = 40
Parameter \PMPEnable = 1'0
Parameter \PMPGranularity = 0
Parameter \PMPNumRegions = 4
Parameter \RV32E = 1'0
Parameter \RV32M = 2

26.5. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_cs_registers'.
Parameter \DbgTriggerEn = 1'0
Parameter \DbgHwBreakNum = 1
Parameter \DataIndTiming = 1'0
Parameter \DummyInstructions = 1'0
Parameter \ShadowCSR = 1'0
Parameter \ICache = 1'0
Parameter \MHPMCounterNum = 0
Parameter \MHPMCounterWidth = 40
Parameter \PMPEnable = 1'0
Parameter \PMPGranularity = 0
Parameter \PMPNumRegions = 4
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Generating RTLIL representation for module `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers'.
Warning: Replacing memory \mhpmevent with list of registers. See /openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1122
Parameter \WritebackStage = 1'0

26.6. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_wb_stage'.
Parameter \WritebackStage = 1'0
Generating RTLIL representation for module `$paramod\ibex_wb_stage\WritebackStage=1'0'.
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0

26.7. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_ex_block'.
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0
Generating RTLIL representation for module `$paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \DataIndTiming = 1'0
Parameter \BranchTargetALU = 1'0
Parameter \SpecBranch = 1'0
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0

26.8. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_id_stage'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \DataIndTiming = 1'0
Parameter \BranchTargetALU = 1'0
Parameter \SpecBranch = 1'0
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage'.
Parameter \DmHaltAddr = 437323776
Parameter \DmExceptionAddr = 437323784
Parameter \DummyInstructions = 1'0
Parameter \ICache = 1'0
Parameter \ICacheECC = 1'0
Parameter \PCIncrCheck = 1'0
Parameter \BranchPredictor = 1'0

26.9. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_if_stage'.
Parameter \DmHaltAddr = 437323776
Parameter \DmExceptionAddr = 437323784
Parameter \DummyInstructions = 1'0
Parameter \ICache = 1'0
Parameter \ICacheECC = 1'0
Parameter \PCIncrCheck = 1'0
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage'.
Parameter \BranchPredictor = 1'0

26.10. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_prefetch_buffer'.
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0'.
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0

26.11. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_controller'.
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0
Generating RTLIL representation for module `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0

26.12. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_decoder'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0
Generating RTLIL representation for module `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0'.
Parameter \CounterWidth = 40

26.13. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_counter'.
Parameter \CounterWidth = 40
Generating RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \CounterWidth = 40
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=40'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0

26.14. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Generating RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \CounterWidth = 64

26.15. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_counter'.
Parameter \CounterWidth = 64
Generating RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \CounterWidth = 64
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0

26.16. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Generating RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 3
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 3'100

26.17. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 3
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 3'100
Generating RTLIL representation for module `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1073741827

26.18. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1073741827
Generating RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1

26.19. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1
Generating RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 18
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0

26.20. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 18
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Generating RTLIL representation for module `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 6'010000

26.21. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_csr'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 6'010000
Generating RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000'.
Parameter \NUM_REQS = 2

26.22. Executing AST frontend in derive mode using pre-parsed AST for module `\ibex_fetch_fifo'.
Parameter \NUM_REQS = 2
Generating RTLIL representation for module `$paramod\ibex_fetch_fifo\NUM_REQS=2'.

26.23. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         \ibex_csr
Used module:         \ibex_counter
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         \ibex_multdiv_fast
Used module:         \ibex_alu
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         \ibex_controller
Used module:         \ibex_decoder
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         \ibex_prefetch_buffer
Used module:             $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \CounterWidth = 64
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \CounterWidth = 64
Found cached RTLIL representation for module `$paramod\ibex_counter\CounterWidth=64'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 3
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 3'100
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1073741827
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 18
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 32
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 1'0
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0'.
Parameter \Width = 6
Parameter \ShadowCopy = 1'0
Parameter \ResetValue = 6'010000
Found cached RTLIL representation for module `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000'.
Parameter \RV32M = 2
Found cached RTLIL representation for module `$paramod\ibex_multdiv_fast\RV32M=2'.
Parameter \RV32B = 0
Found cached RTLIL representation for module `$paramod\ibex_alu\RV32B=0'.
Parameter \WritebackStage = 1'0
Parameter \BranchPredictor = 1'0
Found cached RTLIL representation for module `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0'.
Parameter \RV32E = 1'0
Parameter \RV32M = 2
Parameter \RV32B = 0
Parameter \BranchTargetALU = 1'0
Found cached RTLIL representation for module `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0'.
Parameter \BranchPredictor = 1'0
Found cached RTLIL representation for module `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0'.

26.24. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_counter\CounterWidth=64
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:         $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         $paramod\ibex_multdiv_fast\RV32M=2
Used module:         $paramod\ibex_alu\RV32B=0
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:         $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:             \ibex_fetch_fifo
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating
Parameter \NUM_REQS = 2
Found cached RTLIL representation for module `$paramod\ibex_fetch_fifo\NUM_REQS=2'.

26.25. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_counter\CounterWidth=64
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:         $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         $paramod\ibex_multdiv_fast\RV32M=2
Used module:         $paramod\ibex_alu\RV32B=0
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:         $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:             $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating

26.26. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_counter\CounterWidth=64
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:         $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         $paramod\ibex_multdiv_fast\RV32M=2
Used module:         $paramod\ibex_alu\RV32B=0
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:         $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:             $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating
Removing unused module `$paramod\ibex_counter\CounterWidth=40'.
Removing unused module `\ibex_core_tracing'.
Removing unused module `\ibex_decoder'.
Removing unused module `\ibex_multdiv_slow'.
Removing unused module `\ibex_dummy_instr'.
Removing unused module `\ibex_alu'.
Removing unused module `\ibex_prefetch_buffer'.
Removing unused module `\ibex_multdiv_fast'.
Removing unused module `\ibex_controller'.
Removing unused module `\ibex_pmp'.
Removing unused module `\ibex_fetch_fifo'.
Removing unused module `\ibex_icache'.
Removing unused module `\ibex_id_stage'.
Removing unused module `\ibex_cs_registers'.
Removing unused module `\ibex_branch_predict'.
Removing unused module `\ibex_if_stage'.
Removing unused module `\ibex_register_file_latch'.
Removing unused module `\ibex_csr'.
Removing unused module `\ibex_ex_block'.
Removing unused module `\ibex_counter'.
Removing unused module `\ibex_wb_stage'.
Removing unused module `\ibex_register_file_ff'.
Removed 22 unused modules.

27. Executing SYNTH pass.

27.1. Executing HIERARCHY pass (managing design hierarchy).

27.1.1. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_counter\CounterWidth=64
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:         $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         $paramod\ibex_multdiv_fast\RV32M=2
Used module:         $paramod\ibex_alu\RV32B=0
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:         $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:             $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating

27.1.2. Analyzing design hierarchy..
Top module:  \ibex_core
Used module:     $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0
Used module:     $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_counter\CounterWidth=64
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827
Used module:         $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1
Used module:         $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0
Used module:         $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000
Used module:     $paramod\ibex_wb_stage\WritebackStage=1'0
Used module:     \ibex_load_store_unit
Used module:     $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:         $paramod\ibex_multdiv_fast\RV32M=2
Used module:         $paramod\ibex_alu\RV32B=0
Used module:     $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage
Used module:         $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0
Used module:         $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0
Used module:     $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage
Used module:         $paramod\ibex_prefetch_buffer\BranchPredictor=1'0
Used module:             $paramod\ibex_fetch_fifo\NUM_REQS=2
Used module:         \ibex_compressed_decoder
Used module:     \prim_clock_gating
Removed 0 unused modules.

27.2. Executing PROC pass (convert processes to netlists).

27.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 35 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
Found and cleaned up 2 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
Found and cleaned up 2 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
Found and cleaned up 2 empty switches in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4211'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4210'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4209'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4208'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4207'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4206'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4205'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4204'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4203'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4202'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4201'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4200'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4199'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4198'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4197'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4196'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$3626'.
Cleaned up 42 empty switches.

27.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4637 in module $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4635 in module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/prim_clock_gating.v:16$3368 in module prim_clock_gating.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4633 in module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4631 in module $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4629 in module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:40$4627 in module $paramod\ibex_counter\CounterWidth=64.
Marked 3 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4624 in module $paramod\ibex_counter\CounterWidth=64.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4622 in module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:122$4689 in module $paramod\ibex_fetch_fifo\NUM_REQS=2.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4669 in module $paramod\ibex_fetch_fifo\NUM_REQS=2.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 14 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 29 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:461$4577 in module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Marked 6 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4571 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4569 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 32 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 14 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:543$4513 in module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4438 in module $paramod\ibex_prefetch_buffer\BranchPredictor=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4386 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:449$4372 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4367 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4367 in module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:863$4346 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4344 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4342 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:661$4340 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 6 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:889$4306 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4245 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4245 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4239 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4239 in module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$337 in module ibex_core.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_core.v:546$335 in module ibex_core.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1190$4158 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1089$4150 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$4137 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$4137 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:775$4134 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 9 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Removed 3 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027 in module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3877 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3875 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3873 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3871 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3869 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3867 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3865 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3863 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3861 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3859 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3857 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3855 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3853 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3851 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3849 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3847 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3845 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3843 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3841 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3839 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3837 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3835 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3833 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3831 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3829 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3827 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3825 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3823 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3821 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3819 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3817 in module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:917$3644 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:484$3643 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:472$3632 in module $paramod\ibex_alu\RV32B=0.
Marked 2 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:429$3624 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:423$3618 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:383$3610 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:377$3605 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:370$3603 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:358$3601 in module $paramod\ibex_alu\RV32B=0.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:348$3598 in module $paramod\ibex_alu\RV32B=0.
Removed 6 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$302 in module ibex_compressed_decoder.
Marked 17 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$302 in module ibex_compressed_decoder.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$283 in module ibex_load_store_unit.
Marked 8 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$254 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$254 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$249 in module ibex_load_store_unit.
Marked 5 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$249 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$244 in module ibex_load_store_unit.
Marked 5 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$244 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$243 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$243 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$241 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$239 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$237 in module ibex_load_store_unit.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$236 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$236 in module ibex_load_store_unit.
Removed 5 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$233 in module ibex_load_store_unit.
Marked 7 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$233 in module ibex_load_store_unit.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$3564 in module $paramod\ibex_multdiv_fast\RV32M=2.
Removed 1 dead cases from process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 3 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 4 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:598$3516 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$3506 in module $paramod\ibex_multdiv_fast\RV32M=2.
Marked 1 switch rules as full_case in process $proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4639 in module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.
Removed a total of 27 dead cases.

27.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 25 redundant assignments.
Promoted 471 assignments to connections.

27.2.4. Executing PROC_INIT pass (extract init attributes).

27.2.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst_ni in `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4637'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4635'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4633'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4631'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4629'.
Found async reset \rst_ni in `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:40$4627'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4622'.
Found async reset \rst_ni in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:122$4689'.
Found async reset \rst_ni in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4569'.
Found async reset \rst_ni in `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4438'.
Found async reset \rst_ni in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4386'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:863$4346'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4344'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4342'.
Found async reset \rst_ni in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:889$4306'.
Found async reset \rst_ni in `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$337'.
Found async reset \rst_ni in `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:546$335'.
Found async reset \rst_ni in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1190$4158'.
Found async reset \rst_ni in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:775$4134'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3877'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3875'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3873'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3871'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3869'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3867'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3865'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3863'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3861'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3859'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3857'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3855'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3853'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3851'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3849'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3847'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3845'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3843'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3841'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3839'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3837'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3835'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3833'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3831'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3829'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3827'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3825'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3823'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3821'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3819'.
Found async reset \rst_ni in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3817'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$283'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$241'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$239'.
Found async reset \rst_ni in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$237'.
Found async reset \rst_ni in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$3564'.
Found async reset \rst_ni in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$3506'.
Found async reset \rst_ni in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4639'.

27.2.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4637'.
     1/1: $0\rdata_q[17:0]
Creating decoders for process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4635'.
     1/1: $0\rdata_q[31:0]
Creating decoders for process `\prim_clock_gating.$proc$/openLANE_flow/designs/ibex/src/prim_clock_gating.v:16$3368'.
     1/1: $1\en_latch[0:0]
Creating decoders for process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4633'.
     1/1: $0\rdata_q[31:0]
Creating decoders for process `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4631'.
     1/1: $0\rdata_q[2:0]
Creating decoders for process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4629'.
     1/1: $0\rdata_q[31:0]
Creating decoders for process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:40$4627'.
     1/1: $0\counter_q[63:0]
Creating decoders for process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4624'.
     1/4: $2\counter_d[63:0]
     2/4: $1\counter_d[63:0]
     3/4: $1\counter_load[63:0] [63:32]
     4/4: $1\counter_load[63:0] [31:0]
Creating decoders for process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4622'.
     1/1: $0\rdata_q[5:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4720'.
     1/2: $0\err_q[2:2]
     2/2: $0\rdata_q[95:64]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4719'.
     1/2: $0\err_q[1:1]
     2/2: $0\rdata_q[63:32]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4718'.
     1/2: $0\err_q[0:0]
     2/2: $0\rdata_q[31:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:122$4689'.
     1/1: $0\valid_q[2:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:90$4676'.
     1/1: $0\instr_addr_q[30:0]
Creating decoders for process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4669'.
     1/5: $2\out_valid_o[0:0]
     2/5: $1\out_valid_o[0:0]
     3/5: $1\out_err_plus2_o[0:0]
     4/5: $1\out_err_o[0:0]
     5/5: $1\out_rdata_o[31:0]
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:443$4616'.
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
     1/46: $8\alu_op_a_mux_sel_o[1:0]
     2/46: $8\alu_op_b_mux_sel_o[0:0]
     3/46: $7\alu_op_a_mux_sel_o[1:0]
     4/46: $8\imm_b_mux_sel_o[2:0]
     5/46: $2\imm_a_mux_sel_o[0:0]
     6/46: $14\alu_operator_o[5:0]
     7/46: $7\imm_b_mux_sel_o[2:0]
     8/46: $7\alu_op_b_mux_sel_o[0:0]
     9/46: $6\alu_op_a_mux_sel_o[1:0]
    10/46: $6\alu_op_b_mux_sel_o[0:0]
    11/46: $5\alu_op_a_mux_sel_o[1:0]
    12/46: $13\alu_operator_o[5:0]
    13/46: $6\imm_b_mux_sel_o[2:0]
    14/46: $12\alu_operator_o[5:0]
    15/46: $3\div_sel_o[0:0]
    16/46: $3\mult_sel_o[0:0]
    17/46: $2\div_sel_o[0:0]
    18/46: $2\mult_sel_o[0:0]
    19/46: $11\alu_operator_o[5:0]
    20/46: $10\alu_operator_o[5:0]
    21/46: $9\alu_operator_o[5:0]
    22/46: $8\alu_operator_o[5:0]
    23/46: $7\alu_operator_o[5:0]
    24/46: $6\alu_operator_o[5:0]
    25/46: $5\alu_op_b_mux_sel_o[0:0]
    26/46: $5\imm_b_mux_sel_o[2:0]
    27/46: $4\alu_op_b_mux_sel_o[0:0]
    28/46: $4\alu_op_a_mux_sel_o[1:0]
    29/46: $5\alu_operator_o[5:0]
    30/46: $4\imm_b_mux_sel_o[2:0]
    31/46: $4\alu_operator_o[5:0]
    32/46: $3\alu_operator_o[5:0]
    33/46: $3\imm_b_mux_sel_o[2:0]
    34/46: $3\alu_op_b_mux_sel_o[0:0]
    35/46: $3\alu_op_a_mux_sel_o[1:0]
    36/46: $2\alu_operator_o[5:0]
    37/46: $2\imm_b_mux_sel_o[2:0]
    38/46: $2\alu_op_b_mux_sel_o[0:0]
    39/46: $2\alu_op_a_mux_sel_o[1:0]
    40/46: $1\alu_op_b_mux_sel_o[0:0]
    41/46: $1\alu_op_a_mux_sel_o[1:0]
    42/46: $1\alu_operator_o[5:0]
    43/46: $1\imm_b_mux_sel_o[2:0]
    44/46: $1\div_sel_o[0:0]
    45/46: $1\mult_sel_o[0:0]
    46/46: $1\imm_a_mux_sel_o[0:0]
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
     1/89: $3\csr_access_o[0:0]
     2/89: $2\branch_in_dec_o[0:0]
     3/89: $6\jump_set_o[0:0]
     4/89: $3\jump_in_dec_o[0:0]
     5/89: $2\data_we_o[0:0]
     6/89: $2\data_req_o[0:0]
     7/89: $6\rf_we[0:0]
     8/89: $25\illegal_insn[0:0]
     9/89: $3\csr_op[1:0]
    10/89: $3\csr_illegal[0:0]
    11/89: $3\rf_ren_a_o[0:0]
    12/89: $24\illegal_insn[0:0]
    13/89: $3\ecall_insn_o[0:0]
    14/89: $23\illegal_insn[0:0]
    15/89: $3\wfi_insn_o[0:0]
    16/89: $3\dret_insn_o[0:0]
    17/89: $3\mret_insn_o[0:0]
    18/89: $3\ebrk_insn_o[0:0]
    19/89: $22\illegal_insn[0:0]
    20/89: $2\wfi_insn_o[0:0]
    21/89: $2\ecall_insn_o[0:0]
    22/89: $2\dret_insn_o[0:0]
    23/89: $2\mret_insn_o[0:0]
    24/89: $2\ebrk_insn_o[0:0]
    25/89: $5\rf_we[0:0]
    26/89: $2\csr_illegal[0:0]
    27/89: $2\rf_wdata_sel_o[0:0]
    28/89: $2\rf_ren_a_o[0:0]
    29/89: $2\csr_access_o[0:0]
    30/89: $2\csr_op[1:0]
    31/89: $3\icache_inval_o[0:0]
    32/89: $5\jump_set_o[0:0]
    33/89: $4\rf_we[0:0]
    34/89: $21\illegal_insn[0:0]
    35/89: $2\jump_in_dec_o[0:0]
    36/89: $4\jump_set_o[0:0]
    37/89: $2\icache_inval_o[0:0]
    38/89: $20\illegal_insn[0:0]
    39/89: $3\multdiv_signed_mode_o[1:0]
    40/89: $3\multdiv_operator_o[1:0]
    41/89: $19\illegal_insn[0:0]
    42/89: $2\multdiv_signed_mode_o[1:0]
    43/89: $2\multdiv_operator_o[1:0]
    44/89: $18\illegal_insn[0:0]
    45/89: $17\illegal_insn[0:0]
    46/89: $16\illegal_insn[0:0]
    47/89: $15\illegal_insn[0:0]
    48/89: $14\illegal_insn[0:0]
    49/89: $13\illegal_insn[0:0]
    50/89: $12\illegal_insn[0:0]
    51/89: $11\illegal_insn[0:0]
    52/89: $10\illegal_insn[0:0]
    53/89: $9\illegal_insn[0:0]
    54/89: $8\illegal_insn[0:0]
    55/89: $7\illegal_insn[0:0]
    56/89: $3\data_type_o[1:0]
    57/89: $6\illegal_insn[0:0]
    58/89: $2\data_type_o[1:0]
    59/89: $5\illegal_insn[0:0]
    60/89: $4\illegal_insn[0:0]
    61/89: $3\illegal_insn[0:0]
    62/89: $2\illegal_insn[0:0]
    63/89: $3\jump_set_o[0:0]
    64/89: $3\rf_we[0:0]
    65/89: $2\jump_set_o[0:0]
    66/89: $2\rf_we[0:0]
    67/89: $1\rf_we[0:0]
    68/89: $1\jump_set_o[0:0]
    69/89: $1\jump_in_dec_o[0:0]
    70/89: $1\csr_illegal[0:0]
    71/89: $1\illegal_insn[0:0]
    72/89: $1\branch_in_dec_o[0:0]
    73/89: $1\data_sign_extension_o[0:0]
    74/89: $1\data_type_o[1:0]
    75/89: $1\multdiv_signed_mode_o[1:0]
    76/89: $1\multdiv_operator_o[1:0]
    77/89: $1\rf_wdata_sel_o[0:0]
    78/89: $1\wfi_insn_o[0:0]
    79/89: $1\ecall_insn_o[0:0]
    80/89: $1\dret_insn_o[0:0]
    81/89: $1\mret_insn_o[0:0]
    82/89: $1\ebrk_insn_o[0:0]
    83/89: $1\rf_ren_b_o[0:0]
    84/89: $1\rf_ren_a_o[0:0]
    85/89: $1\csr_access_o[0:0]
    86/89: $1\icache_inval_o[0:0]
    87/89: $1\csr_op[1:0]
    88/89: $1\data_we_o[0:0]
    89/89: $1\data_req_o[0:0]
Creating decoders for process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:461$4577'.
     1/1: $1\csr_op_o[1:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4571'.
     1/21: $6\load_err_prio[0:0]
     2/21: $5\store_err_prio[0:0]
     3/21: $5\load_err_prio[0:0]
     4/21: $4\ebrk_insn_prio[0:0]
     5/21: $4\load_err_prio[0:0]
     6/21: $4\store_err_prio[0:0]
     7/21: $3\ecall_insn_prio[0:0]
     8/21: $3\load_err_prio[0:0]
     9/21: $3\store_err_prio[0:0]
    10/21: $3\ebrk_insn_prio[0:0]
    11/21: $2\illegal_insn_prio[0:0]
    12/21: $2\load_err_prio[0:0]
    13/21: $2\store_err_prio[0:0]
    14/21: $2\ebrk_insn_prio[0:0]
    15/21: $2\ecall_insn_prio[0:0]
    16/21: $1\instr_fetch_err_prio[0:0]
    17/21: $1\load_err_prio[0:0]
    18/21: $1\store_err_prio[0:0]
    19/21: $1\ebrk_insn_prio[0:0]
    20/21: $1\ecall_insn_prio[0:0]
    21/21: $1\illegal_insn_prio[0:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4569'.
     1/7: $0\illegal_insn_q[0:0]
     2/7: $0\exc_req_q[0:0]
     3/7: $0\store_err_q[0:0]
     4/7: $0\load_err_q[0:0]
     5/7: $0\debug_mode_q[0:0]
     6/7: $0\nmi_mode_q[0:0]
     7/7: $0\ctrl_fsm_cs[3:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
     1/129: $18\ctrl_fsm_ns[3:0]
     2/129: $17\ctrl_fsm_ns[3:0]
     3/129: $16\ctrl_fsm_ns[3:0]
     4/129: $4\csr_restore_dret_id_o[0:0]
     5/129: $5\debug_mode_d[0:0]
     6/129: $9\pc_set_spec_o[0:0]
     7/129: $10\pc_set_o[0:0]
     8/129: $4\pc_mux_o[2:0]
     9/129: $15\ctrl_fsm_ns[3:0]
    10/129: $6\nmi_mode_d[0:0]
    11/129: $5\nmi_mode_d[0:0]
    12/129: $3\csr_restore_mret_id_o[0:0]
    13/129: $8\pc_set_spec_o[0:0]
    14/129: $9\pc_set_o[0:0]
    15/129: $3\pc_mux_o[2:0]
    16/129: $4\debug_mode_d[0:0]
    17/129: $14\ctrl_fsm_ns[3:0]
    18/129: $3\csr_restore_dret_id_o[0:0]
    19/129: $5\flush_id[0:0]
    20/129: $13\ctrl_fsm_ns[3:0]
    21/129: $7\csr_save_cause_o[0:0]
    22/129: $6\csr_save_id_o[0:0]
    23/129: $7\pc_set_spec_o[0:0]
    24/129: $8\pc_set_o[0:0]
    25/129: $9\exc_cause_o[5:0]
    26/129: $3\csr_mtval_o[31:0]
    27/129: $8\exc_cause_o[5:0]
    28/129: $12\ctrl_fsm_ns[3:0]
    29/129: $4\flush_id[0:0]
    30/129: $6\csr_save_cause_o[0:0]
    31/129: $5\csr_save_id_o[0:0]
    32/129: $6\pc_set_spec_o[0:0]
    33/129: $7\pc_set_o[0:0]
    34/129: $4\csr_save_id_o[0:0]
    35/129: $11\ctrl_fsm_ns[3:0]
    36/129: $3\flush_id[0:0]
    37/129: $2\csr_mtval_o[31:0]
    38/129: $5\csr_save_cause_o[0:0]
    39/129: $3\csr_save_id_o[0:0]
    40/129: $7\exc_cause_o[5:0]
    41/129: $5\pc_set_spec_o[0:0]
    42/129: $6\pc_set_o[0:0]
    43/129: $2\exc_pc_mux_o[1:0]
    44/129: $2\pc_mux_o[2:0]
    45/129: $3\debug_mode_d[0:0]
    46/129: $4\nmi_mode_d[0:0]
    47/129: $2\csr_restore_dret_id_o[0:0]
    48/129: $2\csr_restore_mret_id_o[0:0]
    49/129: $5\debug_cause_o[2:0]
    50/129: $3\debug_csr_save_o[0:0]
    51/129: $2\csr_save_id_o[0:0]
    52/129: $4\csr_save_cause_o[0:0]
    53/129: $4\debug_cause_o[2:0]
    54/129: $3\debug_cause_o[2:0]
    55/129: $2\debug_mode_d[0:0]
    56/129: $2\debug_cause_o[2:0]
    57/129: $3\csr_save_cause_o[0:0]
    58/129: $2\debug_csr_save_o[0:0]
    59/129: $3\csr_save_if_o[0:0]
    60/129: $4\pc_set_spec_o[0:0]
    61/129: $5\pc_set_o[0:0]
    62/129: $2\flush_id[0:0]
    63/129: $6\exc_cause_o[5:0]
    64/129: $5\exc_cause_o[5:0]
    65/129: $4\exc_cause_o[5:0]
    66/129: $4$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4467$\sv2v_cast_6[5:0]$4541
    67/129: $4$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4467$\inp[5:0]$4542
    68/129: $3\nmi_mode_d[0:0]
    69/129: $3\exc_cause_o[5:0]
    70/129: $3$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4467$\inp[5:0]$4539
    71/129: $3$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4467$\sv2v_cast_6[5:0]$4538
    72/129: $2$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4467$\inp[5:0]$4535
    73/129: $2$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4467$\sv2v_cast_6[5:0]$4534
    74/129: $2\nmi_mode_d[0:0]
    75/129: $2\exc_cause_o[5:0]
    76/129: $2\csr_save_cause_o[0:0]
    77/129: $2\csr_save_if_o[0:0]
    78/129: $3\pc_set_spec_o[0:0]
    79/129: $4\pc_set_o[0:0]
    80/129: $7\halt_if[0:0]
    81/129: $10\ctrl_fsm_ns[3:0]
    82/129: $6\halt_if[0:0]
    83/129: $9\ctrl_fsm_ns[3:0]
    84/129: $5\halt_if[0:0]
    85/129: $8\ctrl_fsm_ns[3:0]
    86/129: $4\halt_if[0:0]
    87/129: $2\pc_set_spec_o[0:0]
    88/129: $3\perf_jump_o[0:0]
    89/129: $3\perf_tbranch_o[0:0]
    90/129: $3\pc_set_o[0:0]
    91/129: $2\perf_tbranch_o[0:0]
    92/129: $2\perf_jump_o[0:0]
    93/129: $2\pc_set_o[0:0]
    94/129: $7\ctrl_fsm_ns[3:0]
    95/129: $6\ctrl_fsm_ns[3:0]
    96/129: $2\retain_id[0:0]
    97/129: $3\halt_if[0:0]
    98/129: $5\ctrl_fsm_ns[3:0]
    99/129: $2\halt_if[0:0]
   100/129: $4\ctrl_fsm_ns[3:0]
   101/129: $3\ctrl_fsm_ns[3:0]
   102/129: $2\ctrl_fsm_ns[3:0]
   103/129: $2\ctrl_busy_o[0:0]
   104/129: $1\ctrl_fsm_ns[3:0]
   105/129: $1\pc_set_spec_o[0:0]
   106/129: $1\pc_set_o[0:0]
   107/129: $1\pc_mux_o[2:0]
   108/129: $1\instr_req_o[0:0]
   109/129: $1$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4467$\inp[5:0]$4518
   110/129: $1$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4467$\sv2v_cast_6[5:0]$4517
   111/129: $1\retain_id[0:0]
   112/129: $1\halt_if[0:0]
   113/129: $1\debug_mode_d[0:0]
   114/129: $1\nmi_mode_d[0:0]
   115/129: $1\controller_run_o[0:0]
   116/129: $1\flush_id[0:0]
   117/129: $1\perf_tbranch_o[0:0]
   118/129: $1\perf_jump_o[0:0]
   119/129: $1\debug_csr_save_o[0:0]
   120/129: $1\debug_cause_o[2:0]
   121/129: $1\csr_mtval_o[31:0]
   122/129: $1\csr_save_cause_o[0:0]
   123/129: $1\csr_restore_dret_id_o[0:0]
   124/129: $1\csr_restore_mret_id_o[0:0]
   125/129: $1\csr_save_id_o[0:0]
   126/129: $1\csr_save_if_o[0:0]
   127/129: $1\exc_cause_o[5:0]
   128/129: $1\exc_pc_mux_o[1:0]
   129/129: $1\ctrl_busy_o[0:0]
Creating decoders for process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:543$4513'.
     1/14: $14\mfip_id[3:0]
     2/14: $13\mfip_id[3:0]
     3/14: $12\mfip_id[3:0]
     4/14: $11\mfip_id[3:0]
     5/14: $10\mfip_id[3:0]
     6/14: $9\mfip_id[3:0]
     7/14: $8\mfip_id[3:0]
     8/14: $7\mfip_id[3:0]
     9/14: $6\mfip_id[3:0]
    10/14: $5\mfip_id[3:0]
    11/14: $4\mfip_id[3:0]
    12/14: $3\mfip_id[3:0]
    13/14: $2\mfip_id[3:0]
    14/14: $1\mfip_id[3:0]
Creating decoders for process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4438'.
     1/5: $0\rdata_pmp_err_q[1:0]
     2/5: $0\branch_discard_q[1:0]
     3/5: $0\rdata_outstanding_q[1:0]
     4/5: $0\discard_req_q[0:0]
     5/5: $0\valid_req_q[0:0]
Creating decoders for process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:146$4428'.
     1/1: $0\fetch_addr_q[31:0]
Creating decoders for process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:123$4419'.
     1/1: $0\stored_addr_q[31:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:0$4391'.
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4388'.
     1/8: $0\pc_id_o[31:0]
     2/8: $0\illegal_c_insn_id_o[0:0]
     3/8: $0\instr_fetch_err_plus2_o[0:0]
     4/8: $0\instr_fetch_err_o[0:0]
     5/8: $0\instr_is_compressed_id_o[0:0]
     6/8: $0\instr_rdata_c_id_o[15:0]
     7/8: $0\instr_rdata_alu_id_o[31:0]
     8/8: $0\instr_rdata_id_o[31:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4386'.
     1/2: $0\instr_new_id_q[0:0]
     2/2: $0\instr_valid_id_q[0:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:449$4372'.
     1/1: $1\fetch_addr_n[31:0]
Creating decoders for process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4367'.
     1/1: $1\exc_pc[31:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4366'.
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4365'.
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:863$4346'.
     1/1: $0\g_branch_set_flop.branch_set_q[0:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4344'.
     1/1: $0\imd_val_q[33:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4342'.
     1/1: $0\imd_val_q[67:34]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:661$4340'.
     1/1: $1\imm_b[31:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
     1/39: $6\id_fsm_d[0:0]
     2/39: $4\stall_jump[0:0]
     3/39: $4\stall_branch[0:0]
     4/39: $5\stall_multdiv[0:0]
     5/39: $5\rf_we_raw[0:0]
     6/39: $4\stall_multdiv[0:0]
     7/39: $4\rf_we_raw[0:0]
     8/39: $5\id_fsm_d[0:0]
     9/39: $4\id_fsm_d[0:0]
    10/39: $3\id_fsm_d[0:0]
    11/39: $3\stall_alu[0:0]
    12/39: $3\rf_we_raw[0:0]
    13/39: $3\stall_jump[0:0]
    14/39: $3\stall_branch[0:0]
    15/39: $3\stall_multdiv[0:0]
    16/39: $3\jump_set[0:0]
    17/39: $3\branch_set_d[0:0]
    18/39: $3\branch_spec[0:0]
    19/39: $3\perf_branch_o[0:0]
    20/39: $2\id_fsm_d[0:0]
    21/39: $2\stall_alu[0:0]
    22/39: $2\rf_we_raw[0:0]
    23/39: $2\stall_jump[0:0]
    24/39: $2\stall_branch[0:0]
    25/39: $2\stall_multdiv[0:0]
    26/39: $2\jump_set[0:0]
    27/39: $2\branch_set_d[0:0]
    28/39: $2\branch_spec[0:0]
    29/39: $2\perf_branch_o[0:0]
    30/39: $1\id_fsm_d[0:0]
    31/39: $1\stall_alu[0:0]
    32/39: $1\rf_we_raw[0:0]
    33/39: $1\stall_jump[0:0]
    34/39: $1\stall_branch[0:0]
    35/39: $1\stall_multdiv[0:0]
    36/39: $1\jump_set[0:0]
    37/39: $1\branch_set_d[0:0]
    38/39: $1\branch_spec[0:0]
    39/39: $1\perf_branch_o[0:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:889$4306'.
     1/1: $0\id_fsm_q[0:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
     1/24: $4\csr_pipe_flush[0:0]
     2/24: $3\csr_pipe_flush[0:0]
     3/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4233$\sv2v_cast_12[11:0]$4288
     4/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4233$\inp[11:0]$4289
     5/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4232$\sv2v_cast_12[11:0]$4286
     6/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4232$\inp[11:0]$4287
     7/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4231$\sv2v_cast_12[11:0]$4284
     8/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4231$\inp[11:0]$4285
     9/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4230$\sv2v_cast_12[11:0]$4282
    10/24: $2$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4230$\inp[11:0]$4283
    11/24: $2\csr_pipe_flush[0:0]
    12/24: $1\csr_pipe_flush[0:0]
    13/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4229$\sv2v_cast_12[11:0]$4266
    14/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4229$\inp[11:0]$4267
    15/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4228$\sv2v_cast_12[11:0]$4264
    16/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4228$\inp[11:0]$4265
    17/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4233$\inp[11:0]$4275
    18/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4233$\sv2v_cast_12[11:0]$4274
    19/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4232$\inp[11:0]$4273
    20/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4232$\sv2v_cast_12[11:0]$4272
    21/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4231$\inp[11:0]$4271
    22/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4231$\sv2v_cast_12[11:0]$4270
    23/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4230$\inp[11:0]$4269
    24/24: $1$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4230$\sv2v_cast_12[11:0]$4268
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4245'.
     1/1: $1\rf_wdata_id_o[31:0]
Creating decoders for process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4239'.
     1/1: $1\alu_operand_a[31:0]
Creating decoders for process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_wb_stage.v:0$4219'.
Creating decoders for process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:0$353'.
Creating decoders for process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$337'.
     1/1: $0\fetch_enable_q[0:0]
Creating decoders for process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:546$335'.
     1/1: $0\core_busy_q[0:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4175'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4172'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4169'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4166'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4163'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1190$4158'.
     1/1: $0\mcountinhibit_q[2:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1095$4152'.
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1089$4150'.
     1/1: $1\mcountinhibit_d[2:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$4137'.
     1/1: $1\csr_wdata_int[31:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:775$4134'.
     1/1: $0\priv_lvl_q[1:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
     1/131: $4\mstatus_d[5:2] [3]
     2/131: $6\mcause_en[0:0]
     3/131: $4\mepc_d[31:0]
     4/131: $6\mepc_en[0:0]
     5/131: $7\mstatus_d[4:2] [1:0]
     6/131: $7\mstatus_d[4:2] [2]
     7/131: $4\mstatus_d[5:2] [2:0]
     8/131: $4\mcause_d[5:0]
     9/131: $3\mcause_d[5:0]
    10/131: $5\mcause_en[0:0]
    11/131: $3\mepc_d[31:0]
    12/131: $5\mepc_en[0:0]
    13/131: $3\mstack_en[0:0]
    14/131: $6\mstatus_d[5:2] [1:0]
    15/131: $6\mstatus_d[5:2] [2]
    16/131: $5\mstatus_en[0:0]
    17/131: $3\mtval_d[31:0]
    18/131: $5\mtval_en[0:0]
    19/131: $4\depc_en[0:0]
    20/131: $2\depc_d[31:0]
    21/131: $4\dcsr_en[0:0]
    22/131: $7\dcsr_d[8:6]
    23/131: $6\dcsr_d[1:0]
    24/131: $2\mstack_en[0:0]
    25/131: $4\mtval_en[0:0]
    26/131: $2\mtval_d[31:0]
    27/131: $4\mcause_en[0:0]
    28/131: $2\mcause_d[5:0]
    29/131: $4\mepc_en[0:0]
    30/131: $2\mepc_d[31:0]
    31/131: $4\mstatus_en[0:0]
    32/131: $5\mstatus_d[5:2]
    33/131: $2\exception_pc[31:0]
    34/131: $1\mstack_en[0:0]
    35/131: $3\depc_en[0:0]
    36/131: $1\depc_d[31:0]
    37/131: $3\dcsr_en[0:0]
    38/131: $5\dcsr_d[8:6]
    39/131: $4\dcsr_d[1:0]
    40/131: $3\mtval_en[0:0]
    41/131: $1\mtval_d[31:0]
    42/131: $3\mcause_en[0:0]
    43/131: $1\mcause_d[5:0]
    44/131: $3\mepc_en[0:0]
    45/131: $1\mepc_d[31:0]
    46/131: $3\mstatus_en[0:0]
    47/131: $6\mstatus_d[5:2] [3]
    48/131: $1\priv_lvl_d[1:0]
    49/131: $1\exception_pc[31:0]
    50/131: $2\dcsr_d[31:0] [31:28]
    51/131: $2\mstatus_d[5:0] [5:4]
    52/131: $2\mstatus_d[5:0] [3:2]
    53/131: $2\dcsr_d[31:0] [15]
    54/131: $2\dcsr_d[31:0] [14]
    55/131: $2\mstatus_d[5:0] [1:0]
    56/131: $2\dcsr_d[31:0] [27:16]
    57/131: $2\dcsr_d[31:0] [4]
    58/131: $2\dcsr_d[31:0] [3]
    59/131: $2\dcsr_d[31:0] [2]
    60/131: $2\dcsr_d[31:0] [1:0]
    61/131: $2\dcsr_d[31:0] [5]
    62/131: $2\dcsr_d[31:0] [13:11]
    63/131: $2\dcsr_d[31:0] [10]
    64/131: $3\dcsr_d[1:0]
    65/131: $2\dcsr_d[31:0] [8:6]
    66/131: $3\mstatus_d[3:2]
    67/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3894$\sv2v_cast_1[0:0]$4111
    68/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3894$\inp[0:0]$4112
    69/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3893$\sv2v_cast_1[0:0]$4109
    70/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3893$\inp[0:0]$4110
    71/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3892$\sv2v_cast_2[1:0]$4107
    72/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3892$\inp[1:0]$4108
    73/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3891$\sv2v_cast_2[1:0]$4105
    74/131: $2$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3891$\inp[1:0]$4106
    75/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3890$\sv2v_cast_1[0:0]$4103
    76/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3890$\inp[0:0]$4104
    77/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3889$\sv2v_cast_1[0:0]$4101
    78/131: $2$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3889$\inp[0:0]$4102
    79/131: $2\mstatus_en[0:0]
    80/131: $2$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3898[31:0]$4116
    81/131: $2$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3897[31:0]$4115
    82/131: $2$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3896[31:0]$4114
    83/131: $2$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3895[31:0]$4113
    84/131: $2\cpuctrl_we[0:0]
    85/131: $2\mhpmcounterh_we[31:0]
    86/131: $2\mhpmcounter_we[31:0]
    87/131: $2\mcountinhibit_we[0:0]
    88/131: $2\dscratch1_en[0:0]
    89/131: $2\dscratch0_en[0:0]
    90/131: $2\depc_en[0:0]
    91/131: $2\dcsr_en[0:0]
    92/131: $2\dcsr_d[31:0] [9]
    93/131: $2\mtvec_en[0:0]
    94/131: $2\mtval_en[0:0]
    95/131: $2\mcause_en[0:0]
    96/131: $2\mepc_en[0:0]
    97/131: $2\mscratch_en[0:0]
    98/131: $2\mie_en[0:0]
    99/131: $1$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3898[31:0]$4100
   100/131: $1$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3897[31:0]$4099
   101/131: $1$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3896[31:0]$4098
   102/131: $1$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3895[31:0]$4097
   103/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3894$\inp[0:0]$4096
   104/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3894$\sv2v_cast_1[0:0]$4095
   105/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3893$\inp[0:0]$4094
   106/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3893$\sv2v_cast_1[0:0]$4093
   107/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3892$\inp[1:0]$4092
   108/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3892$\sv2v_cast_2[1:0]$4091
   109/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3891$\inp[1:0]$4090
   110/131: $1$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3891$\sv2v_cast_2[1:0]$4089
   111/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3890$\inp[0:0]$4088
   112/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3890$\sv2v_cast_1[0:0]$4087
   113/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3889$\inp[0:0]$4086
   114/131: $1$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3889$\sv2v_cast_1[0:0]$4085
   115/131: $1\cpuctrl_we[0:0]
   116/131: $1\mhpmcounterh_we[31:0]
   117/131: $1\mhpmcounter_we[31:0]
   118/131: $1\mcountinhibit_we[0:0]
   119/131: $1\dscratch1_en[0:0]
   120/131: $1\dscratch0_en[0:0]
   121/131: $1\depc_en[0:0]
   122/131: $1\dcsr_en[0:0]
   123/131: $1\dcsr_d[31:0]
   124/131: $1\mtvec_en[0:0]
   125/131: $1\mtval_en[0:0]
   126/131: $1\mcause_en[0:0]
   127/131: $1\mepc_en[0:0]
   128/131: $1\mscratch_en[0:0]
   129/131: $1\mie_en[0:0]
   130/131: $1\mstatus_en[0:0]
   131/131: $1\mstatus_d[5:0]
Creating decoders for process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
     1/26: $1\csr_rdata_int[31:0] [31]
     2/26: $1\csr_rdata_int[31:0] [10:8]
     3/26: $1\csr_rdata_int[31:0] [7]
     4/26: $1\csr_rdata_int[31:0] [6:4]
     5/26: $1\csr_rdata_int[31:0] [12]
     6/26: $1\csr_rdata_int[31:0] [3]
     7/26: $1\csr_rdata_int[31:0] [17]
     8/26: $2$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$4004_DATA[63:0]$4066
     9/26: $1\csr_rdata_int[31:0] [11]
    10/26: $2$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$4003_DATA[63:0]$4065
    11/26: $1\csr_rdata_int[31:0] [2:0]
    12/26: $1\csr_rdata_int[31:0] [21]
    13/26: $1\csr_rdata_int[31:0] [30:22]
    14/26: $1\csr_rdata_int[31:0] [16]
    15/26: $1\csr_rdata_int[31:0] [20:18]
    16/26: $2$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$4002_DATA[31:0]$4064
    17/26: $1\csr_rdata_int[31:0] [15:13]
    18/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$4004_DATA[63:0]$4043
    19/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$4004_ADDR[4:0]$4042
    20/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$4003_DATA[63:0]$4041
    21/26: $1$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$4003_ADDR[4:0]$4040
    22/26: $1$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$4002_DATA[31:0]$4039
    23/26: $1$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$4002_ADDR[4:0]$4038
    24/26: $1$mem2bits$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$3888[63:0]$4037
    25/26: $1$mem2bits$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$3887[63:0]$4036
    26/26: $1\illegal_csr[0:0]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3877'.
     1/1: $0\rf_reg_q[991:960]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3875'.
     1/1: $0\rf_reg_q[959:928]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3873'.
     1/1: $0\rf_reg_q[927:896]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3871'.
     1/1: $0\rf_reg_q[895:864]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3869'.
     1/1: $0\rf_reg_q[863:832]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3867'.
     1/1: $0\rf_reg_q[831:800]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3865'.
     1/1: $0\rf_reg_q[799:768]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3863'.
     1/1: $0\rf_reg_q[767:736]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3861'.
     1/1: $0\rf_reg_q[735:704]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3859'.
     1/1: $0\rf_reg_q[703:672]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3857'.
     1/1: $0\rf_reg_q[671:640]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3855'.
     1/1: $0\rf_reg_q[639:608]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3853'.
     1/1: $0\rf_reg_q[607:576]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3851'.
     1/1: $0\rf_reg_q[575:544]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3849'.
     1/1: $0\rf_reg_q[543:512]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3847'.
     1/1: $0\rf_reg_q[511:480]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3845'.
     1/1: $0\rf_reg_q[479:448]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3843'.
     1/1: $0\rf_reg_q[447:416]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3841'.
     1/1: $0\rf_reg_q[415:384]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3839'.
     1/1: $0\rf_reg_q[383:352]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3837'.
     1/1: $0\rf_reg_q[351:320]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3835'.
     1/1: $0\rf_reg_q[319:288]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3833'.
     1/1: $0\rf_reg_q[287:256]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3831'.
     1/1: $0\rf_reg_q[255:224]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3829'.
     1/1: $0\rf_reg_q[223:192]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3827'.
     1/1: $0\rf_reg_q[191:160]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3825'.
     1/1: $0\rf_reg_q[159:128]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3823'.
     1/1: $0\rf_reg_q[127:96]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3821'.
     1/1: $0\rf_reg_q[95:64]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3819'.
     1/1: $0\rf_reg_q[63:32]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3817'.
     1/1: $0\rf_reg_q[31:0]
Creating decoders for process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3654'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3653'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3652'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3651'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3650'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3649'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3648'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3647'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3646'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3645'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:917$3644'.
     1/1: $1\result_o[31:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:484$3643'.
     1/1: $1\bwlogic_result[31:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:472$3632'.
     1/1: $1\bwlogic_op_b_negate[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$3626'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:429$3624'.
     1/2: $2\shift_left[0:0]
     2/2: $1\shift_left[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:423$3618'.
     1/1: $1\shift_amt[4:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:421$3615'.
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:383$3610'.
     1/1: $1\cmp_result[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:377$3605'.
     1/1: $1\is_greater_equal[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:370$3603'.
     1/1: $1\cmp_signed[0:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:358$3601'.
     1/1: $1\adder_in_b[32:0]
Creating decoders for process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:348$3598'.
     1/1: $1\adder_op_b_negate[0:0]
Creating decoders for process `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$302'.
     1/25: $11\instr_o[31:0]
     2/25: $10\instr_o[31:0]
     3/25: $14\illegal_instr_o[0:0]
     4/25: $9\instr_o[31:0]
     5/25: $13\illegal_instr_o[0:0]
     6/25: $12\illegal_instr_o[0:0]
     7/25: $8\instr_o[31:0]
     8/25: $11\illegal_instr_o[0:0]
     9/25: $10\illegal_instr_o[0:0]
    10/25: $9\illegal_instr_o[0:0]
    11/25: $7\instr_o[31:0]
    12/25: $6\instr_o[31:0]
    13/25: $8\illegal_instr_o[0:0]
    14/25: $7\illegal_instr_o[0:0]
    15/25: $6\illegal_instr_o[0:0]
    16/25: $5\instr_o[31:0]
    17/25: $5\illegal_instr_o[0:0]
    18/25: $4\instr_o[31:0]
    19/25: $3\instr_o[31:0]
    20/25: $4\illegal_instr_o[0:0]
    21/25: $3\illegal_instr_o[0:0]
    22/25: $2\illegal_instr_o[0:0]
    23/25: $2\instr_o[31:0]
    24/25: $1\illegal_instr_o[0:0]
    25/25: $1\instr_o[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$283'.
     1/4: $0\lsu_err_q[0:0]
     2/4: $0\pmp_err_q[0:0]
     3/4: $0\handle_misaligned_q[0:0]
     4/4: $0\ls_fsm_cs[2:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
     1/45: $8\ls_fsm_ns[2:0]
     2/45: $3\rdata_update[0:0]
     3/45: $7\addr_update[0:0]
     4/45: $4\lsu_err_d[0:0]
     5/45: $4\pmp_err_d[0:0]
     6/45: $7\handle_misaligned_d[0:0]
     7/45: $7\ls_fsm_ns[2:0]
     8/45: $6\addr_update[0:0]
     9/45: $5\ctrl_update[0:0]
    10/45: $6\handle_misaligned_d[0:0]
    11/45: $6\ls_fsm_ns[2:0]
    12/45: $5\handle_misaligned_d[0:0]
    13/45: $5\addr_update[0:0]
    14/45: $5\ls_fsm_ns[2:0]
    15/45: $2\rdata_update[0:0]
    16/45: $3\lsu_err_d[0:0]
    17/45: $3\pmp_err_d[0:0]
    18/45: $4\ls_fsm_ns[2:0]
    19/45: $4\handle_misaligned_d[0:0]
    20/45: $4\ctrl_update[0:0]
    21/45: $4\addr_update[0:0]
    22/45: $3\ls_fsm_ns[2:0]
    23/45: $3\handle_misaligned_d[0:0]
    24/45: $3\addr_update[0:0]
    25/45: $3\ctrl_update[0:0]
    26/45: $2\ls_fsm_ns[2:0]
    27/45: $2\handle_misaligned_d[0:0]
    28/45: $2\ctrl_update[0:0]
    29/45: $2\addr_update[0:0]
    30/45: $2\perf_store_o[0:0]
    31/45: $2\perf_load_o[0:0]
    32/45: $2\lsu_err_d[0:0]
    33/45: $2\pmp_err_d[0:0]
    34/45: $2\data_req_o[0:0]
    35/45: $1\ls_fsm_ns[2:0]
    36/45: $1\lsu_err_d[0:0]
    37/45: $1\pmp_err_d[0:0]
    38/45: $1\handle_misaligned_d[0:0]
    39/45: $1\ctrl_update[0:0]
    40/45: $1\addr_update[0:0]
    41/45: $1\perf_store_o[0:0]
    42/45: $1\perf_load_o[0:0]
    43/45: $1\data_req_o[0:0]
    44/45: $1\rdata_update[0:0]
    45/45: $1\addr_incr_req_o[0:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$254'.
     1/1: $1\data_rdata_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$249'.
     1/5: $5\rdata_b_ext[31:0]
     2/5: $4\rdata_b_ext[31:0]
     3/5: $3\rdata_b_ext[31:0]
     4/5: $2\rdata_b_ext[31:0]
     5/5: $1\rdata_b_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$244'.
     1/5: $5\rdata_h_ext[31:0]
     2/5: $4\rdata_h_ext[31:0]
     3/5: $3\rdata_h_ext[31:0]
     4/5: $2\rdata_h_ext[31:0]
     5/5: $1\rdata_h_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$243'.
     1/1: $1\rdata_w_ext[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$241'.
     1/1: $0\addr_last_q[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$239'.
     1/4: $0\data_we_q[0:0]
     2/4: $0\data_sign_ext_q[0:0]
     3/4: $0\data_type_q[1:0]
     4/4: $0\rdata_offset_q[1:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$237'.
     1/1: $0\rdata_q[23:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$236'.
     1/1: $1\data_wdata[31:0]
Creating decoders for process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$233'.
     1/7: $7\data_be[3:0]
     2/7: $6\data_be[3:0]
     3/7: $5\data_be[3:0]
     4/7: $4\data_be[3:0]
     5/7: $3\data_be[3:0]
     6/7: $2\data_be[3:0]
     7/7: $1\data_be[3:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$3564'.
     1/1: $0\gen_mult_fast.mult_state_q[1:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
     1/16: $1\accum[33:0] [33:18]
     2/16: $1\accum[33:0] [17:0]
     3/16: $2\gen_mult_fast.mult_state_d[1:0]
     4/16: $2\mult_valid[0:0]
     5/16: $3\mac_res_d[33:0]
     6/16: $2\accum[33:0]
     7/16: $2\mac_res_d[33:0]
     8/16: $1\gen_mult_fast.mult_state_d[1:0]
     9/16: $1\mac_res_d[33:0]
    10/16: $2\mult_hold[0:0]
    11/16: $1\sign_b[0:0]
    12/16: $1\sign_a[0:0]
    13/16: $1\gen_mult_fast.mult_op_b[15:0]
    14/16: $1\gen_mult_fast.mult_op_a[15:0]
    15/16: $1\mult_hold[0:0]
    16/16: $1\mult_valid[0:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
     1/16: $4\op_remainder_d[33:0]
     2/16: $3\op_remainder_d[33:0]
     3/16: $2\div_by_zero_d[0:0]
     4/16: $2\md_state_d[2:0]
     5/16: $2\op_remainder_d[33:0]
     6/16: $1\div_counter_d[4:0]
     7/16: $1\alu_operand_b_o[32:0]
     8/16: $1\alu_operand_a_o[32:0]
     9/16: $1\md_state_d[2:0]
    10/16: $1\div_by_zero_d[0:0]
    11/16: $1\op_remainder_d[33:0]
    12/16: $1\div_hold[0:0]
    13/16: $1\div_valid[0:0]
    14/16: $1\op_quotient_d[31:0]
    15/16: $1\op_numerator_d[31:0]
    16/16: $1\op_denominator_d[31:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:598$3516'.
     1/1: $1\is_greater_equal[0:0]
Creating decoders for process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$3506'.
     1/5: $0\md_state_q[2:0]
     2/5: $0\div_by_zero_q[0:0]
     3/5: $0\div_counter_q[4:0]
     4/5: $0\op_quotient_q[31:0]
     5/5: $0\op_numerator_q[31:0]
Creating decoders for process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4639'.
     1/1: $0\rdata_q[5:0]

27.2.7. Executing PROC_DLATCH pass (convert process syncs to latches).
Latch inferred for signal `\prim_clock_gating.\en_latch' from process `\prim_clock_gating.$proc$/openLANE_flow/designs/ibex/src/prim_clock_gating.v:16$3368': $auto$proc_dlatch.cc:430:proc_dlatch$11749
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\counter_upd' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4624'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\counter_load' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4624'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\we' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4624'.
No latch inferred for signal `$paramod\ibex_counter\CounterWidth=64.\counter_d' from process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4624'.
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_valid_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4669'.
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_rdata_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4669'.
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_err_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4669'.
No latch inferred for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\out_err_plus2_o' from process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4669'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\use_rs3_q' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:443$4616'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\imm_a_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\imm_b_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\bt_a_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\bt_b_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_operator_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_op_a_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_op_b_mux_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\alu_multicycle_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\mult_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\div_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\use_rs3_d' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\opcode_alu' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/ibex/src/ibex_decoder.v:728$4573$\sv2v_cast_7' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/ibex/src/ibex_decoder.v:728$4573$\inp' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_req_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_we_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_op' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\icache_inval_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_access_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_ren_a_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_ren_b_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\ebrk_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\mret_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\dret_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\ecall_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\wfi_insn_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\jump_set_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_wdata_sel_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\multdiv_operator_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\multdiv_signed_mode_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_type_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\data_sign_extension_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\jump_in_dec_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\branch_in_dec_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\illegal_insn' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_illegal' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\rf_we' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\opcode' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/ibex/src/ibex_decoder.v:494$4572$\sv2v_cast_7' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$func$\sv2v_cast_7$/openLANE_flow/designs/ibex/src/ibex_decoder.v:494$4572$\inp' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
No latch inferred for signal `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.\csr_op_o' from process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:461$4577'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\instr_fetch_err_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4571'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\illegal_insn_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4571'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ecall_insn_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4571'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ebrk_insn_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4571'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\store_err_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4571'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\load_err_prio' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4571'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\instr_req_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ctrl_busy_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\pc_set_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\pc_set_spec_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\pc_mux_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\nt_branch_mispredict_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\exc_pc_mux_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\exc_cause_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_if_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_id_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_wb_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_restore_mret_id_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_restore_dret_id_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_save_cause_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\csr_mtval_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_cause_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_csr_save_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\perf_jump_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\perf_tbranch_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\flush_id' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\controller_run_o' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ctrl_fsm_ns' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\nmi_mode_d' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_mode_d' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\halt_if' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\retain_id' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4467$\sv2v_cast_6' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_controller.v:704$4467$\inp' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
No latch inferred for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\mfip_id' from process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:543$4513'.
No latch inferred for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\dummy_instr_id_o' from process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:0$4391'.
No latch inferred for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\fetch_addr_n' from process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:449$4372'.
No latch inferred for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\exc_pc' from process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4367'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\bt_b_operand_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4366'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\bt_a_operand_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4365'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\imm_b' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:661$4340'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\perf_branch_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\branch_spec' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\branch_set_d' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\branch_not_set' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\jump_set' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_multdiv' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_branch' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_jump' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\rf_we_raw' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\stall_alu' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\id_fsm_d' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\csr_pipe_flush' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4228$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4228$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4229$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4229$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4230$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4230$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4231$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4231$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4232$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4232$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4233$\sv2v_cast_12' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4233$\inp' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\rf_wdata_id_o' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4245'.
No latch inferred for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\alu_operand_a' from process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4239'.
No latch inferred for signal `$paramod\ibex_wb_stage\WritebackStage=1'0.\rf_wdata_wb_mux[0]' from process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_wb_stage.v:0$4219'.
No latch inferred for signal `$paramod\ibex_wb_stage\WritebackStage=1'0.\rf_wdata_wb_mux[1]' from process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_wb_stage.v:0$4219'.
No latch inferred for signal `\ibex_core.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_core.v:951$331$\sv2v_cast_12' from process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:0$353'.
No latch inferred for signal `\ibex_core.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_core.v:951$332$\sv2v_cast_12' from process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:0$353'.
No latch inferred for signal `\ibex_core.$func$\sv2v_cast_12$/openLANE_flow/designs/ibex/src/ibex_core.v:951$332$\inp' from process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:0$353'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[0]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[1]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[2]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[3]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[4]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[5]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[6]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[7]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[8]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[9]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[10]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[11]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[12]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[13]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[14]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\pmp_cfg_rdata[15]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[1]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[3]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[4]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[5]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[6]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[7]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[8]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[9]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[10]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[11]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[12]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[13]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[14]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[15]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[16]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[17]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[18]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[19]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[20]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[21]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[22]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[23]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[24]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[25]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[26]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[27]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[28]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[29]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[30]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter[31]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1275$3996$\sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4175'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1275$4001$\sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4175'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1275$4001$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4175'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3902$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4172'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$4000$\g_no_pmp_tieoffs.g_outputs[3].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4172'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3901$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4169'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3999$\g_no_pmp_tieoffs.g_outputs[2].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4169'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3900$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4166'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3998$\g_no_pmp_tieoffs.g_outputs[1].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4166'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3899$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4163'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1083$3997$\g_no_pmp_tieoffs.g_outputs[0].sv2v_cast_6' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4163'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\gen_mhpmevent.sv2v_autoblock_8.i' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\gen_mhpmevent.sv2v_autoblock_9.i' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[0]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[1]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[2]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[3]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[4]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[5]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[6]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[7]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[8]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[9]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[10]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[11]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[12]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[13]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[14]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[15]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[16]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[17]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[18]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[19]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[20]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[21]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[22]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[23]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[24]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[25]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[26]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[27]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[28]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[29]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[30]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmevent[31]' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter_incr' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1095$4152'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\gen_mhpmcounter_incr.sv2v_autoblock_7.i' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1095$4152'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcountinhibit_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1089$4150'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\csr_wdata_int' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$4137'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\exception_pc' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\priv_lvl_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstatus_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstatus_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mie_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mscratch_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mepc_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mepc_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcause_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcause_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtval_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtval_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtvec_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mtvec_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dcsr_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dcsr_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\depc_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\depc_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dscratch0_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\dscratch1_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_en' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_epc_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mstack_cause_d' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcountinhibit_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounter_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mhpmcounterh_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\cpuctrl_we' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3889$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3889$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3890$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3890$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3891$\sv2v_cast_2' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3891$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3892$\sv2v_cast_2' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_2$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3892$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3893$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3893$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3894$\sv2v_cast_1' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$func$\sv2v_cast_1$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:687$3894$\inp' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3895' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:716$3896' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$mask$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3897' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$bitselwrite$data$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:717$3898' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\csr_rdata_int' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\illegal_csr' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2bits$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$3887' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2bits$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$3888' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$4002_ADDR' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$4002_DATA' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$4003_ADDR' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:614$4003_DATA' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$4004_ADDR' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
No latch inferred for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$mem2reg_rd$\mhpmcounter$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:615$4004_DATA' from process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\we_a_dec' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\we_a_decoder.sv2v_autoblock_2.i' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3686$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3687$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3688$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3689$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3690$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3691$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3692$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3693$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3694$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3695$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3696$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3697$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3698$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3699$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3700$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3701$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3702$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3703$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3704$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3705$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3706$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3707$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3708$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3709$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3710$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3711$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3712$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3713$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3714$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3715$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$func$\sv2v_cast_5_unsigned$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3716$\sv2v_cast_5_unsigned' from process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\imd_val_we_o' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3654'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\imd_val_d_o' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3653'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\multicycle_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3652'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\clmul_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3651'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\invbutterfly_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3650'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\butterfly_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3649'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shuffle_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3648'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\rev_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3647'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\singlebit_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3646'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\pack_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3645'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\result_o' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:917$3644'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\bwlogic_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:484$3643'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\bwlogic_op_b_negate' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:472$3632'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\sv2v_autoblock_6.i' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$3626'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_operand' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$3626'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_result_ext' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$3626'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\unused_shift_result_ext' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$3626'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$3626'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_result_rev' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$3626'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_left' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:429$3624'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_amt [4:0]' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:423$3618'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\shift_amt [5]' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:421$3615'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\cmp_result' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:383$3610'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\is_greater_equal' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:377$3605'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\cmp_signed' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:370$3603'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\adder_in_b' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:358$3601'.
No latch inferred for signal `$paramod\ibex_alu\RV32B=0.\adder_op_b_negate' from process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:348$3598'.
No latch inferred for signal `\ibex_compressed_decoder.\instr_o' from process `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$302'.
No latch inferred for signal `\ibex_compressed_decoder.\illegal_instr_o' from process `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$302'.
No latch inferred for signal `\ibex_load_store_unit.\data_req_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
No latch inferred for signal `\ibex_load_store_unit.\addr_incr_req_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
No latch inferred for signal `\ibex_load_store_unit.\perf_load_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
No latch inferred for signal `\ibex_load_store_unit.\perf_store_o' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
No latch inferred for signal `\ibex_load_store_unit.\addr_update' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
No latch inferred for signal `\ibex_load_store_unit.\ctrl_update' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_update' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
No latch inferred for signal `\ibex_load_store_unit.\handle_misaligned_d' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
No latch inferred for signal `\ibex_load_store_unit.\pmp_err_d' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
No latch inferred for signal `\ibex_load_store_unit.\lsu_err_d' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
No latch inferred for signal `\ibex_load_store_unit.\ls_fsm_ns' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
No latch inferred for signal `\ibex_load_store_unit.\data_rdata_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$254'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_b_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$249'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_h_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$244'.
No latch inferred for signal `\ibex_load_store_unit.\rdata_w_ext' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$243'.
No latch inferred for signal `\ibex_load_store_unit.\data_wdata' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$236'.
No latch inferred for signal `\ibex_load_store_unit.\data_be' from process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$233'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\accum' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\sign_a' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\sign_b' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\mult_valid' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\mac_res_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\mult_hold' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_op_a' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_op_b' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_state_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\alu_operand_a_o' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\alu_operand_b_o' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_remainder_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_denominator_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_numerator_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_quotient_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_valid' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_counter_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_hold' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_by_zero_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\md_state_d' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
No latch inferred for signal `$paramod\ibex_multdiv_fast\RV32M=2.\is_greater_equal' from process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:598$3516'.

27.2.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.\rdata_q' using process `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4637'.
  created $adff cell `$procdff$11750' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.\rdata_q' using process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4635'.
  created $adff cell `$procdff$11751' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.\rdata_q' using process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4633'.
  created $adff cell `$procdff$11752' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.\rdata_q' using process `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4631'.
  created $adff cell `$procdff$11753' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.\rdata_q' using process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4629'.
  created $adff cell `$procdff$11754' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_counter\CounterWidth=64.\counter_q' using process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:40$4627'.
  created $adff cell `$procdff$11755' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.\rdata_q' using process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4622'.
  created $adff cell `$procdff$11756' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\rdata_q [95:64]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4720'.
  created $dff cell `$procdff$11757' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\err_q [2]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4720'.
  created $dff cell `$procdff$11758' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\rdata_q [63:32]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4719'.
  created $dff cell `$procdff$11759' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\err_q [1]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4719'.
  created $dff cell `$procdff$11760' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\rdata_q [31:0]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4718'.
  created $dff cell `$procdff$11761' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\err_q [0]' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4718'.
  created $dff cell `$procdff$11762' with positive edge clock.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\valid_q' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:122$4689'.
  created $adff cell `$procdff$11763' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_fetch_fifo\NUM_REQS=2.\instr_addr_q' using process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:90$4676'.
  created $dff cell `$procdff$11764' with positive edge clock.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\ctrl_fsm_cs' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4569'.
  created $adff cell `$procdff$11765' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\nmi_mode_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4569'.
  created $adff cell `$procdff$11766' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\debug_mode_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4569'.
  created $adff cell `$procdff$11767' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\load_err_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4569'.
  created $adff cell `$procdff$11768' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\store_err_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4569'.
  created $adff cell `$procdff$11769' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\exc_req_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4569'.
  created $adff cell `$procdff$11770' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.\illegal_insn_q' using process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4569'.
  created $adff cell `$procdff$11771' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\valid_req_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4438'.
  created $adff cell `$procdff$11772' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\discard_req_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4438'.
  created $adff cell `$procdff$11773' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\rdata_outstanding_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4438'.
  created $adff cell `$procdff$11774' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\branch_discard_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4438'.
  created $adff cell `$procdff$11775' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\rdata_pmp_err_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4438'.
  created $adff cell `$procdff$11776' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\fetch_addr_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:146$4428'.
  created $dff cell `$procdff$11777' with positive edge clock.
Creating register for signal `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.\stored_addr_q' using process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:123$4419'.
  created $dff cell `$procdff$11778' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_rdata_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4388'.
  created $dff cell `$procdff$11779' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_rdata_alu_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4388'.
  created $dff cell `$procdff$11780' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_rdata_c_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4388'.
  created $dff cell `$procdff$11781' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_is_compressed_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4388'.
  created $dff cell `$procdff$11782' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_fetch_err_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4388'.
  created $dff cell `$procdff$11783' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_fetch_err_plus2_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4388'.
  created $dff cell `$procdff$11784' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\illegal_c_insn_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4388'.
  created $dff cell `$procdff$11785' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\pc_id_o' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4388'.
  created $dff cell `$procdff$11786' with positive edge clock.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_valid_id_q' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4386'.
  created $adff cell `$procdff$11787' with positive edge clock and negative level reset.
Creating register for signal `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.\instr_new_id_q' using process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4386'.
  created $adff cell `$procdff$11788' with positive edge clock and negative level reset.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\g_branch_set_flop.branch_set_q' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:863$4346'.
  created $adff cell `$procdff$11789' with positive edge clock and negative level reset.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\imd_val_q [33:0]' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4344'.
  created $adff cell `$procdff$11790' with positive edge clock and negative level reset.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\imd_val_q [67:34]' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4342'.
  created $adff cell `$procdff$11791' with positive edge clock and negative level reset.
Creating register for signal `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.\id_fsm_q' using process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:889$4306'.
  created $adff cell `$procdff$11792' with positive edge clock and negative level reset.
Creating register for signal `\ibex_core.\fetch_enable_q' using process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$337'.
  created $adff cell `$procdff$11793' with positive edge clock and negative level reset.
Creating register for signal `\ibex_core.\core_busy_q' using process `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:546$335'.
  created $adff cell `$procdff$11794' with positive edge clock and negative level reset.
Creating register for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\mcountinhibit_q' using process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1190$4158'.
  created $adff cell `$procdff$11795' with positive edge clock and negative level reset.
Creating register for signal `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.\priv_lvl_q' using process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:775$4134'.
  created $adff cell `$procdff$11796' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [991:960]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3877'.
  created $adff cell `$procdff$11797' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [959:928]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3875'.
  created $adff cell `$procdff$11798' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [927:896]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3873'.
  created $adff cell `$procdff$11799' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [895:864]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3871'.
  created $adff cell `$procdff$11800' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [863:832]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3869'.
  created $adff cell `$procdff$11801' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [831:800]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3867'.
  created $adff cell `$procdff$11802' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [799:768]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3865'.
  created $adff cell `$procdff$11803' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [767:736]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3863'.
  created $adff cell `$procdff$11804' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [735:704]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3861'.
  created $adff cell `$procdff$11805' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [703:672]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3859'.
  created $adff cell `$procdff$11806' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [671:640]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3857'.
  created $adff cell `$procdff$11807' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [639:608]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3855'.
  created $adff cell `$procdff$11808' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [607:576]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3853'.
  created $adff cell `$procdff$11809' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [575:544]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3851'.
  created $adff cell `$procdff$11810' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [543:512]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3849'.
  created $adff cell `$procdff$11811' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [511:480]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3847'.
  created $adff cell `$procdff$11812' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [479:448]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3845'.
  created $adff cell `$procdff$11813' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [447:416]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3843'.
  created $adff cell `$procdff$11814' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [415:384]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3841'.
  created $adff cell `$procdff$11815' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [383:352]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3839'.
  created $adff cell `$procdff$11816' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [351:320]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3837'.
  created $adff cell `$procdff$11817' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [319:288]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3835'.
  created $adff cell `$procdff$11818' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [287:256]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3833'.
  created $adff cell `$procdff$11819' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [255:224]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3831'.
  created $adff cell `$procdff$11820' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [223:192]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3829'.
  created $adff cell `$procdff$11821' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [191:160]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3827'.
  created $adff cell `$procdff$11822' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [159:128]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3825'.
  created $adff cell `$procdff$11823' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [127:96]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3823'.
  created $adff cell `$procdff$11824' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [95:64]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3821'.
  created $adff cell `$procdff$11825' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [63:32]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3819'.
  created $adff cell `$procdff$11826' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.\rf_reg_q [31:0]' using process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3817'.
  created $adff cell `$procdff$11827' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\handle_misaligned_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$283'.
  created $adff cell `$procdff$11828' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\pmp_err_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$283'.
  created $adff cell `$procdff$11829' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\lsu_err_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$283'.
  created $adff cell `$procdff$11830' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\ls_fsm_cs' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$283'.
  created $adff cell `$procdff$11831' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\addr_last_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$241'.
  created $adff cell `$procdff$11832' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\rdata_offset_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$239'.
  created $adff cell `$procdff$11833' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\data_type_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$239'.
  created $adff cell `$procdff$11834' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\data_sign_ext_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$239'.
  created $adff cell `$procdff$11835' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\data_we_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$239'.
  created $adff cell `$procdff$11836' with positive edge clock and negative level reset.
Creating register for signal `\ibex_load_store_unit.\rdata_q' using process `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$237'.
  created $adff cell `$procdff$11837' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\gen_mult_fast.mult_state_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$3564'.
  created $adff cell `$procdff$11838' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_numerator_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$3506'.
  created $adff cell `$procdff$11839' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\op_quotient_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$3506'.
  created $adff cell `$procdff$11840' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_counter_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$3506'.
  created $adff cell `$procdff$11841' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\div_by_zero_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$3506'.
  created $adff cell `$procdff$11842' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_multdiv_fast\RV32M=2.\md_state_q' using process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$3506'.
  created $adff cell `$procdff$11843' with positive edge clock and negative level reset.
Creating register for signal `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.\rdata_q' using process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4639'.
  created $adff cell `$procdff$11844' with positive edge clock and negative level reset.

27.2.9. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4637'.
Removing empty process `$paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4637'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4635'.
Removing empty process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4635'.
Found and cleaned up 1 empty switch in `\prim_clock_gating.$proc$/openLANE_flow/designs/ibex/src/prim_clock_gating.v:16$3368'.
Removing empty process `prim_clock_gating.$proc$/openLANE_flow/designs/ibex/src/prim_clock_gating.v:16$3368'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4633'.
Removing empty process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4633'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4631'.
Removing empty process `$paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4631'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4629'.
Removing empty process `$paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4629'.
Removing empty process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:40$4627'.
Found and cleaned up 3 empty switches in `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4624'.
Removing empty process `$paramod\ibex_counter\CounterWidth=64.$proc$/openLANE_flow/designs/ibex/src/ibex_counter.v:23$4624'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4622'.
Removing empty process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4622'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4720'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4720'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4719'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4719'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4718'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:129$4718'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:122$4689'.
Found and cleaned up 1 empty switch in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:90$4676'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:90$4676'.
Found and cleaned up 2 empty switches in `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4669'.
Removing empty process `$paramod\ibex_fetch_fifo\NUM_REQS=2.$proc$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:70$4669'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:443$4616'.
Found and cleaned up 14 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:720$4601'.
Found and cleaned up 29 empty switches in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:470$4583'.
Found and cleaned up 1 empty switch in `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:461$4577'.
Removing empty process `$paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_decoder.v:461$4577'.
Found and cleaned up 6 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4571'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:517$4571'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:833$4569'.
Found and cleaned up 32 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:589$4514'.
Found and cleaned up 14 empty switches in `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:543$4513'.
Removing empty process `$paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_controller.v:543$4513'.
Removing empty process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:170$4438'.
Found and cleaned up 1 empty switch in `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:146$4428'.
Removing empty process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:146$4428'.
Found and cleaned up 1 empty switch in `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:123$4419'.
Removing empty process `$paramod\ibex_prefetch_buffer\BranchPredictor=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:123$4419'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:0$4391'.
Found and cleaned up 1 empty switch in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4388'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:598$4388'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:586$4386'.
Found and cleaned up 1 empty switch in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:449$4372'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:449$4372'.
Found and cleaned up 1 empty switch in `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4367'.
Removing empty process `$paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_if_stage.v:439$4367'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4366'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:0$4365'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:863$4346'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4344'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4344'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4342'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:679$4342'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:661$4340'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:661$4340'.
Found and cleaned up 6 empty switches in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:896$4308'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:889$4306'.
Found and cleaned up 4 empty switches in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:757$4246'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4245'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:689$4245'.
Found and cleaned up 1 empty switch in `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4239'.
Removing empty process `$paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.$proc$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:616$4239'.
Removing empty process `$paramod\ibex_wb_stage\WritebackStage=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_wb_stage.v:0$4219'.
Removing empty process `ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:0$353'.
Found and cleaned up 1 empty switch in `\ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$337'.
Removing empty process `ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:552$337'.
Removing empty process `ibex_core.$proc$/openLANE_flow/designs/ibex/src/ibex_core.v:546$335'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4179'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4175'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4172'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4169'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4166'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4163'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1190$4158'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1117$4153'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1095$4152'.
Found and cleaned up 1 empty switch in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1089$4150'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:1089$4150'.
Found and cleaned up 1 empty switch in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$4137'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:783$4137'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:775$4134'.
Found and cleaned up 9 empty switches in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:653$4067'.
Found and cleaned up 4 empty switches in `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
Removing empty process `$paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.$proc$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:543$4027'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3877'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3877'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3875'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3875'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3873'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3873'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3871'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3871'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3869'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3869'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3867'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3867'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3865'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3865'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3863'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3863'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3861'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3861'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3859'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3859'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3857'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3857'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3855'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3855'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3853'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3853'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3851'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3851'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3849'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3849'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3847'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3847'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3845'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3845'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3843'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3843'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3841'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3841'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3839'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3839'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3837'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3837'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3835'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3835'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3833'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3833'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3831'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3831'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3829'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3829'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3827'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3827'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3825'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3825'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3823'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3823'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3821'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3821'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3819'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3819'.
Found and cleaned up 1 empty switch in `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3817'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:47$3817'.
Removing empty process `$paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.$proc$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:37$3717'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3654'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3653'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3652'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3651'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3650'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3649'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3648'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3647'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3646'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:0$3645'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:917$3644'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:917$3644'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:484$3643'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:484$3643'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:472$3632'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:472$3632'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:445$3626'.
Found and cleaned up 2 empty switches in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:429$3624'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:429$3624'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:423$3618'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:423$3618'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:421$3615'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:383$3610'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:383$3610'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:377$3605'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:377$3605'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:370$3603'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:370$3603'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:358$3601'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:358$3601'.
Found and cleaned up 1 empty switch in `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:348$3598'.
Removing empty process `$paramod\ibex_alu\RV32B=0.$proc$/openLANE_flow/designs/ibex/src/ibex_alu.v:348$3598'.
Found and cleaned up 17 empty switches in `\ibex_compressed_decoder.$proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$302'.
Removing empty process `ibex_compressed_decoder.$proc$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:320$302'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:311$283'.
Found and cleaned up 8 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:231$262'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$254'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:218$254'.
Found and cleaned up 5 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$249'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:194$249'.
Found and cleaned up 5 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$244'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:170$244'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$243'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:162$243'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$241'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:157$241'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$239'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:144$239'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$237'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:139$237'.
Found and cleaned up 1 empty switch in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$236'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:131$236'.
Found and cleaned up 7 empty switches in `\ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$233'.
Removing empty process `ibex_load_store_unit.$proc$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:91$233'.
Found and cleaned up 1 empty switch in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$3564'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:585$3564'.
Found and cleaned up 3 empty switches in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:520$3554'.
Found and cleaned up 4 empty switches in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:613$3525'.
Found and cleaned up 1 empty switch in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:598$3516'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:598$3516'.
Found and cleaned up 1 empty switch in `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$3506'.
Removing empty process `$paramod\ibex_multdiv_fast\RV32M=2.$proc$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:392$3506'.
Found and cleaned up 1 empty switch in `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4639'.
Removing empty process `$paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.$proc$/openLANE_flow/designs/ibex/src/ibex_csr.v:19$4639'.
Cleaned up 249 empty switches.

27.3. Executing FLATTEN pass (flatten design).
Deleting now unused module $paramod\ibex_csr\Width=18\ShadowCopy=1'0\ResetValue=1'0.
Deleting now unused module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1.
Deleting now unused module prim_clock_gating.
Deleting now unused module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1073741827.
Deleting now unused module $paramod\ibex_csr\Width=3\ShadowCopy=1'0\ResetValue=3'100.
Deleting now unused module $paramod\ibex_csr\Width=32\ShadowCopy=1'0\ResetValue=1'0.
Deleting now unused module $paramod\ibex_counter\CounterWidth=64.
Deleting now unused module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=1'0.
Deleting now unused module $paramod\ibex_fetch_fifo\NUM_REQS=2.
Deleting now unused module $paramod\ibex_decoder\RV32E=1'0\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Deleting now unused module $paramod\ibex_controller\WritebackStage=1'0\BranchPredictor=1'0.
Deleting now unused module $paramod\ibex_prefetch_buffer\BranchPredictor=1'0.
Deleting now unused module $paramod$199754e9db346f78ec527ab138be30ba1d7f688a\ibex_if_stage.
Deleting now unused module $paramod$9ca968c80872e6740b3dd237b850f8212ebaba4d\ibex_id_stage.
Deleting now unused module $paramod\ibex_ex_block\RV32M=2\RV32B=0\BranchTargetALU=1'0.
Deleting now unused module $paramod\ibex_wb_stage\WritebackStage=1'0.
Deleting now unused module $paramod$49244192a2ba3071ca69fa62cb4210f38067720f\ibex_cs_registers.
Deleting now unused module $paramod\ibex_register_file_ff\RV32E=1'0\DataWidth=32\DummyInstructions=1'0.
Deleting now unused module $paramod\ibex_alu\RV32B=0.
Deleting now unused module ibex_compressed_decoder.
Deleting now unused module ibex_load_store_unit.
Deleting now unused module $paramod\ibex_multdiv_fast\RV32M=2.
Deleting now unused module $paramod\ibex_csr\Width=6\ShadowCopy=1'0\ResetValue=6'010000.
<suppressed ~32 debug messages>

27.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~526 debug messages>

27.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 746 unused cells and 3109 unused wires.
<suppressed ~779 debug messages>

27.6. Executing CHECK pass (checking for obvious problems).
checking module ibex_core..
found and reported 0 problems.

27.7. Executing OPT pass (performing simple optimizations).

27.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

27.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~8538 debug messages>
Removed a total of 2846 cells.

27.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\id_stage_i.$procmux$7967: \id_stage_i.id_fsm_q -> 1'1
      Replacing known input bits on port B of cell $flatten\id_stage_i.$procmux$8046: \id_stage_i.id_fsm_q -> 1'0
      Replacing known input bits on port A of cell $flatten\id_stage_i.\controller_i.$procmux$6392: \id_stage_i.controller_i.nmi_mode_q -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11632.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11644.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11528.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$7969.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$7971.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$7977.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$7979.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$7985.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$7987.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$7993.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$7995.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8001.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8003.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8014.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8016.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8018.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8020.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8031.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8033.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8035.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8037.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8048.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8050.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8052.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8054.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8063.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8065.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8067.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8082.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8084.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8099.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8101.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8116.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8118.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8132.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8134.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8147.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8149.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8161.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8163.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8177.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8179.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8192.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8194.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8230.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11534.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8236.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8242.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8248.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8254.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8260.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8266.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8272.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8320.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8323.
    dead port 1/2 on $mux $flatten\id_stage_i.$procmux$8329.
    dead port 2/2 on $mux $flatten\id_stage_i.$procmux$8383.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6114.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6117.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6120.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6123.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6126.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6132.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6135.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6138.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6141.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6147.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6150.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6153.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6156.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6162.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6165.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6168.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6174.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6177.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6180.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6186.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6189.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6192.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6198.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6201.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6207.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6210.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6216.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6219.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6225.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6228.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6234.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6240.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6246.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6252.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6258.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6282.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6289.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6292.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6295.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6298.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6300.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6307.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6310.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6313.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6315.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6322.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6325.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6327.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6334.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6337.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6339.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6346.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6349.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6351.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6358.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6361.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6363.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6370.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6373.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6375.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6382.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6385.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6387.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6394.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6397.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6399.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11540.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6406.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6408.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6415.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6417.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6424.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6426.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6433.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6435.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6442.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6444.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6451.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6453.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6460.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6462.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6469.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6471.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6481.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6483.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6485.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6487.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6489.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6491.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6501.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6503.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6505.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6507.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6509.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6511.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6521.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6523.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6525.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6527.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6529.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6531.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6561.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6563.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6565.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6567.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6569.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6571.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6581.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6583.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6585.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6587.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6589.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6591.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11547.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6601.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6603.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6605.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6607.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6609.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6611.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9486.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6628.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6630.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6647.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6649.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6664.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6666.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6681.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6683.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6698.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6700.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6732.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6734.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6749.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6751.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6763.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6769.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6775.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6781.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6793.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6799.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6805.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6811.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6817.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6823.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6829.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6835.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6841.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6847.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6854.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6868.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9500.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6880.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6882.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6891.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6893.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6901.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6909.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6917.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6925.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6933.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6941.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6949.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6957.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6968.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6971.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6974.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6976.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6978.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6989.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6992.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6994.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$6996.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7007.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7009.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7011.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7051.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7053.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7063.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7065.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7116.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7125.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7134.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7143.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7152.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7161.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7173.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7175.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7177.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7189.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7191.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7193.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7204.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7206.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7217.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7219.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7229.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7239.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7249.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7259.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7296.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7298.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7328.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7339.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7341.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7351.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7361.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7372.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7383.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7394.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7405.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7416.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7428.
    dead port 2/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7440.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9515.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11563.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9531.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10400.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7609.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7612.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7615.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7618.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7621.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7624.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7627.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7630.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7633.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7636.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7639.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7642.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7645.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7651.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7654.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7657.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7660.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7663.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7666.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7669.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7672.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7675.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7678.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7681.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7684.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7690.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7693.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7696.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7699.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7702.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7705.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7708.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7711.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7714.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7717.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7720.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7726.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7729.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7732.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7735.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7738.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7741.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7744.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7747.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7750.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7753.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7759.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7762.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7765.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7768.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7771.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7774.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7777.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7780.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7783.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7789.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7792.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7795.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7798.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7801.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7804.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7807.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7810.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7816.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7819.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7822.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7825.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7828.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7831.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7834.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7840.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7843.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7846.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7849.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7852.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7855.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7861.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7864.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7867.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7870.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7873.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7879.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7882.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7885.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7888.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7894.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7897.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7900.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7906.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7909.
    dead port 1/2 on $mux $flatten\id_stage_i.\controller_i.$procmux$7915.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4788.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4790.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4795.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4801.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4806.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4812.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4817.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4819.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4824.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8453.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4826.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8455.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4831.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9548.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4833.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8457.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4838.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4840.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8463.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8465.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4847.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8467.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8473.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4855.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8475.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8477.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4863.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8483.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8485.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4870.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8487.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4895.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4897.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8493.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8495.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4909.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4911.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8497.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4927.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4929.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8510.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4937.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8512.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4945.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8514.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4953.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4963.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4965.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4967.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4976.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8523.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4978.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8525.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4984.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4986.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8534.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4993.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8536.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$4995.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8545.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8547.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5010.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8556.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5023.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5036.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8558.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5050.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5064.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5078.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8567.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5092.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8569.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8578.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8580.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8589.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8591.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5111.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5125.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5140.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8600.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5154.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8602.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5169.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5184.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5200.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8611.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5215.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8613.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5230.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8622.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8624.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8632.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8640.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8648.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8656.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8664.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8672.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8680.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8688.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8696.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8704.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8712.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8720.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8728.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8736.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5320.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5322.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8748.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5331.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5333.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5349.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5351.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5362.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5364.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5375.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5377.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5384.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5386.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9566.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5394.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5396.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5405.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5407.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5417.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5419.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5425.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5431.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5437.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5443.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5449.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5455.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5461.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5473.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5485.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5491.
    dead port 1/2 on $mux $flatten\cs_registers_i.$procmux$8832.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5509.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5511.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5518.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8834.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5526.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5533.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5540.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8859.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5564.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5566.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8879.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5579.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5581.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8899.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8912.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5596.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5598.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8925.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5606.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5614.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5622.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8945.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5631.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5634.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5636.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5638.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5648.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5651.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5653.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5655.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5663.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8958.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5666.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5668.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5670.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5681.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5684.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5686.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8971.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5688.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5697.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5700.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5702.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8984.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5704.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$8997.
    dead port 1/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5717.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5719.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5721.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5730.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9010.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5732.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5743.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5745.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5747.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9023.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5758.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5760.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9585.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5762.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9036.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9049.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5774.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5776.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9063.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9065.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9084.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5786.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5799.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9105.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5801.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5815.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9107.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9367.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5829.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9403.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5844.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5859.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5872.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5886.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5901.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5916.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5931.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5947.
    dead port 2/2 on $mux $flatten\id_stage_i.\decoder_i.$procmux$5963.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10129.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11620.
    dead port 1/2 on $mux $flatten\cs_registers_i.\mcycle_counter_i.$procmux$4738.
    dead port 1/2 on $mux $flatten\cs_registers_i.\minstret_counter_i.$procmux$4738.
    dead port 1/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10708.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10711.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10713.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10715.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10724.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10726.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10728.
    dead port 1/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10738.
    dead port 1/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10740.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10742.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10744.
    dead port 1/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10753.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10755.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10757.
    dead port 1/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10766.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10768.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10770.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10778.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10780.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10788.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10790.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10799.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10801.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10811.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10813.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10822.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10831.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10842.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10844.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10846.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10857.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10859.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10861.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10871.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10873.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10875.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10884.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10886.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10895.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10897.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10906.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10908.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10917.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10919.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10930.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10941.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10952.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10954.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10964.
    dead port 2/2 on $mux $flatten\if_stage_i.\compressed_decoder_i.$procmux$10974.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9410.
    dead port 2/2 on $mux $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procmux$4769.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$10990.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$10996.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11002.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11008.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11014.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11021.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11028.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11035.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11042.
    dead port 1/2 on $mux $flatten\load_store_unit_i.$procmux$11051.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11053.
    dead port 1/2 on $mux $flatten\load_store_unit_i.$procmux$11062.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11064.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11072.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11080.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11088.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11096.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11104.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11112.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11121.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11130.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11139.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11148.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11159.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11161.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11172.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11174.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11185.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11187.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11198.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11200.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11210.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11220.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11230.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11240.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11270.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11280.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11290.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$10038.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11600.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9418.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9427.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11366.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11372.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11379.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11387.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9437.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11397.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11403.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11410.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11418.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9448.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11452.
    dead port 1/2 on $mux $flatten\load_store_unit_i.$procmux$11461.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11463.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11469.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11479.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11481.
    dead port 1/2 on $mux $flatten\load_store_unit_i.$procmux$11491.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11493.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9460.
    dead port 2/2 on $mux $flatten\load_store_unit_i.$procmux$11500.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11608.
    dead port 2/2 on $mux $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11522.
    dead port 2/2 on $mux $flatten\cs_registers_i.$procmux$9473.
Removed 708 multiplexer ports.
<suppressed ~281 debug messages>

27.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10046: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11554: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11511_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11510_CMP $auto$opt_reduce.cc:134:opt_mux$11846 }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11651: $auto$opt_reduce.cc:134:opt_mux$11848
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10179: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$7443: { $flatten\id_stage_i.\controller_i.$procmux$7453_CMP $flatten\id_stage_i.\controller_i.$procmux$7452_CMP $flatten\id_stage_i.\controller_i.$procmux$7451_CMP $flatten\id_stage_i.\controller_i.$procmux$7429_CMP $flatten\id_stage_i.\controller_i.$procmux$7373_CMP $flatten\id_stage_i.\controller_i.$procmux$7178_CMP $auto$opt_reduce.cc:134:opt_mux$11850 $flatten\id_stage_i.\controller_i.$procmux$6283_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9736: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$7455: { $flatten\id_stage_i.\controller_i.$procmux$7178_CMP $flatten\id_stage_i.\controller_i.$procmux$6979_CMP $flatten\id_stage_i.\controller_i.$procmux$6883_CMP $auto$opt_reduce.cc:134:opt_mux$11852 $flatten\id_stage_i.\controller_i.$procmux$6283_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10367: { $flatten\cs_registers_i.$procmux$10037_CMP $flatten\cs_registers_i.$procmux$10035_CMP $auto$opt_reduce.cc:134:opt_mux$11854 }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10271: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$7464: { $flatten\id_stage_i.\controller_i.$procmux$7178_CMP $flatten\id_stage_i.\controller_i.$procmux$6979_CMP $flatten\id_stage_i.\controller_i.$procmux$6883_CMP $auto$opt_reduce.cc:134:opt_mux$11856 $flatten\id_stage_i.\controller_i.$procmux$6283_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$7473: { $flatten\id_stage_i.\controller_i.$procmux$7178_CMP $auto$opt_reduce.cc:134:opt_mux$11858 $flatten\id_stage_i.\controller_i.$procmux$6283_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9908: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL $flatten\cs_registers_i.$procmux$10134_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$7480: $auto$opt_reduce.cc:134:opt_mux$11860
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$7508: { $flatten\id_stage_i.\controller_i.$procmux$7373_CMP $flatten\id_stage_i.\controller_i.$procmux$7178_CMP $auto$opt_reduce.cc:134:opt_mux$11862 }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9692: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$7531: { $flatten\id_stage_i.\controller_i.$procmux$6883_CMP $auto$opt_reduce.cc:134:opt_mux$11864 $flatten\id_stage_i.\controller_i.$procmux$6283_CMP }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11657: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11653_CMP $auto$opt_reduce.cc:134:opt_mux$11866 $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11601_CMP }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11565: { $auto$opt_reduce.cc:134:opt_mux$11870 $auto$opt_reduce.cc:134:opt_mux$11868 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$7558: $flatten\id_stage_i.\controller_i.$procmux$6883_CMP
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10096: { $flatten\cs_registers_i.$procmux$10037_CMP $flatten\cs_registers_i.$procmux$10035_CMP $auto$opt_reduce.cc:134:opt_mux$11872 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$7591: { $auto$opt_reduce.cc:134:opt_mux$11874 $flatten\id_stage_i.\controller_i.$procmux$6283_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$8437: { $flatten\cs_registers_i.$eq$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:791$4142_Y $flatten\cs_registers_i.$eq$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:791$4141_Y $auto$opt_reduce.cc:134:opt_mux$11876 }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11667: $auto$opt_reduce.cc:134:opt_mux$11878
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9867: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $auto$opt_reduce.cc:134:opt_mux$11880 $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL }
    New ctrl vector for $pmux cell $flatten\id_stage_i.$procmux$8233: $auto$opt_reduce.cc:134:opt_mux$11882
    New ctrl vector for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$4845: { }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$4860: $auto$opt_reduce.cc:134:opt_mux$11884
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$4876: { $flatten\id_stage_i.\decoder_i.$procmux$4892_CMP $flatten\id_stage_i.\decoder_i.$procmux$4891_CMP $flatten\id_stage_i.\decoder_i.$procmux$4890_CMP $flatten\id_stage_i.\decoder_i.$procmux$4889_CMP $flatten\id_stage_i.\decoder_i.$procmux$4888_CMP $flatten\id_stage_i.\decoder_i.$procmux$4887_CMP $flatten\id_stage_i.\decoder_i.$procmux$4886_CMP $flatten\id_stage_i.\decoder_i.$procmux$4885_CMP $auto$opt_reduce.cc:134:opt_mux$11886 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$4903: $auto$opt_reduce.cc:134:opt_mux$11888
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$4921: $auto$opt_reduce.cc:134:opt_mux$11890
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5233: { $flatten\id_stage_i.\decoder_i.$procmux$5051_CMP $flatten\id_stage_i.\decoder_i.$procmux$5024_CMP $flatten\id_stage_i.\decoder_i.$procmux$4898_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5242: { $flatten\id_stage_i.\decoder_i.$procmux$5126_CMP $flatten\id_stage_i.\decoder_i.$procmux$5051_CMP $auto$opt_reduce.cc:134:opt_mux$11894 $auto$opt_reduce.cc:134:opt_mux$11892 $flatten\id_stage_i.\decoder_i.$procmux$4820_CMP $flatten\id_stage_i.\decoder_i.$procmux$4791_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9780: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11570: { $auto$opt_reduce.cc:134:opt_mux$11898 $auto$opt_reduce.cc:134:opt_mux$11896 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5255: { $flatten\id_stage_i.\decoder_i.$procmux$5051_CMP $auto$opt_reduce.cc:134:opt_mux$11900 $flatten\id_stage_i.\decoder_i.$procmux$4968_CMP $flatten\id_stage_i.\decoder_i.$procmux$4898_CMP $flatten\id_stage_i.\decoder_i.$procmux$4820_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5267: { $flatten\id_stage_i.\decoder_i.$procmux$5185_CMP $flatten\id_stage_i.\decoder_i.$procmux$5126_CMP $flatten\id_stage_i.\decoder_i.$procmux$5051_CMP $flatten\id_stage_i.\decoder_i.$procmux$5024_CMP $auto$opt_reduce.cc:134:opt_mux$11902 $flatten\id_stage_i.\decoder_i.$procmux$4820_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9956: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5326: $auto$opt_reduce.cc:134:opt_mux$11904
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5369: $auto$opt_reduce.cc:134:opt_mux$11906
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5523: $auto$opt_reduce.cc:134:opt_mux$11908
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5553: $auto$opt_reduce.cc:134:opt_mux$11910
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5573: { $flatten\id_stage_i.\decoder_i.$procmux$5559_CMP $auto$opt_reduce.cc:134:opt_mux$11912 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5587: { $auto$opt_reduce.cc:134:opt_mux$11918 $auto$opt_reduce.cc:134:opt_mux$11916 $auto$opt_reduce.cc:134:opt_mux$11914 }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11575: { $auto$opt_reduce.cc:134:opt_mux$11922 $auto$opt_reduce.cc:134:opt_mux$11920 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5711: $flatten\id_stage_i.\decoder_i.$procmux$5715_CTRL
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10408: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5770: $flatten\id_stage_i.\decoder_i.$procmux$5715_CMP [0]
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10541: { $auto$opt_reduce.cc:134:opt_mux$11926 $auto$opt_reduce.cc:134:opt_mux$11924 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5825: { $auto$opt_reduce.cc:134:opt_mux$11928 $flatten\id_stage_i.\decoder_i.$procmux$5317_CMP }
    New ctrl vector for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6392: { }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5855: $auto$opt_reduce.cc:134:opt_mux$11930
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11580: { $auto$opt_reduce.cc:134:opt_mux$11934 $auto$opt_reduce.cc:134:opt_mux$11932 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5966: { $flatten\id_stage_i.\decoder_i.$procmux$5948_CMP $flatten\id_stage_i.\decoder_i.$procmux$5902_CMP $auto$opt_reduce.cc:134:opt_mux$11936 $flatten\id_stage_i.\decoder_i.$procmux$5323_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9822: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL $flatten\cs_registers_i.$procmux$10134_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5983: { $auto$opt_reduce.cc:134:opt_mux$11938 $flatten\id_stage_i.\decoder_i.$procmux$5512_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10005: { $flatten\cs_registers_i.$procmux$10037_CMP $flatten\cs_registers_i.$procmux$10035_CMP $auto$opt_reduce.cc:134:opt_mux$11940 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5991: { $flatten\id_stage_i.\decoder_i.$procmux$5902_CMP $flatten\id_stage_i.\decoder_i.$procmux$5887_CMP $flatten\id_stage_i.\decoder_i.$procmux$5845_CMP $flatten\id_stage_i.\decoder_i.$procmux$5802_CMP $auto$opt_reduce.cc:134:opt_mux$11942 $flatten\id_stage_i.\decoder_i.$procmux$5639_CMP $flatten\id_stage_i.\decoder_i.$procmux$5567_CMP $flatten\id_stage_i.\decoder_i.$procmux$5512_CMP $flatten\id_stage_i.\decoder_i.$procmux$5323_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6104: $auto$opt_reduce.cc:134:opt_mux$11944
    New ctrl vector for $pmux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$10851: { $auto$opt_reduce.cc:134:opt_mux$11946 $flatten\if_stage_i.\compressed_decoder_i.$procmux$10837_CTRL }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11585: $auto$opt_reduce.cc:134:opt_mux$11948
    New ctrl vector for $pmux cell $flatten\ex_block_i.\alu_i.$procmux$10645: { $flatten\ex_block_i.\alu_i.$procmux$10659_CTRL $flatten\ex_block_i.\alu_i.$procmux$10658_CTRL $flatten\ex_block_i.\alu_i.$procmux$10657_CTRL $flatten\ex_block_i.\alu_i.$procmux$10655_CTRL }
    New ctrl vector for $pmux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$10934: { $flatten\if_stage_i.\compressed_decoder_i.$procmux$10817_CMP [1] $flatten\if_stage_i.\compressed_decoder_i.$procmux$10714_CMP $auto$opt_reduce.cc:134:opt_mux$11950 }
    New ctrl vector for $pmux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$10959: { $flatten\if_stage_i.\compressed_decoder_i.$procmux$10812_CMP $auto$opt_reduce.cc:134:opt_mux$11952 $flatten\if_stage_i.\compressed_decoder_i.$procmux$10960_CTRL }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11590: { $auto$opt_reduce.cc:134:opt_mux$11954 $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11510_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11509_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10133: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL $flatten\cs_registers_i.$procmux$10134_CMP }
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$11345: { $flatten\load_store_unit_i.$eq$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:325$288_Y $auto$opt_reduce.cc:134:opt_mux$11956 }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10225: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL }
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$11355: { $flatten\load_store_unit_i.$procmux$11022_CMP $auto$opt_reduce.cc:134:opt_mux$11958 }
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11508: { $auto$opt_reduce.cc:134:opt_mux$11960 $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11510_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11509_CMP }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10316: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$9829_CTRL $flatten\cs_registers_i.$procmux$10139_CTRL $flatten\cs_registers_i.$procmux$10320_CTRL }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11909: { $flatten\id_stage_i.\decoder_i.$procmux$5562_CMP $flatten\id_stage_i.\decoder_i.$procmux$5561_CMP $flatten\id_stage_i.\decoder_i.$procmux$5560_CMP $flatten\id_stage_i.\decoder_i.$procmux$5559_CMP $flatten\id_stage_i.\decoder_i.$procmux$5558_CMP $flatten\id_stage_i.\decoder_i.$procmux$5557_CMP $flatten\id_stage_i.\decoder_i.$procmux$5556_CMP $flatten\id_stage_i.\decoder_i.$procmux$5555_CMP $flatten\id_stage_i.\decoder_i.$procmux$5554_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11923: { $flatten\cs_registers_i.$procmux$10039_CMP $flatten\cs_registers_i.$procmux$10051_CMP $flatten\cs_registers_i.$procmux$10052_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10074_CMP $flatten\cs_registers_i.$procmux$10075_CMP $flatten\cs_registers_i.$procmux$10076_CMP $flatten\cs_registers_i.$procmux$10077_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10134_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$procmux$10542_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:128:opt_mux$11949: { $flatten\if_stage_i.\compressed_decoder_i.$procmux$10818_CMP $flatten\if_stage_i.\compressed_decoder_i.$procmux$10817_CMP [3:2] $flatten\if_stage_i.\compressed_decoder_i.$procmux$10817_CMP [0] $flatten\if_stage_i.\compressed_decoder_i.$procmux$10812_CMP $flatten\if_stage_i.\compressed_decoder_i.$procmux$10800_CMP }
  Optimizing cells in module \ibex_core.
Performed a total of 73 changes.

27.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~195 debug messages>
Removed a total of 65 cells.

27.7.6. Executing OPT_DFF pass (perform DFF optimizations).

27.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 51 unused cells and 2213 unused wires.
<suppressed ~56 debug messages>

27.7.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~5 debug messages>

27.7.9. Rerunning OPT passes. (Maybe there is more to do..)

27.7.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~297 debug messages>

27.7.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11554: { $auto$opt_reduce.cc:134:opt_mux$11962 $auto$opt_reduce.cc:134:opt_mux$11846 }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5242: { $auto$opt_reduce.cc:134:opt_mux$11964 $auto$opt_reduce.cc:134:opt_mux$11894 $auto$opt_reduce.cc:134:opt_mux$11892 $flatten\id_stage_i.\decoder_i.$procmux$4820_CMP $flatten\id_stage_i.\decoder_i.$procmux$4791_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5966: { $auto$opt_reduce.cc:134:opt_mux$11966 $auto$opt_reduce.cc:134:opt_mux$11936 $flatten\id_stage_i.\decoder_i.$procmux$5323_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5977: { $auto$opt_reduce.cc:134:opt_mux$11968 $flatten\id_stage_i.\decoder_i.$procmux$5512_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$6030: $auto$opt_reduce.cc:134:opt_mux$11970
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$11318: { $flatten\load_store_unit_i.$eq$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:325$288_Y $auto$opt_reduce.cc:134:opt_mux$11972 }
  Optimizing cells in module \ibex_core.
Performed a total of 6 changes.

27.7.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

27.7.13. Executing OPT_DFF pass (perform DFF optimizations).

27.7.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 7 unused wires.
<suppressed ~1 debug messages>

27.7.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

27.7.16. Rerunning OPT passes. (Maybe there is more to do..)

27.7.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~297 debug messages>

27.7.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

27.7.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

27.7.20. Executing OPT_DFF pass (perform DFF optimizations).

27.7.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

27.7.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

27.7.23. Finished OPT passes. (There is nothing left to do.)

27.8. Executing FSM pass (extract and optimize FSM).

27.8.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking ibex_core.cs_registers_i.u_cpuctrl_csr.rdata_q as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register ibex_core.ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q.
Found FSM state register ibex_core.ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q.
Not marking ibex_core.id_stage_i.controller_i.ctrl_fsm_cs as FSM state register:
    Circuit seems to be self-resetting.
Found FSM state register ibex_core.load_store_unit_i.data_type_q.
Not marking ibex_core.load_store_unit_i.ls_fsm_cs as FSM state register:
    Users of register don't seem to benefit from recoding.
    Circuit seems to be self-resetting.

27.8.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q' from module `\ibex_core'.
  found $adff cell for state register: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11838
  root of input selection tree: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: \ex_block_i.gen_multdiv_fast.multdiv_i.mult_en_internal
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11509_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11510_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11511_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11512_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:546$3556_Y
  found state code: 2'11
  found state code: 2'10
  found state code: 2'01
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11509_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11510_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11511_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11512_CMP
  ctrl inputs: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:546$3556_Y \ex_block_i.gen_multdiv_fast.multdiv_i.mult_en_internal }
  ctrl outputs: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11512_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11511_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11510_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11509_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0] }
  transition:       2'00 2'-0 ->       2'00 6'100000
  transition:       2'00 2'-1 ->       2'01 6'100001
  transition:       2'10 2'-0 ->       2'10 6'001010
  transition:       2'10 2'01 ->       2'11 6'001011
  transition:       2'10 2'11 ->       2'00 6'001000
  transition:       2'01 2'-0 ->       2'01 6'010001
  transition:       2'01 2'-1 ->       2'10 6'010010
  transition:       2'11 2'-0 ->       2'11 6'000111
  transition:       2'11 2'-1 ->       2'00 6'000100
Extracting FSM `\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q' from module `\ibex_core'.
  found $adff cell for state register: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11843
  root of input selection tree: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0]
  found reset state: 3'000 (from async reset)
  found ctrl input: \ex_block_i.gen_multdiv_fast.multdiv_i.div_en_internal
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11601_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11609_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11660_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11652_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11653_CMP
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11621_CMP
  found state code: 3'110
  found state code: 3'101
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:659$3541_Y
  found state code: 3'011
  found state code: 3'100
  found state code: 3'010
  found ctrl input: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$logic_and$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:629$3530_Y
  found state code: 3'001
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11601_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11609_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11621_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11652_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11653_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11660_CMP
  found ctrl output: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11701_CMP
  ctrl inputs: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:659$3541_Y $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$logic_and$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:629$3530_Y \ex_block_i.gen_multdiv_fast.multdiv_i.div_en_internal }
  ctrl outputs: { $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11701_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11660_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11653_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11652_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11621_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11609_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11601_CMP $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] }
  transition:      3'000 3'--0 ->      3'000 10'0000100000
  transition:      3'000 3'-01 ->      3'001 10'0000100001
  transition:      3'000 3'-11 ->      3'110 10'0000100110
  transition:      3'100 3'--0 ->      3'100 10'0000010100
  transition:      3'100 3'--1 ->      3'101 10'0000010101
  transition:      3'010 3'--0 ->      3'010 10'0001000010
  transition:      3'010 3'--1 ->      3'011 10'0001000011
  transition:      3'110 3'--0 ->      3'110 10'1000000110
  transition:      3'110 3'--1 ->      3'000 10'1000000000
  transition:      3'001 3'--0 ->      3'001 10'0010000001
  transition:      3'001 3'--1 ->      3'010 10'0010000010
  transition:      3'101 3'--0 ->      3'101 10'0000001101
  transition:      3'101 3'--1 ->      3'110 10'0000001110
  transition:      3'011 3'--0 ->      3'011 10'0100000011
  transition:      3'011 3'0-1 ->      3'011 10'0100000011
  transition:      3'011 3'1-1 ->      3'100 10'0100000100
Extracting FSM `\load_store_unit_i.data_type_q' from module `\ibex_core'.
  found $adff cell for state register: $flatten\load_store_unit_i.$procdff$11834
  root of input selection tree: $flatten\load_store_unit_i.$0\data_type_q[1:0]
  found reset state: 2'00 (from async reset)
  found ctrl input: \load_store_unit_i.ctrl_update
  found ctrl input: $auto$opt_reduce.cc:134:opt_mux$11944
  found ctrl input: $flatten\id_stage_i.\decoder_i.$procmux$5318_CMP
  found ctrl input: $flatten\id_stage_i.\decoder_i.$procmux$5814_CMP
  found state code: 2'01
  found state code: 2'10
  found ctrl output: $flatten\load_store_unit_i.$procmux$11362_CMP
  found ctrl output: $flatten\load_store_unit_i.$procmux$11361_CMP
  found ctrl output: $flatten\load_store_unit_i.$procmux$11360_CMP [1]
  found ctrl output: $flatten\load_store_unit_i.$procmux$11360_CMP [0]
  ctrl inputs: { \load_store_unit_i.ctrl_update $flatten\id_stage_i.\decoder_i.$procmux$5814_CMP $flatten\id_stage_i.\decoder_i.$procmux$5318_CMP $auto$opt_reduce.cc:134:opt_mux$11944 }
  ctrl outputs: { $flatten\load_store_unit_i.$0\data_type_q[1:0] $flatten\load_store_unit_i.$procmux$11360_CMP $flatten\load_store_unit_i.$procmux$11361_CMP $flatten\load_store_unit_i.$procmux$11362_CMP }
  transition:       2'00 4'0--- ->       2'00 6'000001
  transition:       2'00 4'1--0 ->       2'00 6'000001
  transition:       2'00 4'1001 ->       2'00 6'000001
  transition:       2'00 4'11-1 ->       2'10 6'100001
  transition:       2'00 4'1-11 ->       2'01 6'010001
  transition:       2'10 4'0--- ->       2'10 6'100100
  transition:       2'10 4'1--0 ->       2'00 6'000100
  transition:       2'10 4'1001 ->       2'00 6'000100
  transition:       2'10 4'11-1 ->       2'10 6'100100
  transition:       2'10 4'1-11 ->       2'01 6'010100
  transition:       2'01 4'0--- ->       2'01 6'010010
  transition:       2'01 4'1--0 ->       2'00 6'000010
  transition:       2'01 4'1001 ->       2'00 6'000010
  transition:       2'01 4'11-1 ->       2'10 6'100010
  transition:       2'01 4'1-11 ->       2'01 6'010010

27.8.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\load_store_unit_i.data_type_q$11988' from module `\ibex_core'.
Optimizing FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11979' from module `\ibex_core'.
Optimizing FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11973' from module `\ibex_core'.

27.8.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 26 unused cells and 26 unused wires.
<suppressed ~29 debug messages>

27.8.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11973' from module `\ibex_core'.
  Removing unused output signal $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0] [0].
  Removing unused output signal $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\gen_mult_fast.mult_state_q[1:0] [1].
Optimizing FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11979' from module `\ibex_core'.
  Removing unused output signal $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] [0].
  Removing unused output signal $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] [1].
  Removing unused output signal $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$0\md_state_q[2:0] [2].
Optimizing FSM `$fsm$\load_store_unit_i.data_type_q$11988' from module `\ibex_core'.
  Removing unused output signal $flatten\load_store_unit_i.$0\data_type_q[1:0] [0].
  Removing unused output signal $flatten\load_store_unit_i.$0\data_type_q[1:0] [1].

27.8.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11973' from module `\ibex_core' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---
Recoding FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11979' from module `\ibex_core' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ------1
  100 -> -----1-
  010 -> ----1--
  110 -> ---1---
  001 -> --1----
  101 -> -1-----
  011 -> 1------
Recoding FSM `$fsm$\load_store_unit_i.data_type_q$11988' from module `\ibex_core' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> --1
  10 -> -1-
  01 -> 1--

27.8.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11973' from module `ibex_core':
-------------------------------------

  Information on FSM $fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11973 (\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q):

  Number of input signals:    2
  Number of output signals:   4
  Number of state bits:       4

  Input signals:
    0: \ex_block_i.gen_multdiv_fast.multdiv_i.mult_en_internal
    1: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:546$3556_Y

  Output signals:
    0: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11509_CMP
    1: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11510_CMP
    2: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11511_CMP
    3: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11512_CMP

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'-0   ->     0 4'1000
      1:     0 2'-1   ->     2 4'1000
      2:     1 2'11   ->     0 4'0010
      3:     1 2'-0   ->     1 4'0010
      4:     1 2'01   ->     3 4'0010
      5:     2 2'-1   ->     1 4'0100
      6:     2 2'-0   ->     2 4'0100
      7:     3 2'-1   ->     0 4'0001
      8:     3 2'-0   ->     3 4'0001

-------------------------------------

FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11979' from module `ibex_core':
-------------------------------------

  Information on FSM $fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11979 (\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q):

  Number of input signals:    3
  Number of output signals:   7
  Number of state bits:       7

  Input signals:
    0: \ex_block_i.gen_multdiv_fast.multdiv_i.div_en_internal
    1: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$logic_and$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:629$3530_Y
    2: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:659$3541_Y

  Output signals:
    0: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11601_CMP
    1: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11609_CMP
    2: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11621_CMP
    3: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11652_CMP
    4: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11653_CMP
    5: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11660_CMP
    6: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11701_CMP

  State encoding:
    0:  7'------1  <RESET STATE>
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 3'--0   ->     0 7'0000100
      1:     0 3'-11   ->     3 7'0000100
      2:     0 3'-01   ->     4 7'0000100
      3:     1 3'--0   ->     1 7'0000010
      4:     1 3'--1   ->     5 7'0000010
      5:     2 3'--0   ->     2 7'0001000
      6:     2 3'--1   ->     6 7'0001000
      7:     3 3'--1   ->     0 7'1000000
      8:     3 3'--0   ->     3 7'1000000
      9:     4 3'--1   ->     2 7'0010000
     10:     4 3'--0   ->     4 7'0010000
     11:     5 3'--1   ->     3 7'0000001
     12:     5 3'--0   ->     5 7'0000001
     13:     6 3'1-1   ->     1 7'0100000
     14:     6 3'--0   ->     6 7'0100000
     15:     6 3'0-1   ->     6 7'0100000

-------------------------------------

FSM `$fsm$\load_store_unit_i.data_type_q$11988' from module `ibex_core':
-------------------------------------

  Information on FSM $fsm$\load_store_unit_i.data_type_q$11988 (\load_store_unit_i.data_type_q):

  Number of input signals:    4
  Number of output signals:   4
  Number of state bits:       3

  Input signals:
    0: $auto$opt_reduce.cc:134:opt_mux$11944
    1: $flatten\id_stage_i.\decoder_i.$procmux$5318_CMP
    2: $flatten\id_stage_i.\decoder_i.$procmux$5814_CMP
    3: \load_store_unit_i.ctrl_update

  Output signals:
    0: $flatten\load_store_unit_i.$procmux$11362_CMP
    1: $flatten\load_store_unit_i.$procmux$11361_CMP
    2: $flatten\load_store_unit_i.$procmux$11360_CMP [0]
    3: $flatten\load_store_unit_i.$procmux$11360_CMP [1]

  State encoding:
    0:      3'--1  <RESET STATE>
    1:      3'-1-
    2:      3'1--

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 4'1--0   ->     0 4'0001
      1:     0 4'1001   ->     0 4'0001
      2:     0 4'0---   ->     0 4'0001
      3:     0 4'11-1   ->     1 4'0001
      4:     0 4'1-11   ->     2 4'0001
      5:     1 4'1--0   ->     0 4'0100
      6:     1 4'1001   ->     0 4'0100
      7:     1 4'11-1   ->     1 4'0100
      8:     1 4'0---   ->     1 4'0100
      9:     1 4'1-11   ->     2 4'0100
     10:     2 4'1--0   ->     0 4'0010
     11:     2 4'1001   ->     0 4'0010
     12:     2 4'11-1   ->     1 4'0010
     13:     2 4'1-11   ->     2 4'0010
     14:     2 4'0---   ->     2 4'0010

-------------------------------------

27.8.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q$11973' from module `\ibex_core'.
Mapping FSM `$fsm$\ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q$11979' from module `\ibex_core'.
Mapping FSM `$fsm$\load_store_unit_i.data_type_q$11988' from module `\ibex_core'.

27.9. Executing OPT pass (performing simple optimizations).

27.9.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~23 debug messages>

27.9.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

27.9.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~294 debug messages>

27.9.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

27.9.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

27.9.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $procdff$11793 ($adff) from module ibex_core (D = 1'1, Q = \fetch_enable_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11837 ($adff) from module ibex_core (D = \data_rdata_i [31:8], Q = \load_store_unit_i.rdata_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11836 ($adff) from module ibex_core (D = \load_store_unit_i.lsu_we_i, Q = \load_store_unit_i.data_we_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11835 ($adff) from module ibex_core (D = \load_store_unit_i.lsu_sign_ext_i, Q = \load_store_unit_i.data_sign_ext_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11833 ($adff) from module ibex_core (D = \ex_block_i.alu_adder_result_ext [2:1], Q = \load_store_unit_i.rdata_offset_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11832 ($adff) from module ibex_core (D = \ex_block_i.alu_adder_result_ext [32:1], Q = \load_store_unit_i.addr_last_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11831 ($adff) from module ibex_core (D = \load_store_unit_i.ls_fsm_ns, Q = \load_store_unit_i.ls_fsm_cs).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11830 ($adff) from module ibex_core (D = \load_store_unit_i.lsu_err_d, Q = \load_store_unit_i.lsu_err_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11829 ($adff) from module ibex_core (D = \load_store_unit_i.pmp_err_d, Q = \load_store_unit_i.pmp_err_q).
Adding EN signal on $flatten\load_store_unit_i.$procdff$11828 ($adff) from module ibex_core (D = \load_store_unit_i.handle_misaligned_d, Q = \load_store_unit_i.handle_misaligned_q).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11764 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_d, Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11762 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_d [0], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [0]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11761 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_d [31:0], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [31:0]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11760 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_d [1], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [1]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11759 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_d [63:32], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [63:32]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11758 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.in_err_i, Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_q [2]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$procdff$11757 ($dff) from module ibex_core (D = \instr_rdata_i, Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [95:64]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$11778 ($dff) from module ibex_core (D = $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4430_Y [1:0], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [1:0]).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$11778 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d [31:2], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [31:2]).
Adding SRST signal on $auto$opt_dff.cc:764:run$12205 ($dffe) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [0], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [0], rval = 1'0).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$11777 ($dff) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d, Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q).
Adding EN signal on $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$procdff$11776 ($adff) from module ibex_core (D = { 1'0 \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.rdata_pmp_err_q [1] }, Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.rdata_pmp_err_q).
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$12209 ($adffe) from module ibex_core.
Adding EN signal on $flatten\if_stage_i.$procdff$11786 ($dff) from module ibex_core (D = { \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q 1'0 }, Q = \if_stage_i.pc_id_o).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12210 ($dffe) from module ibex_core.
Adding EN signal on $flatten\if_stage_i.$procdff$11785 ($dff) from module ibex_core (D = \if_stage_i.illegal_c_instr_out, Q = \if_stage_i.illegal_c_insn_id_o).
Adding EN signal on $flatten\if_stage_i.$procdff$11784 ($dff) from module ibex_core (D = \if_stage_i.fetch_err_plus2, Q = \if_stage_i.instr_fetch_err_plus2_o).
Adding SRST signal on $auto$opt_dff.cc:764:run$12212 ($dffe) from module ibex_core (D = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.err_plus2, Q = \if_stage_i.instr_fetch_err_plus2_o, rval = 1'0).
Adding EN signal on $flatten\if_stage_i.$procdff$11783 ($dff) from module ibex_core (D = \if_stage_i.instr_err_out, Q = \if_stage_i.instr_fetch_err_o).
Adding EN signal on $flatten\if_stage_i.$procdff$11782 ($dff) from module ibex_core (D = \if_stage_i.instr_is_compressed_out, Q = \if_stage_i.instr_is_compressed_id_o).
Adding EN signal on $flatten\if_stage_i.$procdff$11781 ($dff) from module ibex_core (D = \if_stage_i.compressed_decoder_i.instr_i [15:0], Q = \if_stage_i.instr_rdata_c_id_o).
Adding EN signal on $flatten\if_stage_i.$procdff$11780 ($dff) from module ibex_core (D = \if_stage_i.instr_out, Q = \if_stage_i.instr_rdata_alu_id_o).
Adding EN signal on $flatten\if_stage_i.$procdff$11779 ($dff) from module ibex_core (D = \if_stage_i.instr_out, Q = \if_stage_i.instr_rdata_id_o).
Adding EN signal on $flatten\id_stage_i.\controller_i.$procdff$11767 ($adff) from module ibex_core (D = \id_stage_i.controller_i.debug_mode_d, Q = \id_stage_i.controller_i.debug_mode_q).
Adding EN signal on $flatten\id_stage_i.\controller_i.$procdff$11766 ($adff) from module ibex_core (D = \id_stage_i.controller_i.nmi_mode_d, Q = \id_stage_i.controller_i.nmi_mode_q).
Adding EN signal on $flatten\id_stage_i.\controller_i.$procdff$11765 ($adff) from module ibex_core (D = \id_stage_i.controller_i.ctrl_fsm_ns, Q = \id_stage_i.controller_i.ctrl_fsm_cs).
Adding EN signal on $flatten\id_stage_i.$procdff$11792 ($adff) from module ibex_core (D = $flatten\id_stage_i.$2\id_fsm_d[0:0], Q = \id_stage_i.id_fsm_q).
Adding EN signal on $flatten\id_stage_i.$procdff$11791 ($adff) from module ibex_core (D = \id_stage_i.imd_val_d_ex_i [67:34], Q = \id_stage_i.imd_val_q [67:34]).
Adding EN signal on $flatten\id_stage_i.$procdff$11790 ($adff) from module ibex_core (D = \id_stage_i.imd_val_d_ex_i [33:32], Q = \id_stage_i.imd_val_q [33:32]).
Adding EN signal on $flatten\id_stage_i.$procdff$11790 ($adff) from module ibex_core (D = \id_stage_i.imd_val_d_ex_i [31:0], Q = \id_stage_i.imd_val_q [31:0]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11827 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [31:0]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11826 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [63:32]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11825 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [95:64]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11824 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [127:96]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11823 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [159:128]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11822 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [191:160]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11821 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [223:192]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11820 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [255:224]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11819 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [287:256]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11818 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [319:288]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11817 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [351:320]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11816 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [383:352]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11815 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [415:384]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11814 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [447:416]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11813 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [479:448]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11812 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [511:480]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11811 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [543:512]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11810 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [575:544]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11809 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [607:576]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11808 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [639:608]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11807 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [671:640]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11806 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [703:672]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11805 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [735:704]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11804 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [767:736]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11803 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [799:768]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11802 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [831:800]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11801 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [863:832]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11800 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [895:864]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11799 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [927:896]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11798 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [959:928]).
Adding EN signal on $flatten\gen_regfile_ff.register_file_i.$procdff$11797 ($adff) from module ibex_core (D = \gen_regfile_ff.register_file_i.wdata_a_i, Q = \gen_regfile_ff.register_file_i.rf_reg_q [991:960]).
Adding EN signal on $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11842 ($adff) from module ibex_core (D = \ex_block_i.alu_i.is_equal, Q = \ex_block_i.gen_multdiv_fast.multdiv_i.div_by_zero_q).
Adding EN signal on $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11841 ($adff) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.div_counter_d, Q = \ex_block_i.gen_multdiv_fast.multdiv_i.div_counter_q).
Adding EN signal on $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11840 ($adff) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.op_quotient_d, Q = \ex_block_i.gen_multdiv_fast.multdiv_i.op_quotient_q).
Adding EN signal on $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procdff$11839 ($adff) from module ibex_core (D = $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:642$3536_Y, Q = \ex_block_i.gen_multdiv_fast.multdiv_i.op_numerator_q).
Adding EN signal on $flatten\cs_registers_i.\u_mtvec_csr.$procdff$11751 ($adff) from module ibex_core (D = \cs_registers_i.u_mtvec_csr.wr_data_i, Q = \cs_registers_i.u_mtvec_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mtval_csr.$procdff$11754 ($adff) from module ibex_core (D = \cs_registers_i.u_mtval_csr.wr_data_i, Q = \cs_registers_i.u_mtval_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mstatus_csr.$procdff$11844 ($adff) from module ibex_core (D = { \cs_registers_i.csr_wdata_int [17] \cs_registers_i.csr_wdata_int [21] }, Q = \cs_registers_i.u_mstatus_csr.rdata_q [1:0]).
Adding EN signal on $flatten\cs_registers_i.\u_mstatus_csr.$procdff$11844 ($adff) from module ibex_core (D = \cs_registers_i.u_mstatus_csr.wr_data_i [5:2], Q = \cs_registers_i.u_mstatus_csr.rdata_q [5:2]).
Adding EN signal on $flatten\cs_registers_i.\u_mstack_epc_csr.$procdff$11754 ($adff) from module ibex_core (D = \cs_registers_i.u_mepc_csr.rdata_q, Q = \cs_registers_i.u_mstack_epc_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mstack_csr.$procdff$11753 ($adff) from module ibex_core (D = \cs_registers_i.u_mstatus_csr.rdata_q [4:2], Q = \cs_registers_i.u_mstack_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mstack_cause_csr.$procdff$11756 ($adff) from module ibex_core (D = \cs_registers_i.u_mcause_csr.rdata_q, Q = \cs_registers_i.u_mstack_cause_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mscratch_csr.$procdff$11754 ($adff) from module ibex_core (D = \cs_registers_i.csr_wdata_int, Q = \cs_registers_i.u_mscratch_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mie_csr.$procdff$11750 ($adff) from module ibex_core (D = { \cs_registers_i.csr_wdata_int [3] \cs_registers_i.csr_wdata_int [7] \cs_registers_i.csr_wdata_int [11] \cs_registers_i.csr_wdata_int [30:16] }, Q = \cs_registers_i.u_mie_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mepc_csr.$procdff$11754 ($adff) from module ibex_core (D = \cs_registers_i.u_mepc_csr.wr_data_i, Q = \cs_registers_i.u_mepc_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_mcause_csr.$procdff$11756 ($adff) from module ibex_core (D = \cs_registers_i.u_mcause_csr.wr_data_i, Q = \cs_registers_i.u_mcause_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_dscratch1_csr.$procdff$11754 ($adff) from module ibex_core (D = \cs_registers_i.csr_wdata_int, Q = \cs_registers_i.u_dscratch1_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_dscratch0_csr.$procdff$11754 ($adff) from module ibex_core (D = \cs_registers_i.csr_wdata_int, Q = \cs_registers_i.u_dscratch0_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_depc_csr.$procdff$11754 ($adff) from module ibex_core (D = \cs_registers_i.u_depc_csr.wr_data_i, Q = \cs_registers_i.u_depc_csr.rdata_q).
Adding EN signal on $flatten\cs_registers_i.\u_dcsr_csr.$procdff$11752 ($adff) from module ibex_core (D = { 16'0100000000000000 \cs_registers_i.csr_wdata_int [15] 1'0 \cs_registers_i.csr_wdata_int [13:11] 5'00000 \cs_registers_i.csr_wdata_int [2] }, Q = { \cs_registers_i.u_dcsr_csr.rdata_q [31:9] \cs_registers_i.u_dcsr_csr.rdata_q [5:2] }).
Adding EN signal on $flatten\cs_registers_i.\u_dcsr_csr.$procdff$11752 ($adff) from module ibex_core (D = { \cs_registers_i.u_dcsr_csr.wr_data_i [8:6] \cs_registers_i.u_dcsr_csr.wr_data_i [1:0] }, Q = { \cs_registers_i.u_dcsr_csr.rdata_q [8:6] \cs_registers_i.u_dcsr_csr.rdata_q [1:0] }).
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 9 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 11 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 12 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 13 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 14 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 15 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 16 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 17 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 18 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 19 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 20 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 21 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 22 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 23 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 24 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 1-bit at position 25 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Setting constant 0-bit at position 26 on $auto$opt_dff.cc:764:run$12329 ($adffe) from module ibex_core.
Adding EN signal on $flatten\cs_registers_i.\u_cpuctrl_csr.$procdff$11756 ($adff) from module ibex_core (D = 6'000000, Q = \cs_registers_i.u_cpuctrl_csr.rdata_q).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12331 ($adffe) from module ibex_core.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$12331 ($adffe) from module ibex_core.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$12331 ($adffe) from module ibex_core.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$12331 ($adffe) from module ibex_core.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$12331 ($adffe) from module ibex_core.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$12331 ($adffe) from module ibex_core.
Adding EN signal on $flatten\cs_registers_i.\minstret_counter_i.$procdff$11755 ($adff) from module ibex_core (D = \cs_registers_i.minstret_counter_i.counter_d [63:32], Q = \cs_registers_i.minstret_counter_i.counter_q [63:32]).
Adding EN signal on $flatten\cs_registers_i.\minstret_counter_i.$procdff$11755 ($adff) from module ibex_core (D = \cs_registers_i.minstret_counter_i.counter_d [31:0], Q = \cs_registers_i.minstret_counter_i.counter_q [31:0]).
Adding EN signal on $flatten\cs_registers_i.\mcycle_counter_i.$procdff$11755 ($adff) from module ibex_core (D = \cs_registers_i.mcycle_counter_i.counter_d [63:32], Q = \cs_registers_i.mcycle_counter_i.counter_q [63:32]).
Adding EN signal on $flatten\cs_registers_i.\mcycle_counter_i.$procdff$11755 ($adff) from module ibex_core (D = \cs_registers_i.mcycle_counter_i.counter_d [31:0], Q = \cs_registers_i.mcycle_counter_i.counter_q [31:0]).
Adding EN signal on $flatten\cs_registers_i.$procdff$11796 ($adff) from module ibex_core (D = \cs_registers_i.priv_lvl_d, Q = \cs_registers_i.priv_lvl_q).
Adding EN signal on $flatten\cs_registers_i.$procdff$11795 ($adff) from module ibex_core (D = { \cs_registers_i.csr_wdata_int [2] 1'0 \cs_registers_i.csr_wdata_int [0] }, Q = \cs_registers_i.mcountinhibit_q).
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$12363 ($adffe) from module ibex_core.

27.9.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 85 unused cells and 130 unused wires.
<suppressed ~96 debug messages>

27.9.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~21 debug messages>

27.9.9. Rerunning OPT passes. (Maybe there is more to do..)

27.9.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~240 debug messages>

27.9.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10133: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10052_CTRL $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10179: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10052_CTRL $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10225: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $auto$opt_reduce.cc:134:opt_mux$12365 $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10052_CTRL $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10271: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10052_CTRL $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10316: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10052_CTRL $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9692: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10052_CTRL $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9822: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10052_CTRL $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9908: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10052_CTRL $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9956: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10052_CTRL $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
  Optimizing cells in module \ibex_core.
Performed a total of 9 changes.

27.9.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~159 debug messages>
Removed a total of 53 cells.

27.9.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12209 ($adffe) from module ibex_core.

27.9.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 42 unused wires.
<suppressed ~1 debug messages>

27.9.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~2 debug messages>

27.9.16. Rerunning OPT passes. (Maybe there is more to do..)

27.9.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~240 debug messages>

27.9.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

27.9.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

27.9.20. Executing OPT_DFF pass (perform DFF optimizations).

27.9.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

27.9.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

27.9.23. Rerunning OPT passes. (Maybe there is more to do..)

27.9.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~240 debug messages>

27.9.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

27.9.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

27.9.27. Executing OPT_DFF pass (perform DFF optimizations).

27.9.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

27.9.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

27.9.30. Finished OPT passes. (There is nothing left to do.)

27.10. Executing WREDUCE pass (reducing word size of cells).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4180 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4181 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4182 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4183 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4184 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4185 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4186 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4187 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4188 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4189 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4190 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4191 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4192 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4193 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4194 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory init port ibex_core.$flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4195 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:580$4044 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:581$4045 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:582$4046 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:583$4047 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:584$4048 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:585$4049 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:586$4050 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:587$4051 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:588$4052 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:589$4053 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:590$4054 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:591$4055 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:592$4056 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:593$4057 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:594$4058 (cs_registers_i.pmp_addr_rdata).
Removed top 28 address bits (of 32) from memory read port ibex_core.$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:595$4059 (cs_registers_i.pmp_addr_rdata).
Removed top 29 bits (of 32) from port B of cell ibex_core.$flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4427 ($add).
Removed top 29 bits (of 31) from port B of cell ibex_core.$flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:88$4674 ($add).
Removed top 3 bits (of 5) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$eq$/openLANE_flow/designs/ibex/src/ibex_compressed_decoder.v:343$305 ($eq).
Removed top 11 bits (of 32) from mux cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10705 ($mux).
Removed top 7 bits (of 32) from mux cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10721 ($mux).
Removed top 7 bits (of 32) from mux cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10751 ($mux).
Removed top 7 bits (of 32) from mux cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10786 ($mux).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10800_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10817_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10817_CMP1 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10838_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10839_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10840_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10847_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10872_CMP1 ($eq).
Removed top 3 bits (of 32) from mux cell ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$procmux$10915 ($mux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\if_stage_i.$procmux$7950_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.$procmux$7946_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.$procmux$7945_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\if_stage_i.$procmux$7944_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$ne$/openLANE_flow/designs/ibex/src/ibex_controller.v:487$4483 ($ne).
Removed top 30 bits (of 32) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4550 ($add).
Removed top 4 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:775$4554 ($mux).
Removed top 1 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6283_CMP0 ($eq).
Removed top 2 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6286 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6304 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6331 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6379 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6403 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6448 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6457 ($mux).
Removed top 4 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6599 ($mux).
Removed top 3 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6635 ($mux).
Removed top 3 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6637 ($mux).
Removed top 3 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6639 ($mux).
Removed top 2 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6641 ($mux).
Removed top 2 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6643 ($mux).
Removed top 2 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6645 ($mux).
Removed top 2 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6791 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6821 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6827 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6899 ($mux).
Removed top 3 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6965 ($mux).
Removed top 1 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6979_CMP0 ($eq).
Removed top 2 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6986 ($mux).
Removed top 1 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7004 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7049 ($mux).
Removed top 1 bits (of 6) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7061 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7114 ($mux).
Removed top 1 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7178_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7373_CMP0 ($eq).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7414 ($mux).
Removed cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7426 ($mux).
Removed top 2 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7429_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7451_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7452_CMP0 ($eq).
Removed top 3 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7606 ($mux).
Removed top 2 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7648 ($mux).
Removed top 2 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7687 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7723 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7756 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7786 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\id_stage_i.\controller_i.$procmux$7813 ($mux).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$eq$/openLANE_flow/designs/ibex/src/ibex_decoder.v:923$4609 ($eq).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4818_CMP0 ($eq).
Removed top 3 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4820_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4877_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4878_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4879_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4880_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4881_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4882_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4883_CMP0 ($eq).
Removed top 6 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4884_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4885_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4886_CMP0 ($eq).
Removed top 9 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4887_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4888_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4889_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4890_CMP0 ($eq).
Removed top 8 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4891_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4892_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4898_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$4968_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5007_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5008_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5024_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5034 ($mux).
Removed top 1 bits (of 3) from mux cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5090 ($mux).
Removed top 2 bits (of 3) from mux cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5198 ($mux).
Removed top 2 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5247_CMP0 ($eq).
Removed top 5 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5248_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5260_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5318_CMP0 ($eq).
Removed top 3 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5370_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5372_CMP0 ($eq).
Removed top 11 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5373_CMP0 ($eq).
Removed top 8 bits (of 10) from port B of cell ibex_core.$flatten\id_stage_i.\decoder_i.$procmux$5562_CMP3 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\id_stage_i.$procmux$8430_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.$procmux$7963_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.$procmux$7962_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\id_stage_i.$procmux$7961_CMP0 ($eq).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\id_stage_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:668$4341 ($mux).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4295 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4293 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4291 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:764$4290 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4277 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\id_stage_i.$eq$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:760$4276 ($eq).
Removed top 27 bits (of 32) from mux cell ibex_core.$flatten\id_stage_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:615$4238 ($mux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12166 ($ne).
Removed top 1 bits (of 3) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12147 ($ne).
Removed top 1 bits (of 33) from port A of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:596$3513 ($or).
Removed top 1 bits (of 33) from port B of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:596$3513 ($or).
Removed top 1 bits (of 33) from port Y of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:596$3513 ($or).
Removed top 1 bits (of 33) from mux cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:596$3514 ($mux).
Removed top 31 bits (of 32) from port A of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$shl$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:597$3515 ($shl).
Removed top 4 bits (of 5) from port B of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:614$3526 ($sub).
Removed top 4 bits (of 5) from port B of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:659$3541 ($eq).
Removed cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:675$3547 ($mux).
Removed cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:677$3548 ($mux).
Removed top 18 bits (of 35) from port A of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3552 ($mul).
Removed top 18 bits (of 35) from port B of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3552 ($mul).
Removed top 1 bits (of 35) from port Y of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3552 ($mul).
Removed top 1 bits (of 35) from port A of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3553 ($add).
Removed top 1 bits (of 35) from port B of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3553 ($add).
Removed top 1 bits (of 35) from port Y of cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3553 ($add).
Removed cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11585 ($mux).
Removed cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11598 ($mux).
Removed top 2 bits (of 34) from mux cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11606 ($mux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$fsm_map.cc:77:implement_pattern_cache$12034 ($eq).
Removed cell ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11722 ($mux).
Removed top 1 bits (of 34) from port A of cell ibex_core.$flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$3602 ($add).
Removed top 1 bits (of 34) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$3602 ($add).
Removed top 1 bits (of 34) from port Y of cell ibex_core.$flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$3602 ($add).
Removed top 26 bits (of 32) from port A of cell ibex_core.$flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$3617 ($sub).
Removed top 27 bits (of 32) from port Y of cell ibex_core.$flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$3617 ($sub).
Removed top 5 bits (of 6) from port A of cell ibex_core.$flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$3617 ($sub).
Removed top 2 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/ibex/src/ibex_alu.v:442$3625 ($eq).
Removed top 1 bits (of 33) from port Y of cell ibex_core.$flatten\ex_block_i.\alu_i.$sshr$/openLANE_flow/designs/ibex/src/ibex_alu.v:454$3630 ($sshr).
Removed top 4 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/ibex/src/ibex_alu.v:482$3637 ($eq).
Removed top 3 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/ibex/src/ibex_alu.v:482$3638 ($eq).
Removed top 3 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/ibex/src/ibex_alu.v:483$3640 ($eq).
Removed top 3 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$eq$/openLANE_flow/designs/ibex/src/ibex_alu.v:483$3641 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10654_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10654_CMP1 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10654_CMP2 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10654_CMP3 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10655_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10655_CMP1 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10655_CMP2 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10655_CMP3 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10655_CMP4 ($eq).
Removed top 1 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10655_CMP5 ($eq).
Removed top 2 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10657_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10657_CMP1 ($eq).
Removed top 2 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10657_CMP3 ($eq).
Removed top 2 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10657_CMP4 ($eq).
Removed top 5 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10658_CMP1 ($eq).
Removed top 4 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10659_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell ibex_core.$flatten\ex_block_i.\alu_i.$procmux$10659_CMP1 ($eq).
Removed top 2 bits (of 34) from mux cell ibex_core.$flatten\ex_block_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_ex_block.v:384$4221 ($mux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\load_store_unit_i.$procmux$11486 ($pmux).
Removed top 1 bits (of 4) from mux cell ibex_core.$flatten\load_store_unit_i.$procmux$11473 ($pmux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\load_store_unit_i.$procmux$11445_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\load_store_unit_i.$procmux$11380_CMP0 ($eq).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11268 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11218 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11208 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11170 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11128 ($mux).
Removed top 2 bits (of 3) from port B of cell ibex_core.$flatten\load_store_unit_i.$procmux$11122_CMP0 ($eq).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11119 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11110 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11102 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11059 ($mux).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\load_store_unit_i.$procmux$11054_CMP0 ($eq).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11048 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11026 ($mux).
Removed top 1 bits (of 3) from port B of cell ibex_core.$flatten\load_store_unit_i.$procmux$11022_CMP0 ($eq).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11019 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11012 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$11006 ($mux).
Removed cell ibex_core.$flatten\load_store_unit_i.$procmux$10988 ($mux).
Removed top 1 bits (of 3) from mux cell ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:278$270 ($mux).
Removed top 1 bits (of 3) from mux cell ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:259$265 ($mux).
Removed top 1 bits (of 3) from mux cell ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:256$264 ($mux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\load_store_unit_i.$eq$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:225$258 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12349 ($ne).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12335 ($ne).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$fsm_map.cc:77:implement_pattern_cache$12105 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12155 ($ne).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$fsm_map.cc:77:implement_pattern_cache$12087 ($eq).
Removed top 1 bits (of 2) from port B of cell ibex_core.$auto$opt_dff.cc:218:make_patterns_logic$12153 ($ne).
Removed top 63 bits (of 64) from port B of cell ibex_core.$flatten\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4626 ($add).
Removed cell ibex_core.$flatten\cs_registers_i.\minstret_counter_i.$procmux$4735 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.\minstret_counter_i.$procmux$4744 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.\minstret_counter_i.$procmux$4747 ($mux).
Removed top 63 bits (of 64) from port B of cell ibex_core.$flatten\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4626 ($add).
Removed cell ibex_core.$flatten\cs_registers_i.\mcycle_counter_i.$procmux$4735 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.\mcycle_counter_i.$procmux$4744 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.\mcycle_counter_i.$procmux$4747 ($mux).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10542_CMP0 ($eq).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$10367 ($pmux).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10171_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10167_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10134_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10084_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10083_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10082_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10081_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10080_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10079_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10078_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10077_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10076_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10075_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10074_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10073_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10072_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10071_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10070_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10069_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10068_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10067_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10066_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10065_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10064_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10063_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10062_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10061_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10060_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10059_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10058_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10057_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10056_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10055_CMP0 ($eq).
Removed top 1 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10054_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10053_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP28 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP27 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP26 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP25 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP24 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP23 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP22 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP21 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP20 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP19 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP18 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP17 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP16 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP15 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP14 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP13 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP12 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP11 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP10 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP9 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP8 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP7 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP6 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP5 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP4 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP3 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP2 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP1 ($eq).
Removed top 2 bits (of 12) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10052_CMP0 ($eq).
Removed top 4 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10036_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10035_CMP0 ($eq).
Removed top 3 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10034_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10033_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10032_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10031_CMP0 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10030_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10029_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10028_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10027_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10026_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10025_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10024_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10023_CMP0 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\cs_registers_i.$procmux$10022_CMP0 ($eq).
Removed top 30 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$9660 ($mux).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$9642 ($mux).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$9639 ($mux).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$9416 ($mux).
Removed top 29 bits (of 32) from mux cell ibex_core.$flatten\cs_registers_i.$procmux$9408 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.$procmux$9034 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.$procmux$8995 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.$procmux$8910 ($mux).
Removed cell ibex_core.$flatten\cs_registers_i.$procmux$8837 ($mux).
Removed top 1 bits (of 2) from port B of cell ibex_core.$flatten\cs_registers_i.$eq$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:791$4143 ($eq).
Removed top 29 bits (of 32) from port Y of cell ibex_core.$flatten\cs_registers_i.$or$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4127 ($or).
Removed top 29 bits (of 32) from port A of cell ibex_core.$flatten\cs_registers_i.$or$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4127 ($or).
Removed top 29 bits (of 32) from port B of cell ibex_core.$flatten\cs_registers_i.$or$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4127 ($or).
Removed top 31 bits (of 32) from port A of cell ibex_core.$flatten\cs_registers_i.$and$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4126 ($and).
Removed top 29 bits (of 32) from port Y of cell ibex_core.$flatten\cs_registers_i.$and$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4126 ($and).
Removed top 29 bits (of 32) from port B of cell ibex_core.$flatten\cs_registers_i.$and$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4126 ($and).
Removed top 29 bits (of 32) from port Y of cell ibex_core.$flatten\cs_registers_i.$not$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4125 ($not).
Removed top 29 bits (of 32) from port A of cell ibex_core.$flatten\cs_registers_i.$not$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4125 ($not).
Removed top 31 bits (of 32) from port A of cell ibex_core.$flatten\cs_registers_i.$shl$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4124 ($shl).
Removed top 29 bits (of 32) from port Y of cell ibex_core.$flatten\cs_registers_i.$shl$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4124 ($shl).
Removed top 29 bits (of 32) from port Y of cell ibex_core.$flatten\cs_registers_i.$shl$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4123 ($shl).
Removed top 21 bits (of 32) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$shiftx$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:0$3816 ($shiftx).
Removed top 21 bits (of 32) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$shiftx$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:0$3813 ($shiftx).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3777 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3775 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3773 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3771 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3769 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3767 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3765 ($eq).
Removed top 1 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3763 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3761 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3759 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3757 ($eq).
Removed top 2 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3755 ($eq).
Removed top 3 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3753 ($eq).
Removed top 3 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3751 ($eq).
Removed top 4 bits (of 5) from port B of cell ibex_core.$flatten\gen_regfile_ff.register_file_i.$eq$/openLANE_flow/designs/ibex/src/ibex_register_file_ff.v:41$3749 ($eq).
Removed top 23 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$1\dcsr_d[31:0].
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$2$mem2reg_rd$\mhpmevent$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:613$4002_DATA[31:0]$4064.
Removed top 23 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$2\dcsr_d[31:0].
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$2\mhpmcounter_we[31:0].
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$2\mhpmcounterh_we[31:0].
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$and$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4126_Y.
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$or$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4127_Y.
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$shl$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4123_Y.
Removed top 29 bits (of 32) from wire ibex_core.$flatten\cs_registers_i.$shl$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4124_Y.
Removed top 27 bits (of 32) from wire ibex_core.$flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$3617_Y.
Removed top 2 bits (of 34) from wire ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$3\op_remainder_d[33:0].
Removed top 1 bits (of 33) from wire ibex_core.$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$or$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:596$3513_Y.
Removed top 29 bits (of 32) from wire ibex_core.$flatten\id_stage_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:668$4341_Y.
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$10\mfip_id[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$11\mfip_id[3:0].
Removed top 2 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$13\mfip_id[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$14\ctrl_fsm_ns[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$15\ctrl_fsm_ns[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$16\ctrl_fsm_ns[3:0].
Removed top 1 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$3\exc_cause_o[5:0].
Removed top 1 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$4\exc_cause_o[5:0].
Removed top 2 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$5\exc_cause_o[5:0].
Removed top 2 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$7\exc_cause_o[5:0].
Removed top 2 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$8\exc_cause_o[5:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$8\mfip_id[3:0].
Removed top 4 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$9\exc_cause_o[5:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\id_stage_i.\controller_i.$9\mfip_id[3:0].
Removed top 3 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6635_Y.
Removed top 3 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6637_Y.
Removed top 2 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$procmux$6643_Y.
Removed top 4 bits (of 6) from wire ibex_core.$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:775$4554_Y.
Removed top 2 bits (of 3) from wire ibex_core.$flatten\id_stage_i.\decoder_i.$2\imm_b_mux_sel_o[2:0].
Removed top 1 bits (of 3) from wire ibex_core.$flatten\id_stage_i.\decoder_i.$4\imm_b_mux_sel_o[2:0].
Removed top 2 bits (of 3) from wire ibex_core.$flatten\id_stage_i.\decoder_i.$5\imm_b_mux_sel_o[2:0].
Removed top 7 bits (of 32) from wire ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$10\instr_o[31:0].
Removed top 11 bits (of 32) from wire ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$11\instr_o[31:0].
Removed top 7 bits (of 32) from wire ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$8\instr_o[31:0].
Removed top 7 bits (of 32) from wire ibex_core.$flatten\if_stage_i.\compressed_decoder_i.$9\instr_o[31:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\load_store_unit_i.$3\data_be[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\load_store_unit_i.$4\data_be[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\load_store_unit_i.$5\data_be[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\load_store_unit_i.$6\data_be[3:0].
Removed top 1 bits (of 4) from wire ibex_core.$flatten\load_store_unit_i.$7\data_be[3:0].
Removed top 1 bits (of 3) from wire ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:256$264_Y.
Removed top 1 bits (of 3) from wire ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:259$265_Y.
Removed top 1 bits (of 3) from wire ibex_core.$flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:278$270_Y.

27.11. Executing PEEPOPT pass (run peephole optimizers).

27.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 1 unused cells and 80 unused wires.
<suppressed ~2 debug messages>

27.13. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module ibex_core:
  creating $macc model for $flatten\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4626 ($add).
  creating $macc model for $flatten\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4626 ($add).
  creating $macc model for $flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$3602 ($add).
  creating $macc model for $flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$3617 ($sub).
  creating $macc model for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3553 ($add).
  creating $macc model for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3552 ($mul).
  creating $macc model for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:614$3526 ($sub).
  creating $macc model for $flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4550 ($add).
  creating $macc model for $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4427 ($add).
  creating $macc model for $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:88$4674 ($add).
  merging $macc model for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3552 into $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3553.
  creating $alu model for $macc $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4427.
  creating $alu model for $macc $flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4550.
  creating $alu model for $macc $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:614$3526.
  creating $alu model for $macc $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:88$4674.
  creating $alu model for $macc $flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$3617.
  creating $alu model for $macc $flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$3602.
  creating $alu model for $macc $flatten\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4626.
  creating $alu model for $macc $flatten\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4626.
  creating $macc cell for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$add$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3553: $auto$alumacc.cc:365:replace_macc$12412
  creating $alu model for $flatten\cs_registers_i.$gt$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:536$4021 ($gt): new $alu
  creating $alu cell for $flatten\cs_registers_i.$gt$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:536$4021: $auto$alumacc.cc:485:replace_alu$12414
  creating $alu cell for $flatten\cs_registers_i.\mcycle_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4626: $auto$alumacc.cc:485:replace_alu$12425
  creating $alu cell for $flatten\cs_registers_i.\minstret_counter_i.$add$/openLANE_flow/designs/ibex/src/ibex_counter.v:31$4626: $auto$alumacc.cc:485:replace_alu$12428
  creating $alu cell for $flatten\ex_block_i.\alu_i.$add$/openLANE_flow/designs/ibex/src/ibex_alu.v:364$3602: $auto$alumacc.cc:485:replace_alu$12431
  creating $alu cell for $flatten\ex_block_i.\alu_i.$sub$/openLANE_flow/designs/ibex/src/ibex_alu.v:422$3617: $auto$alumacc.cc:485:replace_alu$12434
  creating $alu cell for $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$add$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:88$4674: $auto$alumacc.cc:485:replace_alu$12437
  creating $alu cell for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$sub$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:614$3526: $auto$alumacc.cc:485:replace_alu$12440
  creating $alu cell for $flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4550: $auto$alumacc.cc:485:replace_alu$12443
  creating $alu cell for $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$add$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4427: $auto$alumacc.cc:485:replace_alu$12446
  created 9 $alu and 1 $macc cells.

27.14. Executing SHARE pass (SAT-based resource sharing).
Found 3 cells in module ibex_core that may be considered for resource sharing.
  Analyzing resource sharing options for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$shl$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:597$3515 ($shl):
    Found 2 activation_patterns using ctrl signal { \ex_block_i.div_sel_i \ex_block_i.alu_i.multdiv_sel_i $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$eq$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:627$3528_Y \ex_block_i.gen_multdiv_fast.multdiv_i.is_greater_equal \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [6] \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [1] }.
    No candidates found.
  Analyzing resource sharing options for $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3552 ($mul):
    Found cell that is never activated: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3552
    Cell is never active. Sharing is pointless, we simply remove it.
  Analyzing resource sharing options for $flatten\ex_block_i.\alu_i.$sshr$/openLANE_flow/designs/ibex/src/ibex_alu.v:454$3630 ($sshr):
    Found 1 activation_patterns using ctrl signal { $flatten\ex_block_i.\alu_i.$procmux$10657_CTRL \ex_block_i.alu_i.multdiv_sel_i \id_stage_i.rf_we_id_o $flatten\id_stage_i.$procmux$8426_CMP }.
    No candidates found.
Removing 1 cells in module ibex_core:
  Removing cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$mul$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:517$3552 ($mul).

27.15. Executing OPT pass (performing simple optimizations).

27.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~2 debug messages>

27.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

27.15.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~238 debug messages>

27.15.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10046: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10179: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10225: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $auto$opt_reduce.cc:134:opt_mux$12365 $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10271: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10316: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10408: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9692: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9736: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9780: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9822: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9867: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10057_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $auto$opt_reduce.cc:134:opt_mux$11880 $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9908: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10167_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9956: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10084_CMP $flatten\cs_registers_i.$procmux$10083_CMP $flatten\cs_registers_i.$procmux$10082_CMP $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$procmux$10080_CMP $flatten\cs_registers_i.$procmux$10079_CMP $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$procmux$10073_CMP $flatten\cs_registers_i.$procmux$10072_CMP $flatten\cs_registers_i.$procmux$10071_CMP $flatten\cs_registers_i.$procmux$10070_CMP $flatten\cs_registers_i.$procmux$10069_CMP $flatten\cs_registers_i.$procmux$10068_CMP $flatten\cs_registers_i.$procmux$10067_CMP $flatten\cs_registers_i.$procmux$10066_CMP $flatten\cs_registers_i.$procmux$10065_CMP $flatten\cs_registers_i.$procmux$10064_CMP $flatten\cs_registers_i.$procmux$10063_CMP $flatten\cs_registers_i.$procmux$10062_CMP $flatten\cs_registers_i.$procmux$10061_CMP $flatten\cs_registers_i.$procmux$10060_CMP $flatten\cs_registers_i.$procmux$10059_CMP $flatten\cs_registers_i.$procmux$10058_CMP $flatten\cs_registers_i.$procmux$10056_CMP $flatten\cs_registers_i.$procmux$10055_CMP $flatten\cs_registers_i.$procmux$10054_CMP $flatten\cs_registers_i.$procmux$10053_CMP $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$7443: { $flatten\id_stage_i.\controller_i.$procmux$7453_CMP $flatten\id_stage_i.\controller_i.$procmux$7451_CMP $auto$opt_reduce.cc:134:opt_mux$12450 $flatten\id_stage_i.\controller_i.$procmux$7373_CMP $flatten\id_stage_i.\controller_i.$procmux$7178_CMP $auto$opt_reduce.cc:134:opt_mux$11850 $flatten\id_stage_i.\controller_i.$procmux$6283_CMP }
    New ctrl vector for $pmux cell $flatten\id_stage_i.\controller_i.$procmux$7515: { $auto$opt_reduce.cc:134:opt_mux$12452 $flatten\id_stage_i.\controller_i.$procmux$6283_CMP }
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$11293: { $flatten\load_store_unit_i.$eq$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:325$288_Y $flatten\load_store_unit_i.$procmux$11122_CMP $flatten\load_store_unit_i.$procmux$11054_CMP }
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$11305: $auto$opt_reduce.cc:134:opt_mux$12454
  Optimizing cells in module \ibex_core.
Performed a total of 17 changes.

27.15.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~12 debug messages>
Removed a total of 4 cells.

27.15.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$opt_dff.cc:764:run$12330 ($adffe) from module ibex_core (D = \cs_registers_i.debug_cause_i, Q = \cs_registers_i.u_dcsr_csr.rdata_q [8:6]).

27.15.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 2 unused cells and 9 unused wires.
<suppressed ~3 debug messages>

27.15.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

27.15.9. Rerunning OPT passes. (Maybe there is more to do..)

27.15.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~240 debug messages>

27.15.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

27.15.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

27.15.13. Executing OPT_DFF pass (perform DFF optimizations).

27.15.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

27.15.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

27.15.16. Finished OPT passes. (There is nothing left to do.)

27.16. Executing MEMORY pass.

27.16.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

27.16.2. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:580$4044' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:581$4045' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:582$4046' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:583$4047' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:584$4048' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:585$4049' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:586$4050' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:587$4051' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:588$4052' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:589$4053' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:590$4054' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:591$4055' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:592$4056' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:593$4057' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:594$4058' in module `\ibex_core': no (compatible) $dff found.
Checking cell `$flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:595$4059' in module `\ibex_core': no (compatible) $dff found.

27.16.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

27.16.4. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

27.16.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

27.16.6. Executing MEMORY_COLLECT pass (generating $mem cells).
Collecting $memrd, $memwr and $meminit for memory `\cs_registers_i.pmp_addr_rdata' in module `\ibex_core':
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4180 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4181 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4182 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4183 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4184 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4185 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4186 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4187 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4188 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4189 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4190 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4191 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4192 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4193 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4194 ($meminit)
  $flatten\cs_registers_i.$meminit$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:0$4195 ($meminit)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:595$4059 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:594$4058 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:593$4057 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:592$4056 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:591$4055 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:590$4054 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:589$4053 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:588$4052 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:587$4051 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:586$4050 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:585$4049 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:584$4048 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:583$4047 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:582$4046 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:581$4045 ($memrd)
  $flatten\cs_registers_i.$memrd$\pmp_addr_rdata$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:580$4044 ($memrd)

27.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

27.18. Executing OPT pass (performing simple optimizations).

27.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~275 debug messages>

27.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

27.18.3. Executing OPT_DFF pass (perform DFF optimizations).

27.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 18 unused cells and 118 unused wires.
<suppressed ~20 debug messages>

27.18.5. Finished fast OPT passes.

27.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).
Mapping memory cell \cs_registers_i.pmp_addr_rdata in module \ibex_core:
  created 16 $dff cells and 0 static cells of width 32.
  read interface: 0 $dff and 240 $mux cells.
  write interface: 0 write mux blocks.

27.20. Executing OPT pass (performing simple optimizations).

27.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~240 debug messages>

27.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

27.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~162 debug messages>

27.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $pmux cell $flatten\cs_registers_i.$procmux$10367:
      Old ports: A=3'001, B=6'100000, Y=$auto$wreduce.cc:454:run$12367 [2:0]
      New ports: A=2'01, B=4'1000, Y={ $auto$wreduce.cc:454:run$12367 [2] $auto$wreduce.cc:454:run$12367 [0] }
      New connections: $auto$wreduce.cc:454:run$12367 [1] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$procmux$8746:
      Old ports: A={ \if_stage_i.pc_id_o [31:1] 1'0 }, B={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q 1'0 }, Y=$flatten\cs_registers_i.$2\exception_pc[31:0]
      New ports: A=\if_stage_i.pc_id_o [31:1], B=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.instr_addr_q, Y=$flatten\cs_registers_i.$2\exception_pc[31:0] [31:1]
      New connections: $flatten\cs_registers_i.$2\exception_pc[31:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_cs_registers.v:667$4084:
      Old ports: A={ \cs_registers_i.csr_wdata_int [31:8] 8'00000001 }, B={ \boot_addr_i [31:8] 8'00000001 }, Y=\cs_registers_i.u_mtvec_csr.wr_data_i
      New ports: A=\cs_registers_i.csr_wdata_int [31:8], B=\boot_addr_i [31:8], Y=\cs_registers_i.u_mtvec_csr.wr_data_i [31:8]
      New connections: \cs_registers_i.u_mtvec_csr.wr_data_i [7:0] = 8'00000001
    Consolidated identical input bits for $mux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11642:
      Old ports: A={ 2'00 \ex_block_i.gen_multdiv_fast.multdiv_i.op_a_i }, B=34'1111111111111111111111111111111111, Y=$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0]
      New ports: A={ 1'0 \ex_block_i.gen_multdiv_fast.multdiv_i.op_a_i }, B=33'111111111111111111111111111111111, Y=$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0] [32:0]
      New connections: $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0] [33] = $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$2\op_remainder_d[33:0] [32]
    Consolidated identical input bits for $pmux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11657:
      Old ports: A={ $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:621$3527_Y 1'1 }, B={ $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:646$3537_Y 1'1 $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:661$3543_Y 1'1 $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:679$3549_Y 1'1 }, Y=\ex_block_i.alu_i.multdiv_operand_b_i
      New ports: A=$flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:621$3527_Y, B={ $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:646$3537_Y $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:661$3543_Y $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$not$/openLANE_flow/designs/ibex/src/ibex_multdiv_fast.v:679$3549_Y }, Y=\ex_block_i.alu_i.multdiv_operand_b_i [32:1]
      New connections: \ex_block_i.alu_i.multdiv_operand_b_i [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\ex_block_i.\gen_multdiv_fast.multdiv_i.$procmux$11667:
      Old ports: A=33'000000000000000000000000000000001, B={ \id_stage_i.imd_val_q [65:34] 1'1 }, Y=\ex_block_i.alu_i.multdiv_operand_a_i
      New ports: A=0, B=\id_stage_i.imd_val_q [65:34], Y=\ex_block_i.alu_i.multdiv_operand_a_i [32:1]
      New connections: \ex_block_i.alu_i.multdiv_operand_a_i [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_id_stage.v:668$4341:
      Old ports: A=3'100, B=3'010, Y=$auto$wreduce.cc:454:run$12378 [2:0]
      New ports: A=2'10, B=2'01, Y=$auto$wreduce.cc:454:run$12378 [2:1]
      New connections: $auto$wreduce.cc:454:run$12378 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6286:
      Old ports: A=2'01, B=2'11, Y=$flatten\id_stage_i.\controller_i.$17\ctrl_fsm_ns[3:0] [1:0]
      New ports: A=1'0, B=1'1, Y=$flatten\id_stage_i.\controller_i.$17\ctrl_fsm_ns[3:0] [1]
      New connections: $flatten\id_stage_i.\controller_i.$17\ctrl_fsm_ns[3:0] [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6367:
      Old ports: A=3'000, B=3'100, Y=$flatten\id_stage_i.\controller_i.$4\pc_mux_o[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\id_stage_i.\controller_i.$4\pc_mux_o[2:0] [2]
      New connections: $flatten\id_stage_i.\controller_i.$4\pc_mux_o[2:0] [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6499:
      Old ports: A=4'0101, B=4'1001, Y=$flatten\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0]
      New ports: A=2'01, B=2'10, Y=$flatten\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0] [3:2]
      New connections: $flatten\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0] [1:0] = 2'01
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6599:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:454:run$12391 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$12391 [0]
      New connections: $auto$wreduce.cc:454:run$12391 [1] = $auto$wreduce.cc:454:run$12391 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6635:
      Old ports: A=3'000, B=3'101, Y=$auto$wreduce.cc:454:run$12393 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$12393 [0]
      New connections: $auto$wreduce.cc:454:run$12393 [2:1] = { $auto$wreduce.cc:454:run$12393 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6875:
      Old ports: A=3'011, B=3'100, Y=$flatten\id_stage_i.\controller_i.$3\debug_cause_o[2:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\id_stage_i.\controller_i.$3\debug_cause_o[2:0] [2] $flatten\id_stage_i.\controller_i.$3\debug_cause_o[2:0] [0] }
      New connections: $flatten\id_stage_i.\controller_i.$3\debug_cause_o[2:0] [1] = $flatten\id_stage_i.\controller_i.$3\debug_cause_o[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6965:
      Old ports: A=3'111, B=3'011, Y=$flatten\id_stage_i.\controller_i.$6\exc_cause_o[5:0] [2:0]
      New ports: A=1'1, B=1'0, Y=$flatten\id_stage_i.\controller_i.$6\exc_cause_o[5:0] [2]
      New connections: $flatten\id_stage_i.\controller_i.$6\exc_cause_o[5:0] [1:0] = 2'11
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7403:
      Old ports: A=4'0101, B=4'0111, Y=$flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0] [1]
      New connections: { $flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0] [3:2] $flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0] [0] } = 3'011
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:757$4549:
      Old ports: A=2'00, B=2'11, Y=$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:757$4549_Y
      New ports: A=1'0, B=1'1, Y=$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:757$4549_Y [0]
      New connections: $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:757$4549_Y [1] = $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:757$4549_Y [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4551:
      Old ports: A={ \if_stage_i.pc_id_o [31:1] 1'0 }, B={ $flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4550_Y [31:1] 1'0 }, Y=$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4551_Y
      New ports: A=\if_stage_i.pc_id_o [31:1], B=$flatten\id_stage_i.\controller_i.$add$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4550_Y [31:1], Y=$flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4551_Y [31:1]
      New connections: $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:769$4551_Y [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_controller.v:775$4554:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:454:run$12396 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$12396 [0]
      New connections: $auto$wreduce.cc:454:run$12396 [1] = $auto$wreduce.cc:454:run$12396 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$4785:
      Old ports: A=2'00, B=2'11, Y=$flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0]
      New ports: A=1'0, B=1'1, Y=$flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [0]
      New connections: $flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [1] = $flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$4860:
      Old ports: A=6'100110, B=6'000000, Y=$flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0]
      New ports: A=1'1, B=1'0, Y=$flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [1]
      New connections: { $flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [5:2] $flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [0] } = { $flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [1] 2'00 $flatten\id_stage_i.\decoder_i.$13\alu_operator_o[5:0] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$4868:
      Old ports: A=3'000, B=3'101, Y=$flatten\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0]
      New ports: A=1'0, B=1'1, Y=$flatten\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0] [0]
      New connections: $flatten\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0] [2:1] = { $flatten\id_stage_i.\decoder_i.$6\imm_b_mux_sel_o[2:0] [0] 1'0 }
    Consolidated identical input bits for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$4876:
      Old ports: A=6'100110, B=54'000001100101000010000011000100001010001001001000000000, Y=$flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0]
      New ports: A=5'10110, B=45'000011010100010000110010001010010010100000000, Y={ $flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [5] $flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [3:0] }
      New connections: $flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$4960:
      Old ports: A=6'100110, B=6'001000, Y=$flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0]
      New ports: A=2'01, B=2'10, Y={ $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [3] $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] }
      New connections: { $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [5:4] $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [2] $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [0] } = { $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] 1'0 $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$5062:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:454:run$12398 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$12398 [1]
      New connections: $auto$wreduce.cc:454:run$12398 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$5138:
      Old ports: A=3'101, B=3'000, Y=$flatten\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0]
      New ports: A=1'1, B=1'0, Y=$flatten\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0] [0]
      New connections: $flatten\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0] [2:1] = { $flatten\id_stage_i.\decoder_i.$3\imm_b_mux_sel_o[2:0] [0] 1'0 }
    Consolidated identical input bits for $pmux cell $flatten\if_stage_i.$procmux$7947:
      Old ports: A={ \cs_registers_i.u_mtvec_csr.rdata_q [31:8] 8'00000000 }, B={ \cs_registers_i.u_mtvec_csr.rdata_q [31:8] 1'0 \cs_registers_i.csr_mcause_i [4:0] 66'000001101000010001000010000000000000011010000100010000100000001000 }, Y=\if_stage_i.exc_pc
      New ports: A={ \cs_registers_i.u_mtvec_csr.rdata_q [31:8] 5'00000 }, B={ \cs_registers_i.u_mtvec_csr.rdata_q [31:8] \cs_registers_i.csr_mcause_i [4:0] 58'0001101000010001000010000000000011010000100010000100000010 }, Y={ \if_stage_i.exc_pc [31:8] \if_stage_i.exc_pc [6:2] }
      New connections: { \if_stage_i.exc_pc [7] \if_stage_i.exc_pc [1:0] } = 3'000
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$10705:
      Old ports: A={ 1'0 \if_stage_i.compressed_decoder_i.instr_i [11:7] 15'000000011100111 }, B=21'100000000000001110011, Y=$auto$wreduce.cc:454:run$12401 [20:0]
      New ports: A={ \if_stage_i.compressed_decoder_i.instr_i [11:7] 2'01 }, B=7'0000010, Y={ $auto$wreduce.cc:454:run$12401 [19:15] $auto$wreduce.cc:454:run$12401 [4] $auto$wreduce.cc:454:run$12401 [2] }
      New connections: { $auto$wreduce.cc:454:run$12401 [20] $auto$wreduce.cc:454:run$12401 [14:5] $auto$wreduce.cc:454:run$12401 [3] $auto$wreduce.cc:454:run$12401 [1:0] } = { $auto$wreduce.cc:454:run$12401 [4] 7'0000000 $auto$wreduce.cc:454:run$12401 [2] 5'11011 }
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$10751:
      Old ports: A={ 5'00000 \if_stage_i.compressed_decoder_i.instr_i [11:7] 15'000000001100111 }, B={ \if_stage_i.compressed_decoder_i.instr_i [6:2] 8'00000000 \if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0110011 }, Y=$auto$wreduce.cc:454:run$12403 [24:0]
      New ports: A={ 5'00000 \if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0000001 }, B={ \if_stage_i.compressed_decoder_i.instr_i [6:2] 5'00000 \if_stage_i.compressed_decoder_i.instr_i [11:7] 2'10 }, Y={ $auto$wreduce.cc:454:run$12403 [24:15] $auto$wreduce.cc:454:run$12403 [11:7] $auto$wreduce.cc:454:run$12403 [4] $auto$wreduce.cc:454:run$12403 [2] }
      New connections: { $auto$wreduce.cc:454:run$12403 [14:12] $auto$wreduce.cc:454:run$12403 [6:5] $auto$wreduce.cc:454:run$12403 [3] $auto$wreduce.cc:454:run$12403 [1:0] } = { 3'000 $auto$wreduce.cc:454:run$12403 [2] 4'1011 }
    Consolidated identical input bits for $pmux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$10836:
      Old ports: A={ 9'010000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'00001 \if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0110011 }, B={ 9'000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'10001 \if_stage_i.compressed_decoder_i.instr_i [9:7] 16'0110011000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'11001 \if_stage_i.compressed_decoder_i.instr_i [9:7] 16'0110011000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'11101 \if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0110011 \if_stage_i.compressed_decoder_i.instr_i }, Y=$flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0]
      New ports: A={ 9'010000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 12'000010110011 }, B={ 9'000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 21'100010110011000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 21'110010110011000000001 \if_stage_i.compressed_decoder_i.instr_i [4:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 12'111010110011 \if_stage_i.compressed_decoder_i.instr_i [31:10] \if_stage_i.compressed_decoder_i.instr_i [6:0] }, Y={ $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [31:10] $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [6:0] }
      New connections: $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [9:7] = \if_stage_i.compressed_decoder_i.instr_i [9:7]
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$10915:
      Old ports: A={ \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [6:2] \if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0110111 }, B={ \if_stage_i.compressed_decoder_i.instr_i [4:3] \if_stage_i.compressed_decoder_i.instr_i [5] \if_stage_i.compressed_decoder_i.instr_i [2] \if_stage_i.compressed_decoder_i.instr_i [6] 24'000000010000000100010011 }, Y=$flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [28:0]
      New ports: A={ \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [6:2] \if_stage_i.compressed_decoder_i.instr_i [11:7] 1'1 }, B={ \if_stage_i.compressed_decoder_i.instr_i [4:3] \if_stage_i.compressed_decoder_i.instr_i [5] \if_stage_i.compressed_decoder_i.instr_i [2] \if_stage_i.compressed_decoder_i.instr_i [6] 12'010000000100 }, Y={ $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [28:24] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17:7] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [2] }
      New connections: { $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [23:18] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [6:3] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [1:0] } = { $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [17] 1'0 $flatten\if_stage_i.\compressed_decoder_i.$4\instr_o[31:0] [2] 4'1011 }
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4424:
      Old ports: A={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:2] 2'00 }, B={ \if_stage_i.fetch_addr_n [31:1] 1'0 }, Y={ $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4424_Y [31:2] \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d [1:0] }
      New ports: A={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:2] 1'0 }, B=\if_stage_i.fetch_addr_n [31:1], Y={ $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:145$4424_Y [31:2] \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d [1] }
      New connections: \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_d [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:64$4644:
      Old ports: A={ \instr_rdata_i [15:0] \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata [31:16] }, B={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [47:32] \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata [31:16] }, Y=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_unaligned
      New ports: A=\instr_rdata_i [15:0], B=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_q [47:32], Y=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_unaligned [31:16]
      New connections: \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata_unaligned [15:0] = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fifo_i.rdata [31:16]
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$11157:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$12410 [1:0] }, B={ 1'0 $auto$wreduce.cc:454:run$12409 [1:0] }, Y=$flatten\load_store_unit_i.$2\ls_fsm_ns[2:0]
      New ports: A=$auto$wreduce.cc:454:run$12410 [1:0], B=$auto$wreduce.cc:454:run$12409 [1:0], Y=$flatten\load_store_unit_i.$2\ls_fsm_ns[2:0] [1:0]
      New connections: $flatten\load_store_unit_i.$2\ls_fsm_ns[2:0] [2] = 1'0
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$11364:
      Old ports: A={ 24'000000000000000000000000 \data_rdata_i [31:24] }, B={ \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31:24] }, Y=$flatten\load_store_unit_i.$5\rdata_b_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [31], Y=$flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8]
      New connections: { $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [31:9] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [7:0] } = { $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] \data_rdata_i [31:24] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$11370:
      Old ports: A={ 24'000000000000000000000000 \data_rdata_i [23:16] }, B={ \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23:16] }, Y=$flatten\load_store_unit_i.$4\rdata_b_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [23], Y=$flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8]
      New connections: { $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [31:9] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [7:0] } = { $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] \data_rdata_i [23:16] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$11377:
      Old ports: A={ 24'000000000000000000000000 \data_rdata_i [15:8] }, B={ \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15:8] }, Y=$flatten\load_store_unit_i.$3\rdata_b_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [15], Y=$flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8]
      New connections: { $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [31:9] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [7:0] } = { $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] \data_rdata_i [15:8] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$11385:
      Old ports: A={ 24'000000000000000000000000 \data_rdata_i [7:0] }, B={ \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7:0] }, Y=$flatten\load_store_unit_i.$2\rdata_b_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [7], Y=$flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8]
      New connections: { $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [31:9] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [7:0] } = { $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] \data_rdata_i [7:0] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$11395:
      Old ports: A={ 16'0000000000000000 \data_rdata_i [7:0] \load_store_unit_i.rdata_q [23:16] }, B={ \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7] \data_rdata_i [7:0] \load_store_unit_i.rdata_q [23:16] }, Y=$flatten\load_store_unit_i.$5\rdata_h_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [7], Y=$flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16]
      New connections: { $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [31:17] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [15:0] } = { $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] \data_rdata_i [7:0] \load_store_unit_i.rdata_q [23:16] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$11401:
      Old ports: A={ 16'0000000000000000 \data_rdata_i [31:16] }, B={ \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31] \data_rdata_i [31:16] }, Y=$flatten\load_store_unit_i.$4\rdata_h_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [31], Y=$flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16]
      New connections: { $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [31:17] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [15:0] } = { $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] \data_rdata_i [31:16] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$11408:
      Old ports: A={ 16'0000000000000000 \data_rdata_i [23:8] }, B={ \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23] \data_rdata_i [23:8] }, Y=$flatten\load_store_unit_i.$3\rdata_h_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [23], Y=$flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16]
      New connections: { $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [31:17] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [15:0] } = { $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] \data_rdata_i [23:8] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$11416:
      Old ports: A={ 16'0000000000000000 \data_rdata_i [15:0] }, B={ \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15] \data_rdata_i [15:0] }, Y=$flatten\load_store_unit_i.$2\rdata_h_ext[31:0]
      New ports: A=1'0, B=\data_rdata_i [15], Y=$flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16]
      New connections: { $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [31:17] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [15:0] } = { $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] \data_rdata_i [15:0] }
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:256$264:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:454:run$12409 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$12409 [1]
      New connections: $auto$wreduce.cc:454:run$12409 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:259$265:
      Old ports: A=2'11, B=2'01, Y=$auto$wreduce.cc:454:run$12410 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$12410 [1]
      New connections: $auto$wreduce.cc:454:run$12410 [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:278$270:
      Old ports: A=2'11, B=2'00, Y=$auto$wreduce.cc:454:run$12411 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$12411 [0]
      New connections: $auto$wreduce.cc:454:run$12411 [1] = $auto$wreduce.cc:454:run$12411 [0]
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$procmux$8542:
      Old ports: A=$flatten\cs_registers_i.$2\exception_pc[31:0], B={ \cs_registers_i.csr_wdata_int [31:1] 1'0 }, Y=$flatten\cs_registers_i.$3\mepc_d[31:0]
      New ports: A=$flatten\cs_registers_i.$2\exception_pc[31:0] [31:1], B=\cs_registers_i.csr_wdata_int [31:1], Y=$flatten\cs_registers_i.$3\mepc_d[31:0] [31:1]
      New connections: $flatten\cs_registers_i.$3\mepc_d[31:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$procmux$8638:
      Old ports: A={ \cs_registers_i.csr_wdata_int [31:1] 1'0 }, B=$flatten\cs_registers_i.$2\exception_pc[31:0], Y=$flatten\cs_registers_i.$2\depc_d[31:0]
      New ports: A=\cs_registers_i.csr_wdata_int [31:1], B=$flatten\cs_registers_i.$2\exception_pc[31:0] [31:1], Y=$flatten\cs_registers_i.$2\depc_d[31:0] [31:1]
      New connections: $flatten\cs_registers_i.$2\depc_d[31:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\ex_block_i.\alu_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_alu.v:356$3599:
      Old ports: A={ \cs_registers_i.csr_wdata_i 1'1 }, B=\ex_block_i.alu_i.multdiv_operand_a_i, Y=\ex_block_i.alu_i.adder_in_a
      New ports: A=\cs_registers_i.csr_wdata_i, B=\ex_block_i.alu_i.multdiv_operand_a_i [32:1], Y=\ex_block_i.alu_i.adder_in_a [32:1]
      New connections: \ex_block_i.alu_i.adder_in_a [0] = 1'1
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6304:
      Old ports: A={ 1'1 $flatten\id_stage_i.\controller_i.$17\ctrl_fsm_ns[3:0] [1:0] }, B=3'010, Y=$auto$wreduce.cc:454:run$12384 [2:0]
      New ports: A={ $flatten\id_stage_i.\controller_i.$17\ctrl_fsm_ns[3:0] [1] 1'1 }, B=2'10, Y=$auto$wreduce.cc:454:run$12384 [1:0]
      New connections: $auto$wreduce.cc:454:run$12384 [2] = $auto$wreduce.cc:454:run$12384 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6439:
      Old ports: A=$flatten\id_stage_i.\controller_i.$4\pc_mux_o[2:0], B=3'011, Y=$flatten\id_stage_i.\controller_i.$3\pc_mux_o[2:0]
      New ports: A={ $flatten\id_stage_i.\controller_i.$4\pc_mux_o[2:0] [2] 1'0 }, B=2'01, Y={ $flatten\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [2] $flatten\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [0] }
      New connections: $flatten\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [1] = $flatten\id_stage_i.\controller_i.$3\pc_mux_o[2:0] [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6637:
      Old ports: A=$auto$wreduce.cc:454:run$12393 [2:0], B=3'111, Y=$auto$wreduce.cc:454:run$12394 [2:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$12393 [0] }, B=2'11, Y=$auto$wreduce.cc:454:run$12394 [1:0]
      New connections: $auto$wreduce.cc:454:run$12394 [2] = $auto$wreduce.cc:454:run$12394 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6656:
      Old ports: A=4'0101, B=$flatten\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0], Y=$flatten\id_stage_i.\controller_i.$procmux$6656_Y
      New ports: A=2'01, B=$flatten\id_stage_i.\controller_i.$13\ctrl_fsm_ns[3:0] [3:2], Y=$flatten\id_stage_i.\controller_i.$procmux$6656_Y [3:2]
      New connections: $flatten\id_stage_i.\controller_i.$procmux$6656_Y [1:0] = 2'01
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6986:
      Old ports: A={ 1'0 $flatten\id_stage_i.\controller_i.$6\exc_cause_o[5:0] [2:0] }, B=4'1011, Y=$auto$wreduce.cc:454:run$12387 [3:0]
      New ports: A={ 1'0 $flatten\id_stage_i.\controller_i.$6\exc_cause_o[5:0] [2] }, B=2'10, Y=$auto$wreduce.cc:454:run$12387 [3:2]
      New connections: $auto$wreduce.cc:454:run$12387 [1:0] = 2'11
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$7381:
      Old ports: A=$flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0], B=4'1000, Y=$flatten\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0]
      New ports: A={ 1'0 $flatten\id_stage_i.\controller_i.$4\ctrl_fsm_ns[3:0] [1] 1'1 }, B=3'100, Y={ $flatten\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [3] $flatten\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [1:0] }
      New connections: $flatten\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [2] = $flatten\id_stage_i.\controller_i.$5\ctrl_fsm_ns[3:0] [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$4799:
      Old ports: A=$flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0], B=2'00, Y=$flatten\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0]
      New ports: A=$flatten\id_stage_i.\decoder_i.$8\alu_op_a_mux_sel_o[1:0] [0], B=1'0, Y=$flatten\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0] [0]
      New connections: $flatten\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0] [1] = $flatten\id_stage_i.\decoder_i.$7\alu_op_a_mux_sel_o[1:0] [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$4951:
      Old ports: A=$flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0], B=6'100110, Y=$flatten\id_stage_i.\decoder_i.$11\alu_operator_o[5:0]
      New ports: A={ $flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [5] $flatten\id_stage_i.\decoder_i.$12\alu_operator_o[5:0] [3:0] }, B=5'10110, Y={ $flatten\id_stage_i.\decoder_i.$11\alu_operator_o[5:0] [5] $flatten\id_stage_i.\decoder_i.$11\alu_operator_o[5:0] [3:0] }
      New connections: $flatten\id_stage_i.\decoder_i.$11\alu_operator_o[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\decoder_i.$procmux$4974:
      Old ports: A=$flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0], B=6'001001, Y=$flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0]
      New ports: A={ $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [3] $flatten\id_stage_i.\decoder_i.$10\alu_operator_o[5:0] [1] 1'0 }, B=3'101, Y={ $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [3] $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1:0] }
      New connections: { $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [5:4] $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [2] } = { $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] 1'0 $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] }
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$10721:
      Old ports: A={ 4'0000 $auto$wreduce.cc:454:run$12401 [20:0] }, B={ \if_stage_i.compressed_decoder_i.instr_i [6:2] \if_stage_i.compressed_decoder_i.instr_i [11:7] 3'000 \if_stage_i.compressed_decoder_i.instr_i [11:7] 7'0110011 }, Y=$auto$wreduce.cc:454:run$12400 [24:0]
      New ports: A={ 4'0000 $auto$wreduce.cc:454:run$12401 [4] $auto$wreduce.cc:454:run$12401 [19:15] 4'0000 $auto$wreduce.cc:454:run$12401 [2] 1'1 $auto$wreduce.cc:454:run$12401 [4] $auto$wreduce.cc:454:run$12401 [2] }, B={ \if_stage_i.compressed_decoder_i.instr_i [6:2] \if_stage_i.compressed_decoder_i.instr_i [11:7] \if_stage_i.compressed_decoder_i.instr_i [11:7] 3'010 }, Y={ $auto$wreduce.cc:454:run$12400 [24:15] $auto$wreduce.cc:454:run$12400 [11:6] $auto$wreduce.cc:454:run$12400 [4] $auto$wreduce.cc:454:run$12400 [2] }
      New connections: { $auto$wreduce.cc:454:run$12400 [14:12] $auto$wreduce.cc:454:run$12400 [5] $auto$wreduce.cc:454:run$12400 [3] $auto$wreduce.cc:454:run$12400 [1:0] } = 7'0001011
    Consolidated identical input bits for $pmux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$10891:
      Old ports: A={ 1'0 \if_stage_i.compressed_decoder_i.instr_i [10] 5'00000 \if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'10101 \if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0010011 }, B={ \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 5'11101 \if_stage_i.compressed_decoder_i.instr_i [9:7] 7'0010011 $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] }, Y=$flatten\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0]
      New ports: A={ 1'0 \if_stage_i.compressed_decoder_i.instr_i [10] 5'00000 \if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 12'101010010011 }, B={ \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [12] \if_stage_i.compressed_decoder_i.instr_i [6:2] 2'01 \if_stage_i.compressed_decoder_i.instr_i [9:7] 12'111010010011 $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [31:10] $flatten\if_stage_i.\compressed_decoder_i.$6\instr_o[31:0] [6:0] }, Y={ $flatten\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0] [31:10] $flatten\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0] [6:0] }
      New connections: $flatten\if_stage_i.\compressed_decoder_i.$5\instr_o[31:0] [9:7] = \if_stage_i.compressed_decoder_i.instr_i [9:7]
    Consolidated identical input bits for $mux cell $flatten\load_store_unit_i.$procmux$11086:
      Old ports: A=3'100, B={ 1'0 $auto$wreduce.cc:454:run$12411 [1:0] }, Y=$flatten\load_store_unit_i.$5\ls_fsm_ns[2:0]
      New ports: A=2'10, B={ 1'0 $auto$wreduce.cc:454:run$12411 [0] }, Y={ $flatten\load_store_unit_i.$5\ls_fsm_ns[2:0] [2] $flatten\load_store_unit_i.$5\ls_fsm_ns[2:0] [0] }
      New connections: $flatten\load_store_unit_i.$5\ls_fsm_ns[2:0] [1] = $flatten\load_store_unit_i.$5\ls_fsm_ns[2:0] [0]
    Consolidated identical input bits for $pmux cell $flatten\load_store_unit_i.$procmux$11389:
      Old ports: A=$flatten\load_store_unit_i.$2\rdata_b_ext[31:0], B={ $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] }, Y=\load_store_unit_i.rdata_b_ext
      New ports: A={ $flatten\load_store_unit_i.$2\rdata_b_ext[31:0] [8] \data_rdata_i [7:0] }, B={ $flatten\load_store_unit_i.$3\rdata_b_ext[31:0] [8] \data_rdata_i [15:8] $flatten\load_store_unit_i.$4\rdata_b_ext[31:0] [8] \data_rdata_i [23:16] $flatten\load_store_unit_i.$5\rdata_b_ext[31:0] [8] \data_rdata_i [31:24] }, Y=\load_store_unit_i.rdata_b_ext [8:0]
      New connections: \load_store_unit_i.rdata_b_ext [31:9] = { \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] \load_store_unit_i.rdata_b_ext [8] }
    Consolidated identical input bits for $pmux cell $flatten\load_store_unit_i.$procmux$11420:
      Old ports: A=$flatten\load_store_unit_i.$2\rdata_h_ext[31:0], B={ $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] }, Y=\load_store_unit_i.rdata_h_ext
      New ports: A={ $flatten\load_store_unit_i.$2\rdata_h_ext[31:0] [16] \data_rdata_i [15:0] }, B={ $flatten\load_store_unit_i.$3\rdata_h_ext[31:0] [16] \data_rdata_i [23:8] $flatten\load_store_unit_i.$4\rdata_h_ext[31:0] [16] \data_rdata_i [31:16] $flatten\load_store_unit_i.$5\rdata_h_ext[31:0] [16] \data_rdata_i [7:0] \load_store_unit_i.rdata_q [23:16] }, Y=\load_store_unit_i.rdata_h_ext [16:0]
      New connections: \load_store_unit_i.rdata_h_ext [31:17] = { \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] \load_store_unit_i.rdata_h_ext [16] }
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$procmux$8718:
      Old ports: A=$flatten\cs_registers_i.$3\mepc_d[31:0], B={ \cs_registers_i.csr_wdata_int [31:1] 1'0 }, Y=$flatten\cs_registers_i.$2\mepc_d[31:0]
      New ports: A=$flatten\cs_registers_i.$3\mepc_d[31:0] [31:1], B=\cs_registers_i.csr_wdata_int [31:1], Y=$flatten\cs_registers_i.$2\mepc_d[31:0] [31:1]
      New connections: $flatten\cs_registers_i.$2\mepc_d[31:0] [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\cs_registers_i.$procmux$8763:
      Old ports: A={ \cs_registers_i.csr_wdata_int [31:1] 1'0 }, B=$flatten\cs_registers_i.$2\depc_d[31:0], Y=\cs_registers_i.u_depc_csr.wr_data_i
      New ports: A=\cs_registers_i.csr_wdata_int [31:1], B=$flatten\cs_registers_i.$2\depc_d[31:0] [31:1], Y=\cs_registers_i.u_depc_csr.wr_data_i [31:1]
      New connections: \cs_registers_i.u_depc_csr.wr_data_i [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6379:
      Old ports: A=$auto$wreduce.cc:454:run$12384 [2:0], B=3'101, Y=$auto$wreduce.cc:454:run$12383 [2:0]
      New ports: A=$auto$wreduce.cc:454:run$12384 [1:0], B=2'01, Y=$auto$wreduce.cc:454:run$12383 [1:0]
      New connections: $auto$wreduce.cc:454:run$12383 [2] = $auto$wreduce.cc:454:run$12383 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6658:
      Old ports: A=$flatten\id_stage_i.\controller_i.$procmux$6656_Y, B=4'0101, Y=$flatten\id_stage_i.\controller_i.$procmux$6658_Y
      New ports: A=$flatten\id_stage_i.\controller_i.$procmux$6656_Y [3:2], B=2'01, Y=$flatten\id_stage_i.\controller_i.$procmux$6658_Y [3:2]
      New connections: $flatten\id_stage_i.\controller_i.$procmux$6658_Y [1:0] = 2'01
    Consolidated identical input bits for $pmux cell $flatten\id_stage_i.\decoder_i.$procmux$5001:
      Old ports: A=6'000000, B={ 36'100101100110000010000011000100001010 $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] }, Y=$flatten\id_stage_i.\decoder_i.$6\alu_operator_o[5:0]
      New ports: A=5'00000, B={ 30'101011011000010000110010001010 $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [3] $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1] $flatten\id_stage_i.\decoder_i.$8\alu_operator_o[5:0] [1:0] }, Y={ $flatten\id_stage_i.\decoder_i.$6\alu_operator_o[5:0] [5] $flatten\id_stage_i.\decoder_i.$6\alu_operator_o[5:0] [3:0] }
      New connections: $flatten\id_stage_i.\decoder_i.$6\alu_operator_o[5:0] [4] = 1'0
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\compressed_decoder_i.$procmux$10786:
      Old ports: A=$auto$wreduce.cc:454:run$12403 [24:0], B=$auto$wreduce.cc:454:run$12400 [24:0], Y=$auto$wreduce.cc:454:run$12402 [24:0]
      New ports: A={ $auto$wreduce.cc:454:run$12403 [24:15] $auto$wreduce.cc:454:run$12403 [11:7] $auto$wreduce.cc:454:run$12403 [2] $auto$wreduce.cc:454:run$12403 [4] $auto$wreduce.cc:454:run$12403 [2] }, B={ $auto$wreduce.cc:454:run$12400 [24:15] $auto$wreduce.cc:454:run$12400 [11:6] $auto$wreduce.cc:454:run$12400 [4] $auto$wreduce.cc:454:run$12400 [2] }, Y={ $auto$wreduce.cc:454:run$12402 [24:15] $auto$wreduce.cc:454:run$12402 [11:6] $auto$wreduce.cc:454:run$12402 [4] $auto$wreduce.cc:454:run$12402 [2] }
      New connections: { $auto$wreduce.cc:454:run$12402 [14:12] $auto$wreduce.cc:454:run$12402 [5] $auto$wreduce.cc:454:run$12402 [3] $auto$wreduce.cc:454:run$12402 [1:0] } = 7'0001011
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6457:
      Old ports: A=$auto$wreduce.cc:454:run$12383 [2:0], B=3'101, Y=$auto$wreduce.cc:454:run$12382 [2:0]
      New ports: A=$auto$wreduce.cc:454:run$12383 [1:0], B=2'01, Y=$auto$wreduce.cc:454:run$12382 [1:0]
      New connections: $auto$wreduce.cc:454:run$12382 [2] = $auto$wreduce.cc:454:run$12382 [0]
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6660:
      Old ports: A=$flatten\id_stage_i.\controller_i.$procmux$6658_Y, B=4'0101, Y=$flatten\id_stage_i.\controller_i.$procmux$6660_Y
      New ports: A=$flatten\id_stage_i.\controller_i.$procmux$6658_Y [3:2], B=2'01, Y=$flatten\id_stage_i.\controller_i.$procmux$6660_Y [3:2]
      New connections: $flatten\id_stage_i.\controller_i.$procmux$6660_Y [1:0] = 2'01
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $mux cell $flatten\id_stage_i.\controller_i.$procmux$6662:
      Old ports: A=$flatten\id_stage_i.\controller_i.$procmux$6660_Y, B=4'0101, Y=$flatten\id_stage_i.\controller_i.$12\ctrl_fsm_ns[3:0]
      New ports: A=$flatten\id_stage_i.\controller_i.$procmux$6660_Y [3:2], B=2'01, Y=$flatten\id_stage_i.\controller_i.$12\ctrl_fsm_ns[3:0] [3:2]
      New connections: $flatten\id_stage_i.\controller_i.$12\ctrl_fsm_ns[3:0] [1:0] = 2'01
  Optimizing cells in module \ibex_core.
Performed a total of 70 changes.

27.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~15 debug messages>
Removed a total of 5 cells.

27.20.6. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $mux $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:66$4660 in front of them:
        $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$and$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:66$4656
        $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.\fifo_i.$and$/openLANE_flow/designs/ibex/src/ibex_fetch_fifo.v:66$4659

    Found cells that share an operand and can be merged by moving the $pmux $flatten\load_store_unit_i.$procmux$11351 in front of them:
        $flatten\load_store_unit_i.$procmux$10994
        $flatten\load_store_unit_i.$procmux$11094

27.20.7. Executing OPT_DFF pass (perform DFF optimizations).
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[15]$12558 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[10]$12548 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[11]$12550 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[12]$12552 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[13]$12554 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[9]$12546 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[14]$12556 ($dff) from module ibex_core.
Adding SRST signal on $auto$opt_dff.cc:764:run$12208 ($dffe) from module ibex_core (D = \if_stage_i.fetch_addr_n [1], Q = \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [1], rval = 1'0).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12178 ($adffe) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[0]$12528 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[1]$12530 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[2]$12532 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[3]$12534 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[4]$12536 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[5]$12538 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[6]$12540 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[7]$12542 ($dff) from module ibex_core.
Handling const CLK on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core (removing D path).
Setting constant 0-bit at position 0 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 1 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 2 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 3 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 4 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 5 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 6 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 7 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 8 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 9 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 10 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 11 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 12 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 13 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 14 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 15 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 16 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 17 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 18 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 19 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 20 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 21 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 22 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 23 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 24 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 25 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 26 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 27 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 28 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 29 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 30 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.
Setting constant 0-bit at position 31 on $memory\cs_registers_i.pmp_addr_rdata[8]$12544 ($dff) from module ibex_core.

27.20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 1 unused cells and 522 unused wires.
<suppressed ~2 debug messages>

27.20.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~27 debug messages>

27.20.10. Rerunning OPT passes. (Maybe there is more to do..)

27.20.11. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~161 debug messages>

27.20.12. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10046: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10133: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10052_CTRL $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10179: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10225: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10078_CMP $auto$opt_reduce.cc:134:opt_mux$12365 $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10271: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10316: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$10408: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9692: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9736: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$procmux$10171_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9780: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9822: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9867: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $auto$opt_reduce.cc:134:opt_mux$11880 $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9908: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9956: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$procmux$10081_CMP $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$11300: $auto$opt_reduce.cc:134:opt_mux$13288
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$11351: $auto$opt_reduce.cc:134:opt_mux$13290
  Optimizing cells in module \ibex_core.
Performed a total of 16 changes.

27.20.13. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~24 debug messages>
Removed a total of 8 cells.

27.20.14. Executing OPT_SHARE pass.
    Found cells that share an operand and can be merged by moving the $pmux $flatten\load_store_unit_i.$procmux$11323 in front of them:
        $flatten\load_store_unit_i.$procmux$11000
        $flatten\load_store_unit_i.$procmux$11078

27.20.15. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12326 ($adffe) from module ibex_core.
Setting constant 1-bit at position 0 on $auto$opt_dff.cc:764:run$12311 ($adffe) from module ibex_core.
Setting constant 0-bit at position 1 on $auto$opt_dff.cc:764:run$12311 ($adffe) from module ibex_core.
Setting constant 0-bit at position 2 on $auto$opt_dff.cc:764:run$12311 ($adffe) from module ibex_core.
Setting constant 0-bit at position 3 on $auto$opt_dff.cc:764:run$12311 ($adffe) from module ibex_core.
Setting constant 0-bit at position 4 on $auto$opt_dff.cc:764:run$12311 ($adffe) from module ibex_core.
Setting constant 0-bit at position 5 on $auto$opt_dff.cc:764:run$12311 ($adffe) from module ibex_core.
Setting constant 0-bit at position 6 on $auto$opt_dff.cc:764:run$12311 ($adffe) from module ibex_core.
Setting constant 0-bit at position 7 on $auto$opt_dff.cc:764:run$12311 ($adffe) from module ibex_core.
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:764:run$12208 ($dffe) from module ibex_core.

27.20.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 26 unused wires.
<suppressed ~1 debug messages>

27.20.17. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~3 debug messages>

27.20.18. Rerunning OPT passes. (Maybe there is more to do..)

27.20.19. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~160 debug messages>

27.20.20. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9780: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9822: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$2\dcsr_en[0:0] $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    New ctrl vector for $pmux cell $flatten\cs_registers_i.$procmux$9908: { $flatten\cs_registers_i.$procmux$10085_CMP $flatten\cs_registers_i.$2\mstatus_en[0:0] $flatten\cs_registers_i.$2\mie_en[0:0] $flatten\cs_registers_i.$2\mscratch_en[0:0] $flatten\cs_registers_i.$2\mepc_en[0:0] $flatten\cs_registers_i.$2\mcause_en[0:0] $flatten\cs_registers_i.$2\mtval_en[0:0] $flatten\cs_registers_i.$procmux$10078_CMP $flatten\cs_registers_i.$2\depc_en[0:0] $flatten\cs_registers_i.$2\dscratch0_en[0:0] $flatten\cs_registers_i.$2\dscratch1_en[0:0] $flatten\cs_registers_i.$2\mcountinhibit_we[0:0] $flatten\cs_registers_i.$procmux$10051_CTRL $flatten\cs_registers_i.$procmux$10039_CTRL }
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4430:
      Old ports: A={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:1] 1'0 }, B={ \if_stage_i.fetch_addr_n [31:1] 1'0 }, Y=$flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4430_Y
      New ports: A=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.fetch_addr_q [31:1], B=\if_stage_i.fetch_addr_n [31:1], Y=$flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4430_Y [31:1]
      New connections: $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4430_Y [0] = 1'0
    New ctrl vector for $pmux cell $flatten\load_store_unit_i.$procmux$11323: { $flatten\load_store_unit_i.$eq$/openLANE_flow/designs/ibex/src/ibex_load_store_unit.v:325$288_Y $flatten\load_store_unit_i.$procmux$11122_CMP $flatten\load_store_unit_i.$procmux$11022_CMP $auto$opt_reduce.cc:134:opt_mux$13295 }
  Optimizing cells in module \ibex_core.
Performed a total of 5 changes.

27.20.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

27.20.22. Executing OPT_SHARE pass.

27.20.23. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$opt_dff.cc:702:run$12207 ($sdffce) from module ibex_core.

27.20.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

27.20.25. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

27.20.26. Rerunning OPT passes. (Maybe there is more to do..)

27.20.27. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~160 debug messages>

27.20.28. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
    Consolidated identical input bits for $mux cell $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4431:
      Old ports: A={ $flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4430_Y [31:1] 1'0 }, B={ \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [31:1] 1'0 }, Y=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d
      New ports: A=$flatten\if_stage_i.\gen_prefetch_buffer.prefetch_buffer_i.$ternary$/openLANE_flow/designs/ibex/src/ibex_prefetch_buffer.v:149$4430_Y [31:1], B=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_q [31:1], Y=\if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d [31:1]
      New connections: \if_stage_i.gen_prefetch_buffer.prefetch_buffer_i.stored_addr_d [0] = 1'0
  Optimizing cells in module \ibex_core.
Performed a total of 1 changes.

27.20.29. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

27.20.30. Executing OPT_SHARE pass.

27.20.31. Executing OPT_DFF pass (perform DFF optimizations).

27.20.32. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

27.20.33. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

27.20.34. Rerunning OPT passes. (Maybe there is more to do..)

27.20.35. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~160 debug messages>

27.20.36. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

27.20.37. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

27.20.38. Executing OPT_SHARE pass.

27.20.39. Executing OPT_DFF pass (perform DFF optimizations).

27.20.40. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

27.20.41. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

27.20.42. Finished OPT passes. (There is nothing left to do.)

27.21. Executing TECHMAP pass (map to technology primitives).

27.21.1. Executing Verilog-2005 frontend: /build/bin/../share/yosys/techmap.v
Parsing Verilog input from `/build/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

27.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $adffe.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $dlatch.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $reduce_or.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=5\B_WIDTH=1\Y_WIDTH=5 for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=29\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=29\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using extmapper simplemap for cells of type $sdffce.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=29\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=33\B_WIDTH=33\Y_WIDTH=33 for cells of type $alu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=30\Y_WIDTH=30 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=5\S_WIDTH=7 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=6\S_WIDTH=5 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=6 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=2\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=9 for cells of type $pmux.
Using template $paramod$constmap:27416298eff2bef5b024d2c6ba87bd3d61407e73$paramod$82cc366d01f8fe741c66522b043725b812342daf\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=6 for cells of type $pmux.
Using template $paramod$constmap:dbcddb7b4524c1c5fa25e15435f3b9049e3d7d7a$paramod$7ef3ad10a9687337780288b591d283c11b1fd9ea\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod$constmap:e2101c44e3f83a0dc2da774cd1fdd19ff2da5f4f$paramod$70c4eba548f8011e647fa410bb9937e224a61f0e\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod\_90_pmux\WIDTH=16\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=18\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=34\S_WIDTH=4 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=31\Y_WIDTH=31 for cells of type $alu.
Using template $paramod$constmap:87f69c0bea22f84de4bcd0314b57cb19e61b5eb7$paramod$88abf4b792300efa328894e6936be740fdc22f6d\_90_shift_ops_shr_shl_sshl_sshr for cells of type $sshr.
Using extmapper maccmap for cells of type $macc.
  add { \ex_block_i.gen_multdiv_fast.multdiv_i.sign_a \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_op_a } * { \ex_block_i.gen_multdiv_fast.multdiv_i.sign_b \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_op_b } (17x17 bits, signed)
  add \ex_block_i.gen_multdiv_fast.multdiv_i.accum (34 bits, signed)
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=17\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=9\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=32\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=2\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=64\Y_WIDTH=64 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=64\S_WIDTH=2 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=12 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=13 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=9\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=14 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=15 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=15 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=3\S_WIDTH=13 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=12 for cells of type $pmux.
Using template $paramod$constmap:087bfedf5adb861684835f4fd4823e581f87d305$paramod$6e7719328f2d94689b6b8e5526363af5462deb90\_90_shift_ops_shr_shl_sshl_sshr for cells of type $shl.
Using template $paramod\_90_lcu\WIDTH=64 for cells of type $lcu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=31 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=30 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=33 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=34 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=34\B_WIDTH=34\Y_WIDTH=34 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=34 for cells of type $lcu.
No more expansions possible.
<suppressed ~7253 debug messages>

27.22. Executing OPT pass (performing simple optimizations).

27.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~16983 debug messages>

27.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~11712 debug messages>
Removed a total of 3904 cells.

27.22.3. Executing OPT_DFF pass (perform DFF optimizations).

27.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 8752 unused cells and 7326 unused wires.
<suppressed ~8753 debug messages>

27.22.5. Finished fast OPT passes.

27.23. Executing ABC pass (technology mapping using ABC).

27.23.1. Extracting gate netlist of module `\ibex_core' to `<abc-temp-dir>/input.blif'..
Extracted 14667 gates and 16749 wires to a netlist network with 2080 inputs and 863 outputs.

27.23.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 13 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

27.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:      679
ABC RESULTS:            ANDNOT cells:     3533
ABC RESULTS:               MUX cells:     4287
ABC RESULTS:              NAND cells:      389
ABC RESULTS:               NOR cells:      755
ABC RESULTS:               NOT cells:     1463
ABC RESULTS:                OR cells:     2531
ABC RESULTS:             ORNOT cells:      535
ABC RESULTS:              XNOR cells:      377
ABC RESULTS:               XOR cells:      769
ABC RESULTS:        internal signals:    13806
ABC RESULTS:           input signals:     2080
ABC RESULTS:          output signals:      863
Removing temp directory.

27.24. Executing OPT pass (performing simple optimizations).

27.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.
<suppressed ~2477 debug messages>

27.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
<suppressed ~78 debug messages>
Removed a total of 26 cells.

27.24.3. Executing OPT_DFF pass (perform DFF optimizations).

27.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 10 unused cells and 6238 unused wires.
<suppressed ~392 debug messages>

27.24.5. Finished fast OPT passes.

27.25. Executing HIERARCHY pass (managing design hierarchy).

27.25.1. Analyzing design hierarchy..
Top module:  \ibex_core

27.25.2. Analyzing design hierarchy..
Top module:  \ibex_core
Removed 0 unused modules.

27.26. Printing statistics.

=== ibex_core ===

   Number of wires:              15485
   Number of wire bits:          31648
   Number of public wires:         998
   Number of public wire bits:   17161
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              17214
     $_ANDNOT_                    3529
     $_AND_                        676
     $_DFFE_PN0P_                 1623
     $_DFFE_PN1N_                    2
     $_DFFE_PN1P_                    4
     $_DFFE_PN_                     82
     $_DFFE_PP_                    190
     $_DFF_PN0_                     27
     $_DFF_PN1_                      2
     $_DLATCH_N_                     1
     $_MUX_                       4285
     $_NAND_                       388
     $_NOR_                        751
     $_NOT_                       1453
     $_ORNOT_                      533
     $_OR_                        2521
     $_SDFFCE_PN0N_                  1
     $_XNOR_                       377
     $_XOR_                        769

27.27. Executing CHECK pass (checking for obvious problems).
checking module ibex_core..
found and reported 0 problems.

28. Executing SHARE pass (SAT-based resource sharing).

29. Executing OPT pass (performing simple optimizations).

29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

29.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$21864 ($_DFF_PN0_) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [0], Q = \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [2]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$21863 ($_DFF_PN0_) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [2], Q = \ex_block_i.gen_multdiv_fast.multdiv_i.gen_mult_fast.mult_state_q [1]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$21756 ($_DFF_PN0_) from module ibex_core (D = $abc$68755$new_n8759_, Q = \load_store_unit_i.data_type_q [2]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$21755 ($_DFF_PN0_) from module ibex_core (D = $abc$68755$new_n8761_, Q = \load_store_unit_i.data_type_q [1]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$18497 ($_DFF_PN0_) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [1], Q = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [5]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$18494 ($_DFF_PN0_) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [4], Q = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [2]).
Adding EN signal on $auto$simplemap.cc:527:simplemap_adff_sdff$18492 ($_DFF_PN1_) from module ibex_core (D = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [3], Q = \ex_block_i.gen_multdiv_fast.multdiv_i.md_state_q [0]).

29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 7 unused cells and 7 unused wires.
<suppressed ~8 debug messages>

29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

29.9. Rerunning OPT passes. (Maybe there is more to do..)

29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \ibex_core..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \ibex_core.
Performed a total of 0 changes.

29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\ibex_core'.
Removed a total of 0 cells.

29.13. Executing OPT_DFF pass (perform DFF optimizations).

29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..

29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module ibex_core.

29.16. Finished OPT passes. (There is nothing left to do.)

30. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 0 unused cells and 818 unused wires.
<suppressed ~818 debug messages>

31. Printing statistics.

=== ibex_core ===

   Number of wires:              14660
   Number of wire bits:          17696
   Number of public wires:         180
   Number of public wire bits:    3216
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              17207
     $_ANDNOT_                    3529
     $_AND_                        676
     $_DFFE_PN0P_                 1629
     $_DFFE_PN1N_                    2
     $_DFFE_PN1P_                    5
     $_DFFE_PN_                     82
     $_DFFE_PP_                    190
     $_DFF_PN0_                     21
     $_DFF_PN1_                      1
     $_DLATCH_N_                     1
     $_MUX_                       4278
     $_NAND_                       388
     $_NOR_                        751
     $_NOT_                       1453
     $_ORNOT_                      533
     $_OR_                        2521
     $_SDFFCE_PN0N_                  1
     $_XNOR_                       377
     $_XOR_                        769

32. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell sky130_fd_sc_hd__dfxtp_4 (noninv, pins=3, area=23.77) is a direct match for cell type $_DFF_P_.
  cell sky130_fd_sc_hd__dfrtp_4 (noninv, pins=4, area=28.78) is a direct match for cell type $_DFF_PN0_.
  cell sky130_fd_sc_hd__dfstp_4 (noninv, pins=4, area=30.03) is a direct match for cell type $_DFF_PN1_.
  cell sky130_fd_sc_hd__dfbbn_2 (noninv, pins=6, area=35.03) is a direct match for cell type $_DFFSR_NNN_.
  final dff cell mappings:
    unmapped dff cell: $_DFF_N_
    \sky130_fd_sc_hd__dfxtp_4 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    unmapped dff cell: $_DFF_NN0_
    unmapped dff cell: $_DFF_NN1_
    unmapped dff cell: $_DFF_NP0_
    unmapped dff cell: $_DFF_NP1_
    \sky130_fd_sc_hd__dfrtp_4 _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .RESET_B( R));
    \sky130_fd_sc_hd__dfstp_4 _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .SET_B( R));
    unmapped dff cell: $_DFF_PP0_
    unmapped dff cell: $_DFF_PP1_
    \sky130_fd_sc_hd__dfbbn_2 _DFFSR_NNN_ (.CLK_N( C), .D( D), .Q( Q), .Q_N(~Q), .RESET_B( R), .SET_B( S));
    unmapped dff cell: $_DFFSR_NNP_
    unmapped dff cell: $_DFFSR_NPN_
    unmapped dff cell: $_DFFSR_NPP_
    unmapped dff cell: $_DFFSR_PNN_
    unmapped dff cell: $_DFFSR_PNP_
    unmapped dff cell: $_DFFSR_PPN_
    unmapped dff cell: $_DFFSR_PPP_

32.1. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).
Mapping DFF cells in module `\ibex_core':
  mapped 1650 $_DFF_PN0_ cells to \sky130_fd_sc_hd__dfrtp_4 cells.
  mapped 8 $_DFF_PN1_ cells to \sky130_fd_sc_hd__dfstp_4 cells.
  mapped 273 $_DFF_P_ cells to \sky130_fd_sc_hd__dfxtp_4 cells.

33. Printing statistics.

=== ibex_core ===

   Number of wires:              16570
   Number of wire bits:          19606
   Number of public wires:         180
   Number of public wire bits:    3216
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              19117
     $_ANDNOT_                    3529
     $_AND_                        676
     $_DLATCH_N_                     1
     $_MUX_                       6188
     $_NAND_                       388
     $_NOR_                        751
     $_NOT_                       1453
     $_ORNOT_                      533
     $_OR_                        2521
     $_XNOR_                       377
     $_XOR_                        769
     sky130_fd_sc_hd__dfrtp_4     1650
     sky130_fd_sc_hd__dfstp_4        8
     sky130_fd_sc_hd__dfxtp_4      273

34. Executing ABC pass (technology mapping using ABC).

34.1. Extracting gate netlist of module `\ibex_core' to `/tmp/yosys-abc-jPZNwR/input.blif'..
Extracted 17185 gates and 19268 wires to a netlist network with 2081 inputs and 2033 outputs.

34.1.1. Executing ABC.
Running ABC command: /build/bin/yosys-abc -s -f /tmp/yosys-abc-jPZNwR/abc.script 2>&1
ABC: ABC command line: "source /tmp/yosys-abc-jPZNwR/abc.script".
ABC: 
ABC: + read_blif /tmp/yosys-abc-jPZNwR/input.blif 
ABC: + read_lib -w /openLANE_flow/designs/ibex/runs/25-11_21-34/tmp/trimmed.lib 
ABC: Parsing finished successfully.  Parsing time =     0.02 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfbbn_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfrtp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfstp_4".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxbp_2".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "sky130_fd_sc_hd__dfxtp_4".
ABC: Library "sky130_fd_sc_hd__tt_025C_1v80" from "/openLANE_flow/designs/ibex/runs/25-11_21-34/tmp/trimmed.lib" has 43 cells (6 skipped: 6 seq; 0 tri-state; 0 no func; 0 dont_use).  Time =     0.03 sec
ABC: Memory =    1.92 MB. Time =     0.03 sec
ABC: + read_constr -v /openLANE_flow/designs/ibex/runs/25-11_21-34/tmp/synthesis/yosys.sdc 
ABC: Setting driving cell to be "sky130_fd_sc_hd__inv_8".
ABC: Setting output load to be 17.650000.
ABC: + read_constr /openLANE_flow/designs/ibex/runs/25-11_21-34/tmp/synthesis/yosys.sdc 
ABC: + fx 
ABC: Abc_NtkFastExtract: Nodes have duplicated fanins. FX is not performed.
ABC: + mfs 
ABC: + strash 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + refactor 
ABC: + balance 
ABC: + rewrite 
ABC: + rewrite -z 
ABC: + balance 
ABC: + refactor -z 
ABC: + rewrite -z 
ABC: + balance 
ABC: + retime -D -D 10000.0 -M 5 
ABC: + scleanup 
ABC: Error: The network is combinational.
ABC: + amap -m -Q 0.1 -F 20 -A 20 -C 5000 
ABC: + retime -D -D 10000.0 
ABC: + buffer -N 5 -S 1000.0 
ABC: Node 5661 has dup fanin 5592.
ABC: Node 5661 has dup fanin 5592.
ABC: Node 6954 has dup fanin 5818.
ABC: Node 6954 has dup fanin 5818.
ABC: Node 6965 has dup fanin 6894.
ABC: Node 6965 has dup fanin 6963.
ABC: Node 6965 has dup fanin 6894.
ABC: Node 6965 has dup fanin 6963.
ABC: Node 7638 has dup fanin 7568.
ABC: Node 7638 has dup fanin 7636.
ABC: Node 7638 has dup fanin 7568.
ABC: Node 7638 has dup fanin 7636.
ABC: Node 9921 has dup fanin 5910.
ABC: Node 9921 has dup fanin 9920.
ABC: Node 9921 has dup fanin 5910.
ABC: Node 9921 has dup fanin 9920.
ABC: Node 9924 has dup fanin 6436.
ABC: Node 9924 has dup fanin 9923.
ABC: Node 9924 has dup fanin 6436.
ABC: Node 9924 has dup fanin 9923.
ABC: Node 9925 has dup fanin 6041.
ABC: Node 9925 has dup fanin 9919.
ABC: Node 9925 has dup fanin 6041.
ABC: Node 9925 has dup fanin 9919.
ABC: Node 9928 has dup fanin 6303.
ABC: Node 9928 has dup fanin 9927.
ABC: Node 9928 has dup fanin 6303.
ABC: Node 9928 has dup fanin 9927.
ABC: Node 9930 has dup fanin 6567.
ABC: Node 9930 has dup fanin 9922.
ABC: Node 9930 has dup fanin 6567.
ABC: Node 9930 has dup fanin 9922.
ABC: Node 9933 has dup fanin 9915.
ABC: Node 9933 has dup fanin 9932.
ABC: Node 9933 has dup fanin 9915.
ABC: Node 9933 has dup fanin 9932.
ABC: Node 9934 has dup fanin 6304.
ABC: Node 9934 has dup fanin 9918.
ABC: Node 9934 has dup fanin 6304.
ABC: Node 9934 has dup fanin 9918.
ABC: Node 9939 has dup fanin 8832.
ABC: Node 9939 has dup fanin 9938.
ABC: Node 9939 has dup fanin 8832.
ABC: Node 9939 has dup fanin 9938.
ABC: Node 9941 has dup fanin 8844.
ABC: Node 9941 has dup fanin 9769.
ABC: Node 9941 has dup fanin 8844.
ABC: Node 9941 has dup fanin 9769.
ABC: Node 9944 has dup fanin 7374.
ABC: Node 9944 has dup fanin 9943.
ABC: Node 9944 has dup fanin 7374.
ABC: Node 9944 has dup fanin 9943.
ABC: Node 9947 has dup fanin 7239.
ABC: Node 9947 has dup fanin 9946.
ABC: Node 9947 has dup fanin 7239.
ABC: Node 9947 has dup fanin 9946.
ABC: Node 9949 has dup fanin 6964.
ABC: Node 9949 has dup fanin 6965.
ABC: Node 9949 has dup fanin 6964.
ABC: Node 9949 has dup fanin 6965.
ABC: Node 9951 has dup fanin 6966.
ABC: Node 9951 has dup fanin 7104.
ABC: Node 9951 has dup fanin 6966.
ABC: Node 9951 has dup fanin 7104.
ABC: Node 9958 has dup fanin 7779.
ABC: Node 9958 has dup fanin 8171.
ABC: Node 9958 has dup fanin 7779.
ABC: Node 9958 has dup fanin 8171.
ABC: Node 9962 has dup fanin 7504.
ABC: Node 9962 has dup fanin 9961.
ABC: Node 9962 has dup fanin 7504.
ABC: Node 9962 has dup fanin 9961.
ABC: Node 9964 has dup fanin 7909.
ABC: Node 9964 has dup fanin 9963.
ABC: Node 9964 has dup fanin 7909.
ABC: Node 9964 has dup fanin 9963.
ABC: Node 9966 has dup fanin 8438.
ABC: Node 9966 has dup fanin 9936.
ABC: Node 9966 has dup fanin 8438.
ABC: Node 9966 has dup fanin 9936.
ABC: Node 9969 has dup fanin 8303.
ABC: Node 9969 has dup fanin 9968.
ABC: Node 9969 has dup fanin 8303.
ABC: Node 9969 has dup fanin 9968.
ABC: Node 9971 has dup fanin 8701.
ABC: Node 9971 has dup fanin 9937.
ABC: Node 9971 has dup fanin 8701.
ABC: Node 9971 has dup fanin 9937.
ABC: Node 9974 has dup fanin 8570.
ABC: Node 9974 has dup fanin 9973.
ABC: Node 9974 has dup fanin 8570.
ABC: Node 9974 has dup fanin 9973.
ABC: Node 9975 has dup fanin 9913.
ABC: Node 9975 has dup fanin 9914.
ABC: Node 9975 has dup fanin 9913.
ABC: Node 9975 has dup fanin 9914.
ABC: Node 9978 has dup fanin 8040.
ABC: Node 9978 has dup fanin 9977.
ABC: Node 9978 has dup fanin 8040.
ABC: Node 9978 has dup fanin 9977.
ABC: Node 10117 has dup fanin 10049.
ABC: Node 10117 has dup fanin 10116.
ABC: Node 10117 has dup fanin 10049.
ABC: Node 10117 has dup fanin 10116.
ABC: Node 10118 has dup fanin 9987.
ABC: Node 10118 has dup fanin 10117.
ABC: Node 10118 has dup fanin 9987.
ABC: Node 10118 has dup fanin 10117.
ABC: Node 10121 has dup fanin 9901.
ABC: Node 10121 has dup fanin 10120.
ABC: Node 10121 has dup fanin 9901.
ABC: Node 10121 has dup fanin 10120.
ABC: Node 10123 has dup fanin 9240.
ABC: Node 10123 has dup fanin 10122.
ABC: Node 10123 has dup fanin 9240.
ABC: Node 10123 has dup fanin 10122.
ABC: Node 10126 has dup fanin 9637.
ABC: Node 10126 has dup fanin 10125.
ABC: Node 10126 has dup fanin 9637.
ABC: Node 10126 has dup fanin 10125.
ABC: Node 10132 has dup fanin 8976.
ABC: Node 10132 has dup fanin 10131.
ABC: Node 10132 has dup fanin 8976.
ABC: Node 10132 has dup fanin 10131.
ABC: Node 10134 has dup fanin 9506.
ABC: Node 10134 has dup fanin 10133.
ABC: Node 10134 has dup fanin 9506.
ABC: Node 10134 has dup fanin 10133.
ABC: Node 10136 has dup fanin 9372.
ABC: Node 10136 has dup fanin 10135.
ABC: Node 10136 has dup fanin 9372.
ABC: Node 10136 has dup fanin 10135.
ABC: Node 10137 has dup fanin 9107.
ABC: Node 10137 has dup fanin 10130.
ABC: Node 10137 has dup fanin 9107.
ABC: Node 10137 has dup fanin 10130.
ABC: Node 10431 has dup fanin 10413.
ABC: Node 10431 has dup fanin 10413.
ABC: Node 10433 has dup fanin 10420.
ABC: Node 10433 has dup fanin 10428.
ABC: Node 10433 has dup fanin 10420.
ABC: Node 10433 has dup fanin 10428.
ABC: Node 10441 has dup fanin 10438.
ABC: Node 10441 has dup fanin 10440.
ABC: Node 10441 has dup fanin 10438.
ABC: Node 10441 has dup fanin 10440.
ABC: Node 10442 has dup fanin 10437.
ABC: Node 10442 has dup fanin 10441.
ABC: Node 10442 has dup fanin 10437.
ABC: Node 10442 has dup fanin 10441.
ABC: Node 10443 has dup fanin 10413.
ABC: Node 10443 has dup fanin 10413.
ABC: Node 10454 has dup fanin 10413.
ABC: Node 10454 has dup fanin 10413.
ABC: Node 10458 has dup fanin 10446.
ABC: Node 10458 has dup fanin 10457.
ABC: Node 10458 has dup fanin 10446.
ABC: Node 10458 has dup fanin 10457.
ABC: Node 10459 has dup fanin 10434.
ABC: Node 10459 has dup fanin 10442.
ABC: Node 10459 has dup fanin 10434.
ABC: Node 10459 has dup fanin 10442.
ABC: Node 10468 has dup fanin 10463.
ABC: Node 10468 has dup fanin 10467.
ABC: Node 10468 has dup fanin 10463.
ABC: Node 10468 has dup fanin 10467.
ABC: Node 10474 has dup fanin 10471.
ABC: Node 10474 has dup fanin 10473.
ABC: Node 10474 has dup fanin 10471.
ABC: Node 10474 has dup fanin 10473.
ABC: Node 10475 has dup fanin 10470.
ABC: Node 10475 has dup fanin 10474.
ABC: Node 10475 has dup fanin 10470.
ABC: Node 10475 has dup fanin 10474.
ABC: Node 10488 has dup fanin 10413.
ABC: Node 10488 has dup fanin 10413.
ABC: Node 10495 has dup fanin 10484.
ABC: Node 10495 has dup fanin 10487.
ABC: Node 10495 has dup fanin 10484.
ABC: Node 10495 has dup fanin 10487.
ABC: Node 10504 has dup fanin 10502.
ABC: Node 10504 has dup fanin 10503.
ABC: Node 10504 has dup fanin 10502.
ABC: Node 10504 has dup fanin 10503.
ABC: Node 10507 has dup fanin 10460.
ABC: Node 10507 has dup fanin 10479.
ABC: Node 10507 has dup fanin 10460.
ABC: Node 10507 has dup fanin 10479.
ABC: Node 10510 has dup fanin 10486.
ABC: Node 10510 has dup fanin 10486.
ABC: Node 10515 has dup fanin 10513.
ABC: Node 10515 has dup fanin 10514.
ABC: Node 10515 has dup fanin 10513.
ABC: Node 10515 has dup fanin 10514.
ABC: Node 10524 has dup fanin 10519.
ABC: Node 10524 has dup fanin 10523.
ABC: Node 10524 has dup fanin 10519.
ABC: Node 10524 has dup fanin 10523.
ABC: Node 10530 has dup fanin 10527.
ABC: Node 10530 has dup fanin 10529.
ABC: Node 10530 has dup fanin 10527.
ABC: Node 10530 has dup fanin 10529.
ABC: Node 10531 has dup fanin 10526.
ABC: Node 10531 has dup fanin 10530.
ABC: Node 10531 has dup fanin 10526.
ABC: Node 10531 has dup fanin 10530.
ABC: Node 10540 has dup fanin 10413.
ABC: Node 10540 has dup fanin 10413.
ABC: Node 10542 has dup fanin 10413.
ABC: Node 10542 has dup fanin 10413.
ABC: Node 10543 has dup fanin 10413.
ABC: Node 10543 has dup fanin 10413.
ABC: Node 10546 has dup fanin 10413.
ABC: Node 10546 has dup fanin 10413.
ABC: Node 10548 has dup fanin 10413.
ABC: Node 10548 has dup fanin 10413.
ABC: Node 10553 has dup fanin 10413.
ABC: Node 10553 has dup fanin 10413.
ABC: Node 10560 has dup fanin 10541.
ABC: Node 10560 has dup fanin 10541.
ABC: Node 10562 has dup fanin 10556.
ABC: Node 10562 has dup fanin 10560.
ABC: Node 10562 has dup fanin 10556.
ABC: Node 10562 has dup fanin 10560.
ABC: Node 10568 has dup fanin 10508.
ABC: Node 10568 has dup fanin 10539.
ABC: Node 10568 has dup fanin 10508.
ABC: Node 10568 has dup fanin 10539.
ABC: Node 10578 has dup fanin 10513.
ABC: Node 10578 has dup fanin 10577.
ABC: Node 10578 has dup fanin 10513.
ABC: Node 10578 has dup fanin 10577.
ABC: Node 10588 has dup fanin 10582.
ABC: Node 10588 has dup fanin 10587.
ABC: Node 10588 has dup fanin 10582.
ABC: Node 10588 has dup fanin 10587.
ABC: Node 10594 has dup fanin 10591.
ABC: Node 10594 has dup fanin 10593.
ABC: Node 10594 has dup fanin 10591.
ABC: Node 10594 has dup fanin 10593.
ABC: Node 10595 has dup fanin 10590.
ABC: Node 10595 has dup fanin 10594.
ABC: Node 10595 has dup fanin 10590.
ABC: Node 10595 has dup fanin 10594.
ABC: Node 10608 has dup fanin 10569.
ABC: Node 10608 has dup fanin 10607.
ABC: Node 10608 has dup fanin 10569.
ABC: Node 10608 has dup fanin 10607.
ABC: Node 10610 has dup fanin 10413.
ABC: Node 10610 has dup fanin 10413.
ABC: Node 10611 has dup fanin 10413.
ABC: Node 10611 has dup fanin 10413.
ABC: Node 10617 has dup fanin 10413.
ABC: Node 10617 has dup fanin 10413.
ABC: Node 10621 has dup fanin 10616.
ABC: Node 10621 has dup fanin 10618.
ABC: Node 10621 has dup fanin 10616.
ABC: Node 10621 has dup fanin 10618.
ABC: Node 10651 has dup fanin 10648.
ABC: Node 10651 has dup fanin 10650.
ABC: Node 10651 has dup fanin 10648.
ABC: Node 10651 has dup fanin 10650.
ABC: Node 10652 has dup fanin 10647.
ABC: Node 10652 has dup fanin 10651.
ABC: Node 10652 has dup fanin 10647.
ABC: Node 10652 has dup fanin 10651.
ABC: Node 10672 has dup fanin 10626.
ABC: Node 10672 has dup fanin 10671.
ABC: Node 10672 has dup fanin 10626.
ABC: Node 10672 has dup fanin 10671.
ABC: Node 10688 has dup fanin 10454.
ABC: Node 10688 has dup fanin 10454.
ABC: Node 10698 has dup fanin 10695.
ABC: Node 10698 has dup fanin 10697.
ABC: Node 10698 has dup fanin 10695.
ABC: Node 10698 has dup fanin 10697.
ABC: Node 10699 has dup fanin 10694.
ABC: Node 10699 has dup fanin 10698.
ABC: Node 10699 has dup fanin 10694.
ABC: Node 10699 has dup fanin 10698.
ABC: Node 10702 has dup fanin 10692.
ABC: Node 10702 has dup fanin 10701.
ABC: Node 10702 has dup fanin 10692.
ABC: Node 10702 has dup fanin 10701.
ABC: Node 10732 has dup fanin 10725.
ABC: Node 10732 has dup fanin 10728.
ABC: Node 10732 has dup fanin 10725.
ABC: Node 10732 has dup fanin 10728.
ABC: Node 10740 has dup fanin 10738.
ABC: Node 10740 has dup fanin 10739.
ABC: Node 10740 has dup fanin 10738.
ABC: Node 10740 has dup fanin 10739.
ABC: Node 10741 has dup fanin 10736.
ABC: Node 10741 has dup fanin 10740.
ABC: Node 10741 has dup fanin 10736.
ABC: Node 10741 has dup fanin 10740.
ABC: Node 10747 has dup fanin 10742.
ABC: Node 10747 has dup fanin 10746.
ABC: Node 10747 has dup fanin 10742.
ABC: Node 10747 has dup fanin 10746.
ABC: Node 10748 has dup fanin 10733.
ABC: Node 10748 has dup fanin 10741.
ABC: Node 10748 has dup fanin 10733.
ABC: Node 10748 has dup fanin 10741.
ABC: Node 10755 has dup fanin 10750.
ABC: Node 10755 has dup fanin 10754.
ABC: Node 10755 has dup fanin 10750.
ABC: Node 10755 has dup fanin 10754.
ABC: Node 10761 has dup fanin 10758.
ABC: Node 10761 has dup fanin 10760.
ABC: Node 10761 has dup fanin 10758.
ABC: Node 10761 has dup fanin 10760.
ABC: Node 10762 has dup fanin 10757.
ABC: Node 10762 has dup fanin 10761.
ABC: Node 10762 has dup fanin 10757.
ABC: Node 10762 has dup fanin 10761.
ABC: Node 10763 has dup fanin 10756.
ABC: Node 10763 has dup fanin 10762.
ABC: Node 10763 has dup fanin 10756.
ABC: Node 10763 has dup fanin 10762.
ABC: Node 10764 has dup fanin 10755.
ABC: Node 10764 has dup fanin 10763.
ABC: Node 10764 has dup fanin 10755.
ABC: Node 10764 has dup fanin 10763.
ABC: Node 10768 has dup fanin 10765.
ABC: Node 10768 has dup fanin 10766.
ABC: Node 10768 has dup fanin 10765.
ABC: Node 10768 has dup fanin 10766.
ABC: Node 10775 has dup fanin 10770.
ABC: Node 10775 has dup fanin 10774.
ABC: Node 10775 has dup fanin 10770.
ABC: Node 10775 has dup fanin 10774.
ABC: Node 10777 has dup fanin 10775.
ABC: Node 10777 has dup fanin 10776.
ABC: Node 10777 has dup fanin 10775.
ABC: Node 10777 has dup fanin 10776.
ABC: Node 10780 has dup fanin 10749.
ABC: Node 10780 has dup fanin 10764.
ABC: Node 10780 has dup fanin 10749.
ABC: Node 10780 has dup fanin 10764.
ABC: Node 10788 has dup fanin 10783.
ABC: Node 10788 has dup fanin 10787.
ABC: Node 10788 has dup fanin 10783.
ABC: Node 10788 has dup fanin 10787.
ABC: Node 10790 has dup fanin 10788.
ABC: Node 10790 has dup fanin 10789.
ABC: Node 10790 has dup fanin 10788.
ABC: Node 10790 has dup fanin 10789.
ABC: Node 10799 has dup fanin 10794.
ABC: Node 10799 has dup fanin 10798.
ABC: Node 10799 has dup fanin 10794.
ABC: Node 10799 has dup fanin 10798.
ABC: Node 10801 has dup fanin 10432.
ABC: Node 10801 has dup fanin 10433.
ABC: Node 10801 has dup fanin 10432.
ABC: Node 10801 has dup fanin 10433.
ABC: Node 10802 has dup fanin 10800.
ABC: Node 10802 has dup fanin 10801.
ABC: Node 10802 has dup fanin 10800.
ABC: Node 10802 has dup fanin 10801.
ABC: Node 10803 has dup fanin 10799.
ABC: Node 10803 has dup fanin 10802.
ABC: Node 10803 has dup fanin 10799.
ABC: Node 10803 has dup fanin 10802.
ABC: Node 10804 has dup fanin 10793.
ABC: Node 10804 has dup fanin 10803.
ABC: Node 10804 has dup fanin 10793.
ABC: Node 10804 has dup fanin 10803.
ABC: Node 10805 has dup fanin 10792.
ABC: Node 10805 has dup fanin 10804.
ABC: Node 10805 has dup fanin 10792.
ABC: Node 10805 has dup fanin 10804.
ABC: Node 10808 has dup fanin 10806.
ABC: Node 10808 has dup fanin 10807.
ABC: Node 10808 has dup fanin 10806.
ABC: Node 10808 has dup fanin 10807.
ABC: Node 10813 has dup fanin 10541.
ABC: Node 10813 has dup fanin 10812.
ABC: Node 10813 has dup fanin 10541.
ABC: Node 10813 has dup fanin 10812.
ABC: Node 10814 has dup fanin 10809.
ABC: Node 10814 has dup fanin 10813.
ABC: Node 10814 has dup fanin 10809.
ABC: Node 10814 has dup fanin 10813.
ABC: Node 10819 has dup fanin 10817.
ABC: Node 10819 has dup fanin 10818.
ABC: Node 10819 has dup fanin 10817.
ABC: Node 10819 has dup fanin 10818.
ABC: Node 10820 has dup fanin 10556.
ABC: Node 10820 has dup fanin 10819.
ABC: Node 10820 has dup fanin 10556.
ABC: Node 10820 has dup fanin 10819.
ABC: Node 10822 has dup fanin 10820.
ABC: Node 10822 has dup fanin 10821.
ABC: Node 10822 has dup fanin 10820.
ABC: Node 10822 has dup fanin 10821.
ABC: Node 10825 has dup fanin 10781.
ABC: Node 10825 has dup fanin 10805.
ABC: Node 10825 has dup fanin 10781.
ABC: Node 10825 has dup fanin 10805.
ABC: Node 10829 has dup fanin 10562.
ABC: Node 10829 has dup fanin 10828.
ABC: Node 10829 has dup fanin 10562.
ABC: Node 10829 has dup fanin 10828.
ABC: Node 10834 has dup fanin 10493.
ABC: Node 10834 has dup fanin 10495.
ABC: Node 10834 has dup fanin 10493.
ABC: Node 10834 has dup fanin 10495.
ABC: Node 10836 has dup fanin 10834.
ABC: Node 10836 has dup fanin 10835.
ABC: Node 10836 has dup fanin 10834.
ABC: Node 10836 has dup fanin 10835.
ABC: Node 10840 has dup fanin 10458.
ABC: Node 10840 has dup fanin 10459.
ABC: Node 10840 has dup fanin 10458.
ABC: Node 10840 has dup fanin 10459.
ABC: Node 10841 has dup fanin 10839.
ABC: Node 10841 has dup fanin 10840.
ABC: Node 10841 has dup fanin 10839.
ABC: Node 10841 has dup fanin 10840.
ABC: Node 10842 has dup fanin 10838.
ABC: Node 10842 has dup fanin 10841.
ABC: Node 10842 has dup fanin 10838.
ABC: Node 10842 has dup fanin 10841.
ABC: Node 10843 has dup fanin 10832.
ABC: Node 10843 has dup fanin 10842.
ABC: Node 10843 has dup fanin 10832.
ABC: Node 10843 has dup fanin 10842.
ABC: Node 10844 has dup fanin 10831.
ABC: Node 10844 has dup fanin 10843.
ABC: Node 10844 has dup fanin 10831.
ABC: Node 10844 has dup fanin 10843.
ABC: Node 10845 has dup fanin 10826.
ABC: Node 10845 has dup fanin 10844.
ABC: Node 10845 has dup fanin 10826.
ABC: Node 10845 has dup fanin 10844.
ABC: Node 10852 has dup fanin 10562.
ABC: Node 10852 has dup fanin 10851.
ABC: Node 10852 has dup fanin 10562.
ABC: Node 10852 has dup fanin 10851.
ABC: Node 10856 has dup fanin 10506.
ABC: Node 10856 has dup fanin 10507.
ABC: Node 10856 has dup fanin 10506.
ABC: Node 10856 has dup fanin 10507.
ABC: Node 10857 has dup fanin 10855.
ABC: Node 10857 has dup fanin 10856.
ABC: Node 10857 has dup fanin 10855.
ABC: Node 10857 has dup fanin 10856.
ABC: Node 10858 has dup fanin 10854.
ABC: Node 10858 has dup fanin 10857.
ABC: Node 10858 has dup fanin 10854.
ABC: Node 10858 has dup fanin 10857.
ABC: Node 10859 has dup fanin 10850.
ABC: Node 10859 has dup fanin 10858.
ABC: Node 10859 has dup fanin 10850.
ABC: Node 10859 has dup fanin 10858.
ABC: Node 10863 has dup fanin 10859.
ABC: Node 10863 has dup fanin 10862.
ABC: Node 10863 has dup fanin 10859.
ABC: Node 10863 has dup fanin 10862.
ABC: Node 10864 has dup fanin 10849.
ABC: Node 10864 has dup fanin 10863.
ABC: Node 10864 has dup fanin 10849.
ABC: Node 10864 has dup fanin 10863.
ABC: Node 10868 has dup fanin 10567.
ABC: Node 10868 has dup fanin 10568.
ABC: Node 10868 has dup fanin 10567.
ABC: Node 10868 has dup fanin 10568.
ABC: Node 10869 has dup fanin 10867.
ABC: Node 10869 has dup fanin 10868.
ABC: Node 10869 has dup fanin 10867.
ABC: Node 10869 has dup fanin 10868.
ABC: Node 10873 has dup fanin 10869.
ABC: Node 10873 has dup fanin 10872.
ABC: Node 10873 has dup fanin 10869.
ABC: Node 10873 has dup fanin 10872.
ABC: Node 10874 has dup fanin 10866.
ABC: Node 10874 has dup fanin 10873.
ABC: Node 10874 has dup fanin 10866.
ABC: Node 10874 has dup fanin 10873.
ABC: Node 10875 has dup fanin 10861.
ABC: Node 10875 has dup fanin 10874.
ABC: Node 10875 has dup fanin 10861.
ABC: Node 10875 has dup fanin 10874.
ABC: Node 10886 has dup fanin 10881.
ABC: Node 10886 has dup fanin 10884.
ABC: Node 10886 has dup fanin 10881.
ABC: Node 10886 has dup fanin 10884.
ABC: Node 10888 has dup fanin 10731.
ABC: Node 10888 has dup fanin 10732.
ABC: Node 10888 has dup fanin 10731.
ABC: Node 10888 has dup fanin 10732.
ABC: Node 10894 has dup fanin 10889.
ABC: Node 10894 has dup fanin 10893.
ABC: Node 10894 has dup fanin 10889.
ABC: Node 10894 has dup fanin 10893.
ABC: Node 10895 has dup fanin 10887.
ABC: Node 10895 has dup fanin 10888.
ABC: Node 10895 has dup fanin 10887.
ABC: Node 10895 has dup fanin 10888.
ABC: Node 10897 has dup fanin 10747.
ABC: Node 10897 has dup fanin 10748.
ABC: Node 10897 has dup fanin 10747.
ABC: Node 10897 has dup fanin 10748.
ABC: Node 10901 has dup fanin 10898.
ABC: Node 10901 has dup fanin 10899.
ABC: Node 10901 has dup fanin 10898.
ABC: Node 10901 has dup fanin 10899.
ABC: Node 10903 has dup fanin 10767.
ABC: Node 10903 has dup fanin 10768.
ABC: Node 10903 has dup fanin 10767.
ABC: Node 10903 has dup fanin 10768.
ABC: Node 10905 has dup fanin 10903.
ABC: Node 10905 has dup fanin 10904.
ABC: Node 10905 has dup fanin 10903.
ABC: Node 10905 has dup fanin 10904.
ABC: Node 10908 has dup fanin 10896.
ABC: Node 10908 has dup fanin 10897.
ABC: Node 10908 has dup fanin 10896.
ABC: Node 10908 has dup fanin 10897.
ABC: Node 10910 has dup fanin 10779.
ABC: Node 10910 has dup fanin 10780.
ABC: Node 10910 has dup fanin 10779.
ABC: Node 10910 has dup fanin 10780.
ABC: Node 10914 has dup fanin 10911.
ABC: Node 10914 has dup fanin 10912.
ABC: Node 10914 has dup fanin 10911.
ABC: Node 10914 has dup fanin 10912.
ABC: Node 10916 has dup fanin 10541.
ABC: Node 10916 has dup fanin 10808.
ABC: Node 10916 has dup fanin 10541.
ABC: Node 10916 has dup fanin 10808.
ABC: Node 10917 has dup fanin 10915.
ABC: Node 10917 has dup fanin 10916.
ABC: Node 10917 has dup fanin 10915.
ABC: Node 10917 has dup fanin 10916.
ABC: Node 10919 has dup fanin 10556.
ABC: Node 10919 has dup fanin 10814.
ABC: Node 10919 has dup fanin 10556.
ABC: Node 10919 has dup fanin 10814.
ABC: Node 10921 has dup fanin 10919.
ABC: Node 10921 has dup fanin 10920.
ABC: Node 10921 has dup fanin 10919.
ABC: Node 10921 has dup fanin 10920.
ABC: Node 10924 has dup fanin 10909.
ABC: Node 10924 has dup fanin 10910.
ABC: Node 10924 has dup fanin 10909.
ABC: Node 10924 has dup fanin 10910.
ABC: Node 10926 has dup fanin 10824.
ABC: Node 10926 has dup fanin 10825.
ABC: Node 10926 has dup fanin 10824.
ABC: Node 10926 has dup fanin 10825.
ABC: Node 10927 has dup fanin 10925.
ABC: Node 10927 has dup fanin 10926.
ABC: Node 10927 has dup fanin 10925.
ABC: Node 10927 has dup fanin 10926.
ABC: Node 10932 has dup fanin 10845.
ABC: Node 10932 has dup fanin 10848.
ABC: Node 10932 has dup fanin 10845.
ABC: Node 10932 has dup fanin 10848.
ABC: Node 10933 has dup fanin 10931.
ABC: Node 10933 has dup fanin 10932.
ABC: Node 10933 has dup fanin 10931.
ABC: Node 10933 has dup fanin 10932.
ABC: Node 10935 has dup fanin 10847.
ABC: Node 10935 has dup fanin 10864.
ABC: Node 10935 has dup fanin 10847.
ABC: Node 10935 has dup fanin 10864.
ABC: Node 10956 has dup fanin 10947.
ABC: Node 10956 has dup fanin 10955.
ABC: Node 10956 has dup fanin 10947.
ABC: Node 10956 has dup fanin 10955.
ABC: Node 10971 has dup fanin 10966.
ABC: Node 10971 has dup fanin 10970.
ABC: Node 10971 has dup fanin 10966.
ABC: Node 10971 has dup fanin 10970.
ABC: Node 10986 has dup fanin 10983.
ABC: Node 10986 has dup fanin 10984.
ABC: Node 10986 has dup fanin 10983.
ABC: Node 10986 has dup fanin 10984.
ABC: Node 10993 has dup fanin 10988.
ABC: Node 10993 has dup fanin 10992.
ABC: Node 10993 has dup fanin 10988.
ABC: Node 10993 has dup fanin 10992.
ABC: Node 10999 has dup fanin 10994.
ABC: Node 10999 has dup fanin 10998.
ABC: Node 10999 has dup fanin 10994.
ABC: Node 10999 has dup fanin 10998.
ABC: Node 11000 has dup fanin 10987.
ABC: Node 11000 has dup fanin 10993.
ABC: Node 11000 has dup fanin 10987.
ABC: Node 11000 has dup fanin 10993.
ABC: Node 11007 has dup fanin 11002.
ABC: Node 11007 has dup fanin 11006.
ABC: Node 11007 has dup fanin 11002.
ABC: Node 11007 has dup fanin 11006.
ABC: Node 11014 has dup fanin 11009.
ABC: Node 11014 has dup fanin 11013.
ABC: Node 11014 has dup fanin 11009.
ABC: Node 11014 has dup fanin 11013.
ABC: Node 11015 has dup fanin 11008.
ABC: Node 11015 has dup fanin 11014.
ABC: Node 11015 has dup fanin 11008.
ABC: Node 11015 has dup fanin 11014.
ABC: Node 11016 has dup fanin 11007.
ABC: Node 11016 has dup fanin 11015.
ABC: Node 11016 has dup fanin 11007.
ABC: Node 11016 has dup fanin 11015.
ABC: Node 11017 has dup fanin 10960.
ABC: Node 11017 has dup fanin 11016.
ABC: Node 11017 has dup fanin 10960.
ABC: Node 11017 has dup fanin 11016.
ABC: Node 11020 has dup fanin 10962.
ABC: Node 11020 has dup fanin 10982.
ABC: Node 11020 has dup fanin 10962.
ABC: Node 11020 has dup fanin 10982.
ABC: Node 11028 has dup fanin 11023.
ABC: Node 11028 has dup fanin 11027.
ABC: Node 11028 has dup fanin 11023.
ABC: Node 11028 has dup fanin 11027.
ABC: Node 11035 has dup fanin 11030.
ABC: Node 11035 has dup fanin 11034.
ABC: Node 11035 has dup fanin 11030.
ABC: Node 11035 has dup fanin 11034.
ABC: Node 11036 has dup fanin 11029.
ABC: Node 11036 has dup fanin 11035.
ABC: Node 11036 has dup fanin 11029.
ABC: Node 11036 has dup fanin 11035.
ABC: Node 11037 has dup fanin 11028.
ABC: Node 11037 has dup fanin 11036.
ABC: Node 11037 has dup fanin 11028.
ABC: Node 11037 has dup fanin 11036.
ABC: Node 11038 has dup fanin 10972.
ABC: Node 11038 has dup fanin 11037.
ABC: Node 11038 has dup fanin 10972.
ABC: Node 11038 has dup fanin 11037.
ABC: Node 11047 has dup fanin 11042.
ABC: Node 11047 has dup fanin 11046.
ABC: Node 11047 has dup fanin 11042.
ABC: Node 11047 has dup fanin 11046.
ABC: Node 11060 has dup fanin 10979.
ABC: Node 11060 has dup fanin 11059.
ABC: Node 11060 has dup fanin 10979.
ABC: Node 11060 has dup fanin 11059.
ABC: Node 11061 has dup fanin 11049.
ABC: Node 11061 has dup fanin 11060.
ABC: Node 11061 has dup fanin 11049.
ABC: Node 11061 has dup fanin 11060.
ABC: Node 11062 has dup fanin 10981.
ABC: Node 11062 has dup fanin 11061.
ABC: Node 11062 has dup fanin 10981.
ABC: Node 11062 has dup fanin 11061.
ABC: Node 11063 has dup fanin 11040.
ABC: Node 11063 has dup fanin 11062.
ABC: Node 11063 has dup fanin 11040.
ABC: Node 11063 has dup fanin 11062.
ABC: Node 11067 has dup fanin 11064.
ABC: Node 11067 has dup fanin 11065.
ABC: Node 11067 has dup fanin 11064.
ABC: Node 11067 has dup fanin 11065.
ABC: Node 11074 has dup fanin 11069.
ABC: Node 11074 has dup fanin 11073.
ABC: Node 11074 has dup fanin 11069.
ABC: Node 11074 has dup fanin 11073.
ABC: Node 11076 has dup fanin 11074.
ABC: Node 11076 has dup fanin 11075.
ABC: Node 11076 has dup fanin 11074.
ABC: Node 11076 has dup fanin 11075.
ABC: Node 11077 has dup fanin 11068.
ABC: Node 11077 has dup fanin 11076.
ABC: Node 11077 has dup fanin 11068.
ABC: Node 11077 has dup fanin 11076.
ABC: Node 11078 has dup fanin 11066.
ABC: Node 11078 has dup fanin 11067.
ABC: Node 11078 has dup fanin 11066.
ABC: Node 11078 has dup fanin 11067.
ABC: Node 11082 has dup fanin 11079.
ABC: Node 11082 has dup fanin 11080.
ABC: Node 11082 has dup fanin 11079.
ABC: Node 11082 has dup fanin 11080.
ABC: Node 11087 has dup fanin 11084.
ABC: Node 11087 has dup fanin 11085.
ABC: Node 11087 has dup fanin 11084.
ABC: Node 11087 has dup fanin 11085.
ABC: Node 11089 has dup fanin 11078.
ABC: Node 11089 has dup fanin 11083.
ABC: Node 11089 has dup fanin 11078.
ABC: Node 11089 has dup fanin 11083.
ABC: Node 11099 has dup fanin 11094.
ABC: Node 11099 has dup fanin 11098.
ABC: Node 11099 has dup fanin 11094.
ABC: Node 11099 has dup fanin 11098.
ABC: Node 11101 has dup fanin 11099.
ABC: Node 11101 has dup fanin 11100.
ABC: Node 11101 has dup fanin 11099.
ABC: Node 11101 has dup fanin 11100.
ABC: Node 11102 has dup fanin 11093.
ABC: Node 11102 has dup fanin 11101.
ABC: Node 11102 has dup fanin 11093.
ABC: Node 11102 has dup fanin 11101.
ABC: Node 11108 has dup fanin 11091.
ABC: Node 11108 has dup fanin 11107.
ABC: Node 11108 has dup fanin 11091.
ABC: Node 11108 has dup fanin 11107.
ABC: Node 11109 has dup fanin 11021.
ABC: Node 11109 has dup fanin 11063.
ABC: Node 11109 has dup fanin 11021.
ABC: Node 11109 has dup fanin 11063.
ABC: Node 11118 has dup fanin 11113.
ABC: Node 11118 has dup fanin 11117.
ABC: Node 11118 has dup fanin 11113.
ABC: Node 11118 has dup fanin 11117.
ABC: Node 11120 has dup fanin 11118.
ABC: Node 11120 has dup fanin 11119.
ABC: Node 11120 has dup fanin 11118.
ABC: Node 11120 has dup fanin 11119.
ABC: Node 11121 has dup fanin 11112.
ABC: Node 11121 has dup fanin 11120.
ABC: Node 11121 has dup fanin 11112.
ABC: Node 11121 has dup fanin 11120.
ABC: Node 11127 has dup fanin 11103.
ABC: Node 11127 has dup fanin 11126.
ABC: Node 11127 has dup fanin 11103.
ABC: Node 11127 has dup fanin 11126.
ABC: Node 11135 has dup fanin 11130.
ABC: Node 11135 has dup fanin 11134.
ABC: Node 11135 has dup fanin 11130.
ABC: Node 11135 has dup fanin 11134.
ABC: Node 11142 has dup fanin 11137.
ABC: Node 11142 has dup fanin 11141.
ABC: Node 11142 has dup fanin 11137.
ABC: Node 11142 has dup fanin 11141.
ABC: Node 11143 has dup fanin 11136.
ABC: Node 11143 has dup fanin 11142.
ABC: Node 11143 has dup fanin 11136.
ABC: Node 11143 has dup fanin 11142.
ABC: Node 11144 has dup fanin 11135.
ABC: Node 11144 has dup fanin 11143.
ABC: Node 11144 has dup fanin 11135.
ABC: Node 11144 has dup fanin 11143.
ABC: Node 11145 has dup fanin 11048.
ABC: Node 11145 has dup fanin 11144.
ABC: Node 11145 has dup fanin 11048.
ABC: Node 11145 has dup fanin 11144.
ABC: Node 11155 has dup fanin 11150.
ABC: Node 11155 has dup fanin 11154.
ABC: Node 11155 has dup fanin 11150.
ABC: Node 11155 has dup fanin 11154.
ABC: Node 11156 has dup fanin 11052.
ABC: Node 11156 has dup fanin 11155.
ABC: Node 11156 has dup fanin 11052.
ABC: Node 11156 has dup fanin 11155.
ABC: Node 11164 has dup fanin 11159.
ABC: Node 11164 has dup fanin 11163.
ABC: Node 11164 has dup fanin 11159.
ABC: Node 11164 has dup fanin 11163.
ABC: Node 11171 has dup fanin 11058.
ABC: Node 11171 has dup fanin 11170.
ABC: Node 11171 has dup fanin 11058.
ABC: Node 11171 has dup fanin 11170.
ABC: Node 11172 has dup fanin 11158.
ABC: Node 11172 has dup fanin 11171.
ABC: Node 11172 has dup fanin 11158.
ABC: Node 11172 has dup fanin 11171.
ABC: Node 11173 has dup fanin 11148.
ABC: Node 11173 has dup fanin 11172.
ABC: Node 11173 has dup fanin 11148.
ABC: Node 11173 has dup fanin 11172.
ABC: Node 11174 has dup fanin 11147.
ABC: Node 11174 has dup fanin 11173.
ABC: Node 11174 has dup fanin 11147.
ABC: Node 11174 has dup fanin 11173.
ABC: Node 11175 has dup fanin 11128.
ABC: Node 11175 has dup fanin 11174.
ABC: Node 11175 has dup fanin 11128.
ABC: Node 11175 has dup fanin 11174.
ABC: Node 11176 has dup fanin 11127.
ABC: Node 11176 has dup fanin 11175.
ABC: Node 11176 has dup fanin 11127.
ABC: Node 11176 has dup fanin 11175.
ABC: Node 11178 has dup fanin 11110.
ABC: Node 11178 has dup fanin 11176.
ABC: Node 11178 has dup fanin 11110.
ABC: Node 11178 has dup fanin 11176.
ABC: Node 11189 has dup fanin 11184.
ABC: Node 11189 has dup fanin 11188.
ABC: Node 11189 has dup fanin 11184.
ABC: Node 11189 has dup fanin 11188.
ABC: Node 11191 has dup fanin 11189.
ABC: Node 11191 has dup fanin 11190.
ABC: Node 11191 has dup fanin 11189.
ABC: Node 11191 has dup fanin 11190.
ABC: Node 11192 has dup fanin 11183.
ABC: Node 11192 has dup fanin 11191.
ABC: Node 11192 has dup fanin 11183.
ABC: Node 11192 has dup fanin 11191.
ABC: Node 11198 has dup fanin 11122.
ABC: Node 11198 has dup fanin 11197.
ABC: Node 11198 has dup fanin 11122.
ABC: Node 11198 has dup fanin 11197.
ABC: Node 11206 has dup fanin 11201.
ABC: Node 11206 has dup fanin 11205.
ABC: Node 11206 has dup fanin 11201.
ABC: Node 11206 has dup fanin 11205.
ABC: Node 11213 has dup fanin 11208.
ABC: Node 11213 has dup fanin 11212.
ABC: Node 11213 has dup fanin 11208.
ABC: Node 11213 has dup fanin 11212.
ABC: Node 11214 has dup fanin 11207.
ABC: Node 11214 has dup fanin 11213.
ABC: Node 11214 has dup fanin 11207.
ABC: Node 11214 has dup fanin 11213.
ABC: Node 11215 has dup fanin 11206.
ABC: Node 11215 has dup fanin 11214.
ABC: Node 11215 has dup fanin 11206.
ABC: Node 11215 has dup fanin 11214.
ABC: Node 11217 has dup fanin 11215.
ABC: Node 11217 has dup fanin 11216.
ABC: Node 11217 has dup fanin 11215.
ABC: Node 11217 has dup fanin 11216.
ABC: Node 11227 has dup fanin 11222.
ABC: Node 11227 has dup fanin 11226.
ABC: Node 11227 has dup fanin 11222.
ABC: Node 11227 has dup fanin 11226.
ABC: Node 11229 has dup fanin 11227.
ABC: Node 11229 has dup fanin 11228.
ABC: Node 11229 has dup fanin 11227.
ABC: Node 11229 has dup fanin 11228.
ABC: Node 11237 has dup fanin 11232.
ABC: Node 11237 has dup fanin 11236.
ABC: Node 11237 has dup fanin 11232.
ABC: Node 11237 has dup fanin 11236.
ABC: Node 11247 has dup fanin 11169.
ABC: Node 11247 has dup fanin 11246.
ABC: Node 11247 has dup fanin 11169.
ABC: Node 11247 has dup fanin 11246.
ABC: Node 11248 has dup fanin 11231.
ABC: Node 11248 has dup fanin 11247.
ABC: Node 11248 has dup fanin 11231.
ABC: Node 11248 has dup fanin 11247.
ABC: Node 11249 has dup fanin 11220.
ABC: Node 11249 has dup fanin 11248.
ABC: Node 11249 has dup fanin 11220.
ABC: Node 11249 has dup fanin 11248.
ABC: Node 11250 has dup fanin 11219.
ABC: Node 11250 has dup fanin 11249.
ABC: Node 11250 has dup fanin 11219.
ABC: Node 11250 has dup fanin 11249.
ABC: Node 11251 has dup fanin 11199.
ABC: Node 11251 has dup fanin 11250.
ABC: Node 11251 has dup fanin 11199.
ABC: Node 11251 has dup fanin 11250.
ABC: Node 11252 has dup fanin 11198.
ABC: Node 11252 has dup fanin 11251.
ABC: Node 11252 has dup fanin 11198.
ABC: Node 11252 has dup fanin 11251.
ABC: Node 11253 has dup fanin 11181.
ABC: Node 11253 has dup fanin 11252.
ABC: Node 11253 has dup fanin 11181.
ABC: Node 11253 has dup fanin 11252.
ABC: Node 11254 has dup fanin 11180.
ABC: Node 11254 has dup fanin 11253.
ABC: Node 11254 has dup fanin 11180.
ABC: Node 11254 has dup fanin 11253.
ABC: Node 11255 has dup fanin 11179.
ABC: Node 11255 has dup fanin 11254.
ABC: Node 11255 has dup fanin 11179.
ABC: Node 11255 has dup fanin 11254.
ABC: Node 11266 has dup fanin 11263.
ABC: Node 11266 has dup fanin 11264.
ABC: Node 11266 has dup fanin 11263.
ABC: Node 11266 has dup fanin 11264.
ABC: Node 11268 has dup fanin 10985.
ABC: Node 11268 has dup fanin 10986.
ABC: Node 11268 has dup fanin 10985.
ABC: Node 11268 has dup fanin 10986.
ABC: Node 11269 has dup fanin 11081.
ABC: Node 11269 has dup fanin 11082.
ABC: Node 11269 has dup fanin 11081.
ABC: Node 11269 has dup fanin 11082.
ABC: Node 11270 has dup fanin 11267.
ABC: Node 11270 has dup fanin 11268.
ABC: Node 11270 has dup fanin 11267.
ABC: Node 11270 has dup fanin 11268.
ABC: Node 11272 has dup fanin 10999.
ABC: Node 11272 has dup fanin 11000.
ABC: Node 11272 has dup fanin 10999.
ABC: Node 11272 has dup fanin 11000.
ABC: Node 11275 has dup fanin 11256.
ABC: Node 11275 has dup fanin 11262.
ABC: Node 11275 has dup fanin 11256.
ABC: Node 11275 has dup fanin 11262.
ABC: Node 11277 has dup fanin 11019.
ABC: Node 11277 has dup fanin 11020.
ABC: Node 11277 has dup fanin 11019.
ABC: Node 11277 has dup fanin 11020.
ABC: Node 11278 has dup fanin 11088.
ABC: Node 11278 has dup fanin 11089.
ABC: Node 11278 has dup fanin 11088.
ABC: Node 11278 has dup fanin 11089.
ABC: Node 11279 has dup fanin 11086.
ABC: Node 11279 has dup fanin 11087.
ABC: Node 11279 has dup fanin 11086.
ABC: Node 11279 has dup fanin 11087.
ABC: Node 11283 has dup fanin 11280.
ABC: Node 11283 has dup fanin 11281.
ABC: Node 11283 has dup fanin 11280.
ABC: Node 11283 has dup fanin 11281.
ABC: Node 11288 has dup fanin 11285.
ABC: Node 11288 has dup fanin 11286.
ABC: Node 11288 has dup fanin 11285.
ABC: Node 11288 has dup fanin 11286.
ABC: Node 11290 has dup fanin 11279.
ABC: Node 11290 has dup fanin 11284.
ABC: Node 11290 has dup fanin 11279.
ABC: Node 11290 has dup fanin 11284.
ABC: Node 11296 has dup fanin 11292.
ABC: Node 11296 has dup fanin 11295.
ABC: Node 11296 has dup fanin 11292.
ABC: Node 11296 has dup fanin 11295.
ABC: Node 11297 has dup fanin 11276.
ABC: Node 11297 has dup fanin 11277.
ABC: Node 11297 has dup fanin 11276.
ABC: Node 11297 has dup fanin 11277.
ABC: Node 11299 has dup fanin 11108.
ABC: Node 11299 has dup fanin 11109.
ABC: Node 11299 has dup fanin 11108.
ABC: Node 11299 has dup fanin 11109.
ABC: Node 11301 has dup fanin 11298.
ABC: Node 11301 has dup fanin 11299.
ABC: Node 11301 has dup fanin 11298.
ABC: Node 11301 has dup fanin 11299.
ABC: Node 11303 has dup fanin 11177.
ABC: Node 11303 has dup fanin 11178.
ABC: Node 11303 has dup fanin 11177.
ABC: Node 11303 has dup fanin 11178.
ABC: Node 11304 has dup fanin 11302.
ABC: Node 11304 has dup fanin 11303.
ABC: Node 11304 has dup fanin 11302.
ABC: Node 11304 has dup fanin 11303.
ABC: Node 11315 has dup fanin 11312.
ABC: Node 11315 has dup fanin 11313.
ABC: Node 11315 has dup fanin 11312.
ABC: Node 11315 has dup fanin 11313.
ABC: Node 11317 has dup fanin 11265.
ABC: Node 11317 has dup fanin 11266.
ABC: Node 11317 has dup fanin 11265.
ABC: Node 11317 has dup fanin 11266.
ABC: Node 11318 has dup fanin 11282.
ABC: Node 11318 has dup fanin 11283.
ABC: Node 11318 has dup fanin 11282.
ABC: Node 11318 has dup fanin 11283.
ABC: Node 11319 has dup fanin 11316.
ABC: Node 11319 has dup fanin 11317.
ABC: Node 11319 has dup fanin 11316.
ABC: Node 11319 has dup fanin 11317.
ABC: Node 11321 has dup fanin 11269.
ABC: Node 11321 has dup fanin 11270.
ABC: Node 11321 has dup fanin 11269.
ABC: Node 11321 has dup fanin 11270.
ABC: Node 11324 has dup fanin 11305.
ABC: Node 11324 has dup fanin 11311.
ABC: Node 11324 has dup fanin 11305.
ABC: Node 11324 has dup fanin 11311.
ABC: Node 11326 has dup fanin 11274.
ABC: Node 11326 has dup fanin 11275.
ABC: Node 11326 has dup fanin 11274.
ABC: Node 11326 has dup fanin 11275.
ABC: Node 11327 has dup fanin 11289.
ABC: Node 11327 has dup fanin 11290.
ABC: Node 11327 has dup fanin 11289.
ABC: Node 11327 has dup fanin 11290.
ABC: Node 11328 has dup fanin 11287.
ABC: Node 11328 has dup fanin 11288.
ABC: Node 11328 has dup fanin 11287.
ABC: Node 11328 has dup fanin 11288.
ABC: Node 11332 has dup fanin 11329.
ABC: Node 11332 has dup fanin 11330.
ABC: Node 11332 has dup fanin 11329.
ABC: Node 11332 has dup fanin 11330.
ABC: Node 11337 has dup fanin 11334.
ABC: Node 11337 has dup fanin 11335.
ABC: Node 11337 has dup fanin 11334.
ABC: Node 11337 has dup fanin 11335.
ABC: Node 11339 has dup fanin 11328.
ABC: Node 11339 has dup fanin 11333.
ABC: Node 11339 has dup fanin 11328.
ABC: Node 11339 has dup fanin 11333.
ABC: Node 11345 has dup fanin 11341.
ABC: Node 11345 has dup fanin 11344.
ABC: Node 11345 has dup fanin 11341.
ABC: Node 11345 has dup fanin 11344.
ABC: Node 11346 has dup fanin 11325.
ABC: Node 11346 has dup fanin 11326.
ABC: Node 11346 has dup fanin 11325.
ABC: Node 11346 has dup fanin 11326.
ABC: Node 11348 has dup fanin 11296.
ABC: Node 11348 has dup fanin 11297.
ABC: Node 11348 has dup fanin 11296.
ABC: Node 11348 has dup fanin 11297.
ABC: Node 11350 has dup fanin 11347.
ABC: Node 11350 has dup fanin 11348.
ABC: Node 11350 has dup fanin 11347.
ABC: Node 11350 has dup fanin 11348.
ABC: Node 11352 has dup fanin 11300.
ABC: Node 11352 has dup fanin 11301.
ABC: Node 11352 has dup fanin 11300.
ABC: Node 11352 has dup fanin 11301.
ABC: Node 11353 has dup fanin 11351.
ABC: Node 11353 has dup fanin 11352.
ABC: Node 11353 has dup fanin 11351.
ABC: Node 11353 has dup fanin 11352.
ABC: Node 11354 has dup fanin 11323.
ABC: Node 11354 has dup fanin 11324.
ABC: Node 11354 has dup fanin 11323.
ABC: Node 11354 has dup fanin 11324.
ABC: Node 11355 has dup fanin 11314.
ABC: Node 11355 has dup fanin 11315.
ABC: Node 11355 has dup fanin 11314.
ABC: Node 11355 has dup fanin 11315.
ABC: Node 11359 has dup fanin 11331.
ABC: Node 11359 has dup fanin 11332.
ABC: Node 11359 has dup fanin 11331.
ABC: Node 11359 has dup fanin 11332.
ABC: Node 11360 has dup fanin 11355.
ABC: Node 11360 has dup fanin 11358.
ABC: Node 11360 has dup fanin 11355.
ABC: Node 11360 has dup fanin 11358.
ABC: Node 11362 has dup fanin 11318.
ABC: Node 11362 has dup fanin 11319.
ABC: Node 11362 has dup fanin 11318.
ABC: Node 11362 has dup fanin 11319.
ABC: Node 11367 has dup fanin 11338.
ABC: Node 11367 has dup fanin 11339.
ABC: Node 11367 has dup fanin 11338.
ABC: Node 11367 has dup fanin 11339.
ABC: Node 11368 has dup fanin 11336.
ABC: Node 11368 has dup fanin 11337.
ABC: Node 11368 has dup fanin 11336.
ABC: Node 11368 has dup fanin 11337.
ABC: Node 11372 has dup fanin 11369.
ABC: Node 11372 has dup fanin 11370.
ABC: Node 11372 has dup fanin 11369.
ABC: Node 11372 has dup fanin 11370.
ABC: Node 11377 has dup fanin 11374.
ABC: Node 11377 has dup fanin 11375.
ABC: Node 11377 has dup fanin 11374.
ABC: Node 11377 has dup fanin 11375.
ABC: Node 11379 has dup fanin 11368.
ABC: Node 11379 has dup fanin 11373.
ABC: Node 11379 has dup fanin 11368.
ABC: Node 11379 has dup fanin 11373.
ABC: Node 11385 has dup fanin 11381.
ABC: Node 11385 has dup fanin 11384.
ABC: Node 11385 has dup fanin 11381.
ABC: Node 11385 has dup fanin 11384.
ABC: Node 11386 has dup fanin 11354.
ABC: Node 11386 has dup fanin 11366.
ABC: Node 11386 has dup fanin 11354.
ABC: Node 11386 has dup fanin 11366.
ABC: Node 11388 has dup fanin 11345.
ABC: Node 11388 has dup fanin 11346.
ABC: Node 11388 has dup fanin 11345.
ABC: Node 11388 has dup fanin 11346.
ABC: Node 11390 has dup fanin 11387.
ABC: Node 11390 has dup fanin 11388.
ABC: Node 11390 has dup fanin 11387.
ABC: Node 11390 has dup fanin 11388.
ABC: Node 11392 has dup fanin 11349.
ABC: Node 11392 has dup fanin 11350.
ABC: Node 11392 has dup fanin 11349.
ABC: Node 11392 has dup fanin 11350.
ABC: Node 11393 has dup fanin 11391.
ABC: Node 11393 has dup fanin 11392.
ABC: Node 11393 has dup fanin 11391.
ABC: Node 11393 has dup fanin 11392.
ABC: Node 11402 has dup fanin 11400.
ABC: Node 11402 has dup fanin 11401.
ABC: Node 11402 has dup fanin 11400.
ABC: Node 11402 has dup fanin 11401.
ABC: Node 11403 has dup fanin 11399.
ABC: Node 11403 has dup fanin 11402.
ABC: Node 11403 has dup fanin 11399.
ABC: Node 11403 has dup fanin 11402.
ABC: Node 11406 has dup fanin 11371.
ABC: Node 11406 has dup fanin 11372.
ABC: Node 11406 has dup fanin 11371.
ABC: Node 11406 has dup fanin 11372.
ABC: Node 11422 has dup fanin 11420.
ABC: Node 11422 has dup fanin 11421.
ABC: Node 11422 has dup fanin 11420.
ABC: Node 11422 has dup fanin 11421.
ABC: Node 11423 has dup fanin 11419.
ABC: Node 11423 has dup fanin 11422.
ABC: Node 11423 has dup fanin 11419.
ABC: Node 11423 has dup fanin 11422.
ABC: Node 11430 has dup fanin 11427.
ABC: Node 11430 has dup fanin 11428.
ABC: Node 11430 has dup fanin 11427.
ABC: Node 11430 has dup fanin 11428.
ABC: Node 11432 has dup fanin 11423.
ABC: Node 11432 has dup fanin 11426.
ABC: Node 11432 has dup fanin 11423.
ABC: Node 11432 has dup fanin 11426.
ABC: Node 11438 has dup fanin 11436.
ABC: Node 11438 has dup fanin 11437.
ABC: Node 11438 has dup fanin 11436.
ABC: Node 11438 has dup fanin 11437.
ABC: Node 11439 has dup fanin 11435.
ABC: Node 11439 has dup fanin 11438.
ABC: Node 11439 has dup fanin 11435.
ABC: Node 11439 has dup fanin 11438.
ABC: Node 11443 has dup fanin 11440.
ABC: Node 11443 has dup fanin 11441.
ABC: Node 11443 has dup fanin 11440.
ABC: Node 11443 has dup fanin 11441.
ABC: Node 11445 has dup fanin 11439.
ABC: Node 11445 has dup fanin 11444.
ABC: Node 11445 has dup fanin 11439.
ABC: Node 11445 has dup fanin 11444.
ABC: Node 11446 has dup fanin 11434.
ABC: Node 11446 has dup fanin 11445.
ABC: Node 11446 has dup fanin 11434.
ABC: Node 11446 has dup fanin 11445.
ABC: Node 11449 has dup fanin 11376.
ABC: Node 11449 has dup fanin 11377.
ABC: Node 11449 has dup fanin 11376.
ABC: Node 11449 has dup fanin 11377.
ABC: Node 11451 has dup fanin 11449.
ABC: Node 11451 has dup fanin 11450.
ABC: Node 11451 has dup fanin 11449.
ABC: Node 11451 has dup fanin 11450.
ABC: Node 11452 has dup fanin 11448.
ABC: Node 11452 has dup fanin 11451.
ABC: Node 11452 has dup fanin 11448.
ABC: Node 11452 has dup fanin 11451.
ABC: Node 11458 has dup fanin 11412.
ABC: Node 11458 has dup fanin 11418.
ABC: Node 11458 has dup fanin 11412.
ABC: Node 11458 has dup fanin 11418.
ABC: Node 11460 has dup fanin 11378.
ABC: Node 11460 has dup fanin 11379.
ABC: Node 11460 has dup fanin 11378.
ABC: Node 11460 has dup fanin 11379.
ABC: Node 11466 has dup fanin 11454.
ABC: Node 11466 has dup fanin 11465.
ABC: Node 11466 has dup fanin 11454.
ABC: Node 11466 has dup fanin 11465.
ABC: Node 11471 has dup fanin 11359.
ABC: Node 11471 has dup fanin 11360.
ABC: Node 11471 has dup fanin 11359.
ABC: Node 11471 has dup fanin 11360.
ABC: Node 11476 has dup fanin 11411.
ABC: Node 11476 has dup fanin 11475.
ABC: Node 11476 has dup fanin 11411.
ABC: Node 11476 has dup fanin 11475.
ABC: Node 11477 has dup fanin 11466.
ABC: Node 11477 has dup fanin 11476.
ABC: Node 11477 has dup fanin 11466.
ABC: Node 11477 has dup fanin 11476.
ABC: Node 11478 has dup fanin 11459.
ABC: Node 11478 has dup fanin 11477.
ABC: Node 11478 has dup fanin 11459.
ABC: Node 11478 has dup fanin 11477.
ABC: Node 11485 has dup fanin 11462.
ABC: Node 11485 has dup fanin 11484.
ABC: Node 11485 has dup fanin 11462.
ABC: Node 11485 has dup fanin 11484.
ABC: Node 11487 has dup fanin 11474.
ABC: Node 11487 has dup fanin 11486.
ABC: Node 11487 has dup fanin 11474.
ABC: Node 11487 has dup fanin 11486.
ABC: Node 11488 has dup fanin 11485.
ABC: Node 11488 has dup fanin 11487.
ABC: Node 11488 has dup fanin 11485.
ABC: Node 11488 has dup fanin 11487.
ABC: Node 11489 has dup fanin 11481.
ABC: Node 11489 has dup fanin 11488.
ABC: Node 11489 has dup fanin 11481.
ABC: Node 11489 has dup fanin 11488.
ABC: Node 11490 has dup fanin 11480.
ABC: Node 11490 has dup fanin 11489.
ABC: Node 11490 has dup fanin 11480.
ABC: Node 11490 has dup fanin 11489.
ABC: Node 11497 has dup fanin 11442.
ABC: Node 11497 has dup fanin 11443.
ABC: Node 11497 has dup fanin 11442.
ABC: Node 11497 has dup fanin 11443.
ABC: Node 11499 has dup fanin 11429.
ABC: Node 11499 has dup fanin 11430.
ABC: Node 11499 has dup fanin 11429.
ABC: Node 11499 has dup fanin 11430.
ABC: Node 11503 has dup fanin 11500.
ABC: Node 11503 has dup fanin 11501.
ABC: Node 11503 has dup fanin 11500.
ABC: Node 11503 has dup fanin 11501.
ABC: Node 11506 has dup fanin 11431.
ABC: Node 11506 has dup fanin 11432.
ABC: Node 11506 has dup fanin 11431.
ABC: Node 11506 has dup fanin 11432.
ABC: Node 11511 has dup fanin 11492.
ABC: Node 11511 has dup fanin 11498.
ABC: Node 11511 has dup fanin 11492.
ABC: Node 11511 has dup fanin 11498.
ABC: Node 11513 has dup fanin 11457.
ABC: Node 11513 has dup fanin 11458.
ABC: Node 11513 has dup fanin 11457.
ABC: Node 11513 has dup fanin 11458.
ABC: Node 11514 has dup fanin 11512.
ABC: Node 11514 has dup fanin 11513.
ABC: Node 11514 has dup fanin 11512.
ABC: Node 11514 has dup fanin 11513.
ABC: Node 11516 has dup fanin 11456.
ABC: Node 11516 has dup fanin 11478.
ABC: Node 11516 has dup fanin 11456.
ABC: Node 11516 has dup fanin 11478.
ABC: Node 11517 has dup fanin 11515.
ABC: Node 11517 has dup fanin 11516.
ABC: Node 11517 has dup fanin 11515.
ABC: Node 11517 has dup fanin 11516.
ABC: Node 11525 has dup fanin 11523.
ABC: Node 11525 has dup fanin 11524.
ABC: Node 11525 has dup fanin 11523.
ABC: Node 11525 has dup fanin 11524.
ABC: Node 11529 has dup fanin 11526.
ABC: Node 11529 has dup fanin 11527.
ABC: Node 11529 has dup fanin 11526.
ABC: Node 11529 has dup fanin 11527.
ABC: Node 11531 has dup fanin 11502.
ABC: Node 11531 has dup fanin 11503.
ABC: Node 11531 has dup fanin 11502.
ABC: Node 11531 has dup fanin 11503.
ABC: Node 11536 has dup fanin 11506.
ABC: Node 11536 has dup fanin 11535.
ABC: Node 11536 has dup fanin 11506.
ABC: Node 11536 has dup fanin 11535.
ABC: Node 11538 has dup fanin 11510.
ABC: Node 11538 has dup fanin 11511.
ABC: Node 11538 has dup fanin 11510.
ABC: Node 11538 has dup fanin 11511.
ABC: Node 11539 has dup fanin 11537.
ABC: Node 11539 has dup fanin 11538.
ABC: Node 11539 has dup fanin 11537.
ABC: Node 11539 has dup fanin 11538.
ABC: Node 11542 has dup fanin 11509.
ABC: Node 11542 has dup fanin 11514.
ABC: Node 11542 has dup fanin 11509.
ABC: Node 11542 has dup fanin 11514.
ABC: Node 11551 has dup fanin 11544.
ABC: Node 11551 has dup fanin 11550.
ABC: Node 11551 has dup fanin 11544.
ABC: Node 11551 has dup fanin 11550.
ABC: Node 11552 has dup fanin 11528.
ABC: Node 11552 has dup fanin 11529.
ABC: Node 11552 has dup fanin 11528.
ABC: Node 11552 has dup fanin 11529.
ABC: Node 11560 has dup fanin 11533.
ABC: Node 11560 has dup fanin 11559.
ABC: Node 11560 has dup fanin 11533.
ABC: Node 11560 has dup fanin 11559.
ABC: Node 11562 has dup fanin 11525.
ABC: Node 11562 has dup fanin 11536.
ABC: Node 11562 has dup fanin 11525.
ABC: Node 11562 has dup fanin 11536.
ABC: Node 11563 has dup fanin 11561.
ABC: Node 11563 has dup fanin 11562.
ABC: Node 11563 has dup fanin 11561.
ABC: Node 11563 has dup fanin 11562.
ABC: Node 11566 has dup fanin 11539.
ABC: Node 11566 has dup fanin 11540.
ABC: Node 11566 has dup fanin 11539.
ABC: Node 11566 has dup fanin 11540.
ABC: Node 11572 has dup fanin 11551.
ABC: Node 11572 has dup fanin 11560.
ABC: Node 11572 has dup fanin 11551.
ABC: Node 11572 has dup fanin 11560.
ABC: Node 11574 has dup fanin 11563.
ABC: Node 11574 has dup fanin 11564.
ABC: Node 11574 has dup fanin 11563.
ABC: Node 11574 has dup fanin 11564.
ABC: Node 11575 has dup fanin 11573.
ABC: Node 11575 has dup fanin 11574.
ABC: Node 11575 has dup fanin 11573.
ABC: Node 11575 has dup fanin 11574.
ABC: Node 11601 has dup fanin 11598.
ABC: Node 11601 has dup fanin 11600.
ABC: Node 11601 has dup fanin 11598.
ABC: Node 11601 has dup fanin 11600.
ABC: Node 11605 has dup fanin 11572.
ABC: Node 11605 has dup fanin 11604.
ABC: Node 11605 has dup fanin 11572.
ABC: Node 11605 has dup fanin 11604.
ABC: Node 11616 has dup fanin 11385.
ABC: Node 11616 has dup fanin 11386.
ABC: Node 11616 has dup fanin 11385.
ABC: Node 11616 has dup fanin 11386.
ABC: Node 11618 has dup fanin 11615.
ABC: Node 11618 has dup fanin 11616.
ABC: Node 11618 has dup fanin 11615.
ABC: Node 11618 has dup fanin 11616.
ABC: Node 11621 has dup fanin 11389.
ABC: Node 11621 has dup fanin 11390.
ABC: Node 11621 has dup fanin 11389.
ABC: Node 11621 has dup fanin 11390.
ABC: Node 11626 has dup fanin 11617.
ABC: Node 11626 has dup fanin 11618.
ABC: Node 11626 has dup fanin 11617.
ABC: Node 11626 has dup fanin 11618.
ABC: Node 11644 has dup fanin 11639.
ABC: Node 11644 has dup fanin 11643.
ABC: Node 11644 has dup fanin 11639.
ABC: Node 11644 has dup fanin 11643.
ABC: Node 11646 has dup fanin 11644.
ABC: Node 11646 has dup fanin 11645.
ABC: Node 11646 has dup fanin 11644.
ABC: Node 11646 has dup fanin 11645.
ABC: Node 11654 has dup fanin 11649.
ABC: Node 11654 has dup fanin 11653.
ABC: Node 11654 has dup fanin 11649.
ABC: Node 11654 has dup fanin 11653.
ABC: Node 11657 has dup fanin 11655.
ABC: Node 11657 has dup fanin 11656.
ABC: Node 11657 has dup fanin 11655.
ABC: Node 11657 has dup fanin 11656.
ABC: Node 11658 has dup fanin 11243.
ABC: Node 11658 has dup fanin 11657.
ABC: Node 11658 has dup fanin 11243.
ABC: Node 11658 has dup fanin 11657.
ABC: Node 11659 has dup fanin 11654.
ABC: Node 11659 has dup fanin 11658.
ABC: Node 11659 has dup fanin 11654.
ABC: Node 11659 has dup fanin 11658.
ABC: Node 11660 has dup fanin 11245.
ABC: Node 11660 has dup fanin 11659.
ABC: Node 11660 has dup fanin 11245.
ABC: Node 11660 has dup fanin 11659.
ABC: Node 11661 has dup fanin 11648.
ABC: Node 11661 has dup fanin 11660.
ABC: Node 11661 has dup fanin 11648.
ABC: Node 11661 has dup fanin 11660.
ABC: Node 11668 has dup fanin 11663.
ABC: Node 11668 has dup fanin 11667.
ABC: Node 11668 has dup fanin 11663.
ABC: Node 11668 has dup fanin 11667.
ABC: Node 11675 has dup fanin 11670.
ABC: Node 11675 has dup fanin 11674.
ABC: Node 11675 has dup fanin 11670.
ABC: Node 11675 has dup fanin 11674.
ABC: Node 11676 has dup fanin 11669.
ABC: Node 11676 has dup fanin 11675.
ABC: Node 11676 has dup fanin 11669.
ABC: Node 11676 has dup fanin 11675.
ABC: Node 11677 has dup fanin 11668.
ABC: Node 11677 has dup fanin 11676.
ABC: Node 11677 has dup fanin 11668.
ABC: Node 11677 has dup fanin 11676.
ABC: Node 11679 has dup fanin 11677.
ABC: Node 11679 has dup fanin 11678.
ABC: Node 11679 has dup fanin 11677.
ABC: Node 11679 has dup fanin 11678.
ABC: Node 11682 has dup fanin 11637.
ABC: Node 11682 has dup fanin 11661.
ABC: Node 11682 has dup fanin 11637.
ABC: Node 11682 has dup fanin 11661.
ABC: Node 11688 has dup fanin 11686.
ABC: Node 11688 has dup fanin 11687.
ABC: Node 11688 has dup fanin 11686.
ABC: Node 11688 has dup fanin 11687.
ABC: Node 11689 has dup fanin 11685.
ABC: Node 11689 has dup fanin 11688.
ABC: Node 11689 has dup fanin 11685.
ABC: Node 11689 has dup fanin 11688.
ABC: Node 11694 has dup fanin 11692.
ABC: Node 11694 has dup fanin 11693.
ABC: Node 11694 has dup fanin 11692.
ABC: Node 11694 has dup fanin 11693.
ABC: Node 11695 has dup fanin 11691.
ABC: Node 11695 has dup fanin 11694.
ABC: Node 11695 has dup fanin 11691.
ABC: Node 11695 has dup fanin 11694.
ABC: Node 11696 has dup fanin 11690.
ABC: Node 11696 has dup fanin 11695.
ABC: Node 11696 has dup fanin 11690.
ABC: Node 11696 has dup fanin 11695.
ABC: Node 11697 has dup fanin 11689.
ABC: Node 11697 has dup fanin 11696.
ABC: Node 11697 has dup fanin 11689.
ABC: Node 11697 has dup fanin 11696.
ABC: Node 11699 has dup fanin 11697.
ABC: Node 11699 has dup fanin 11698.
ABC: Node 11699 has dup fanin 11697.
ABC: Node 11699 has dup fanin 11698.
ABC: Node 11707 has dup fanin 11705.
ABC: Node 11707 has dup fanin 11706.
ABC: Node 11707 has dup fanin 11705.
ABC: Node 11707 has dup fanin 11706.
ABC: Node 11708 has dup fanin 11704.
ABC: Node 11708 has dup fanin 11707.
ABC: Node 11708 has dup fanin 11704.
ABC: Node 11708 has dup fanin 11707.
ABC: Node 11710 has dup fanin 11708.
ABC: Node 11710 has dup fanin 11709.
ABC: Node 11710 has dup fanin 11708.
ABC: Node 11710 has dup fanin 11709.
ABC: Node 11719 has dup fanin 11714.
ABC: Node 11719 has dup fanin 11718.
ABC: Node 11719 has dup fanin 11714.
ABC: Node 11719 has dup fanin 11718.
ABC: Node 11724 has dup fanin 11722.
ABC: Node 11724 has dup fanin 11723.
ABC: Node 11724 has dup fanin 11722.
ABC: Node 11724 has dup fanin 11723.
ABC: Node 11725 has dup fanin 11720.
ABC: Node 11725 has dup fanin 11724.
ABC: Node 11725 has dup fanin 11720.
ABC: Node 11725 has dup fanin 11724.
ABC: Node 11728 has dup fanin 11725.
ABC: Node 11728 has dup fanin 11727.
ABC: Node 11728 has dup fanin 11725.
ABC: Node 11728 has dup fanin 11727.
ABC: Node 11729 has dup fanin 11719.
ABC: Node 11729 has dup fanin 11728.
ABC: Node 11729 has dup fanin 11719.
ABC: Node 11729 has dup fanin 11728.
ABC: Node 11730 has dup fanin 11713.
ABC: Node 11730 has dup fanin 11729.
ABC: Node 11730 has dup fanin 11713.
ABC: Node 11730 has dup fanin 11729.
ABC: Node 11731 has dup fanin 11712.
ABC: Node 11731 has dup fanin 11730.
ABC: Node 11731 has dup fanin 11712.
ABC: Node 11731 has dup fanin 11730.
ABC: Node 11732 has dup fanin 11702.
ABC: Node 11732 has dup fanin 11731.
ABC: Node 11732 has dup fanin 11702.
ABC: Node 11732 has dup fanin 11731.
ABC: Node 11733 has dup fanin 11701.
ABC: Node 11733 has dup fanin 11732.
ABC: Node 11733 has dup fanin 11701.
ABC: Node 11733 has dup fanin 11732.
ABC: Node 11741 has dup fanin 11736.
ABC: Node 11741 has dup fanin 11740.
ABC: Node 11741 has dup fanin 11736.
ABC: Node 11741 has dup fanin 11740.
ABC: Node 11743 has dup fanin 11741.
ABC: Node 11743 has dup fanin 11742.
ABC: Node 11743 has dup fanin 11741.
ABC: Node 11743 has dup fanin 11742.
ABC: Node 11744 has dup fanin 11735.
ABC: Node 11744 has dup fanin 11743.
ABC: Node 11744 has dup fanin 11735.
ABC: Node 11744 has dup fanin 11743.
ABC: Node 11745 has dup fanin 11734.
ABC: Node 11745 has dup fanin 11744.
ABC: Node 11745 has dup fanin 11734.
ABC: Node 11745 has dup fanin 11744.
ABC: Node 11750 has dup fanin 10612.
ABC: Node 11750 has dup fanin 11749.
ABC: Node 11750 has dup fanin 10612.
ABC: Node 11750 has dup fanin 11749.
ABC: Node 11751 has dup fanin 10618.
ABC: Node 11751 has dup fanin 11750.
ABC: Node 11751 has dup fanin 10618.
ABC: Node 11751 has dup fanin 11750.
ABC: Node 11753 has dup fanin 11751.
ABC: Node 11753 has dup fanin 11752.
ABC: Node 11753 has dup fanin 11751.
ABC: Node 11753 has dup fanin 11752.
ABC: Node 11754 has dup fanin 11748.
ABC: Node 11754 has dup fanin 11753.
ABC: Node 11754 has dup fanin 11748.
ABC: Node 11754 has dup fanin 11753.
ABC: Node 11758 has dup fanin 11756.
ABC: Node 11758 has dup fanin 11757.
ABC: Node 11758 has dup fanin 11756.
ABC: Node 11758 has dup fanin 11757.
ABC: Node 11761 has dup fanin 11683.
ABC: Node 11761 has dup fanin 11733.
ABC: Node 11761 has dup fanin 11683.
ABC: Node 11761 has dup fanin 11733.
ABC: Node 11765 has dup fanin 10621.
ABC: Node 11765 has dup fanin 11764.
ABC: Node 11765 has dup fanin 10621.
ABC: Node 11765 has dup fanin 11764.
ABC: Node 11766 has dup fanin 11763.
ABC: Node 11766 has dup fanin 11765.
ABC: Node 11766 has dup fanin 11763.
ABC: Node 11766 has dup fanin 11765.
ABC: Node 11773 has dup fanin 11755.
ABC: Node 11773 has dup fanin 11772.
ABC: Node 11773 has dup fanin 11755.
ABC: Node 11773 has dup fanin 11772.
ABC: Node 11779 has dup fanin 11777.
ABC: Node 11779 has dup fanin 11778.
ABC: Node 11779 has dup fanin 11777.
ABC: Node 11779 has dup fanin 11778.
ABC: Node 11780 has dup fanin 11776.
ABC: Node 11780 has dup fanin 11779.
ABC: Node 11780 has dup fanin 11776.
ABC: Node 11780 has dup fanin 11779.
ABC: Node 11785 has dup fanin 11783.
ABC: Node 11785 has dup fanin 11784.
ABC: Node 11785 has dup fanin 11783.
ABC: Node 11785 has dup fanin 11784.
ABC: Node 11786 has dup fanin 11782.
ABC: Node 11786 has dup fanin 11785.
ABC: Node 11786 has dup fanin 11782.
ABC: Node 11786 has dup fanin 11785.
ABC: Node 11787 has dup fanin 11781.
ABC: Node 11787 has dup fanin 11786.
ABC: Node 11787 has dup fanin 11781.
ABC: Node 11787 has dup fanin 11786.
ABC: Node 11788 has dup fanin 11780.
ABC: Node 11788 has dup fanin 11787.
ABC: Node 11788 has dup fanin 11780.
ABC: Node 11788 has dup fanin 11787.
ABC: Node 11790 has dup fanin 11788.
ABC: Node 11790 has dup fanin 11789.
ABC: Node 11790 has dup fanin 11788.
ABC: Node 11790 has dup fanin 11789.
ABC: Node 11798 has dup fanin 11796.
ABC: Node 11798 has dup fanin 11797.
ABC: Node 11798 has dup fanin 11796.
ABC: Node 11798 has dup fanin 11797.
ABC: Node 11799 has dup fanin 11795.
ABC: Node 11799 has dup fanin 11798.
ABC: Node 11799 has dup fanin 11795.
ABC: Node 11799 has dup fanin 11798.
ABC: Node 11801 has dup fanin 11799.
ABC: Node 11801 has dup fanin 11800.
ABC: Node 11801 has dup fanin 11799.
ABC: Node 11801 has dup fanin 11800.
ABC: Node 11810 has dup fanin 11805.
ABC: Node 11810 has dup fanin 11809.
ABC: Node 11810 has dup fanin 11805.
ABC: Node 11810 has dup fanin 11809.
ABC: Node 11816 has dup fanin 11814.
ABC: Node 11816 has dup fanin 11815.
ABC: Node 11816 has dup fanin 11814.
ABC: Node 11816 has dup fanin 11815.
ABC: Node 11817 has dup fanin 11812.
ABC: Node 11817 has dup fanin 11816.
ABC: Node 11817 has dup fanin 11812.
ABC: Node 11817 has dup fanin 11816.
ABC: Node 11818 has dup fanin 11811.
ABC: Node 11818 has dup fanin 11817.
ABC: Node 11818 has dup fanin 11811.
ABC: Node 11818 has dup fanin 11817.
ABC: Node 11819 has dup fanin 11810.
ABC: Node 11819 has dup fanin 11818.
ABC: Node 11819 has dup fanin 11810.
ABC: Node 11819 has dup fanin 11818.
ABC: Node 11820 has dup fanin 11804.
ABC: Node 11820 has dup fanin 11819.
ABC: Node 11820 has dup fanin 11804.
ABC: Node 11820 has dup fanin 11819.
ABC: Node 11821 has dup fanin 11803.
ABC: Node 11821 has dup fanin 11820.
ABC: Node 11821 has dup fanin 11803.
ABC: Node 11821 has dup fanin 11820.
ABC: Node 11822 has dup fanin 11793.
ABC: Node 11822 has dup fanin 11821.
ABC: Node 11822 has dup fanin 11793.
ABC: Node 11822 has dup fanin 11821.
ABC: Node 11823 has dup fanin 11792.
ABC: Node 11823 has dup fanin 11822.
ABC: Node 11823 has dup fanin 11792.
ABC: Node 11823 has dup fanin 11822.
ABC: Node 11824 has dup fanin 11774.
ABC: Node 11824 has dup fanin 11823.
ABC: Node 11824 has dup fanin 11774.
ABC: Node 11824 has dup fanin 11823.
ABC: Node 11825 has dup fanin 11773.
ABC: Node 11825 has dup fanin 11824.
ABC: Node 11825 has dup fanin 11773.
ABC: Node 11825 has dup fanin 11824.
ABC: Node 11827 has dup fanin 11762.
ABC: Node 11827 has dup fanin 11825.
ABC: Node 11827 has dup fanin 11762.
ABC: Node 11827 has dup fanin 11825.
ABC: Node 11832 has dup fanin 10621.
ABC: Node 11832 has dup fanin 11831.
ABC: Node 11832 has dup fanin 10621.
ABC: Node 11832 has dup fanin 11831.
ABC: Node 11833 has dup fanin 10619.
ABC: Node 11833 has dup fanin 11832.
ABC: Node 11833 has dup fanin 10619.
ABC: Node 11833 has dup fanin 11832.
ABC: Node 11840 has dup fanin 11768.
ABC: Node 11840 has dup fanin 11839.
ABC: Node 11840 has dup fanin 11768.
ABC: Node 11840 has dup fanin 11839.
ABC: Node 11845 has dup fanin 11843.
ABC: Node 11845 has dup fanin 11844.
ABC: Node 11845 has dup fanin 11843.
ABC: Node 11845 has dup fanin 11844.
ABC: Node 11846 has dup fanin 10554.
ABC: Node 11846 has dup fanin 11845.
ABC: Node 11846 has dup fanin 10554.
ABC: Node 11846 has dup fanin 11845.
ABC: Node 11851 has dup fanin 11849.
ABC: Node 11851 has dup fanin 11850.
ABC: Node 11851 has dup fanin 11849.
ABC: Node 11851 has dup fanin 11850.
ABC: Node 11852 has dup fanin 11848.
ABC: Node 11852 has dup fanin 11851.
ABC: Node 11852 has dup fanin 11848.
ABC: Node 11852 has dup fanin 11851.
ABC: Node 11853 has dup fanin 11847.
ABC: Node 11853 has dup fanin 11852.
ABC: Node 11853 has dup fanin 11847.
ABC: Node 11853 has dup fanin 11852.
ABC: Node 11854 has dup fanin 11846.
ABC: Node 11854 has dup fanin 11853.
ABC: Node 11854 has dup fanin 11846.
ABC: Node 11854 has dup fanin 11853.
ABC: Node 11856 has dup fanin 11854.
ABC: Node 11856 has dup fanin 11855.
ABC: Node 11856 has dup fanin 11854.
ABC: Node 11856 has dup fanin 11855.
ABC: Node 11864 has dup fanin 11862.
ABC: Node 11864 has dup fanin 11863.
ABC: Node 11864 has dup fanin 11862.
ABC: Node 11864 has dup fanin 11863.
ABC: Node 11865 has dup fanin 11861.
ABC: Node 11865 has dup fanin 11864.
ABC: Node 11865 has dup fanin 11861.
ABC: Node 11865 has dup fanin 11864.
ABC: Node 11867 has dup fanin 11865.
ABC: Node 11867 has dup fanin 11866.
ABC: Node 11867 has dup fanin 11865.
ABC: Node 11867 has dup fanin 11866.
ABC: Node 11876 has dup fanin 11871.
ABC: Node 11876 has dup fanin 11875.
ABC: Node 11876 has dup fanin 11871.
ABC: Node 11876 has dup fanin 11875.
ABC: Node 11882 has dup fanin 11880.
ABC: Node 11882 has dup fanin 11881.
ABC: Node 11882 has dup fanin 11880.
ABC: Node 11882 has dup fanin 11881.
ABC: Node 11883 has dup fanin 11878.
ABC: Node 11883 has dup fanin 11882.
ABC: Node 11883 has dup fanin 11878.
ABC: Node 11883 has dup fanin 11882.
ABC: Node 11884 has dup fanin 11877.
ABC: Node 11884 has dup fanin 11883.
ABC: Node 11884 has dup fanin 11877.
ABC: Node 11884 has dup fanin 11883.
ABC: Node 11885 has dup fanin 11876.
ABC: Node 11885 has dup fanin 11884.
ABC: Node 11885 has dup fanin 11876.
ABC: Node 11885 has dup fanin 11884.
ABC: Node 11886 has dup fanin 11870.
ABC: Node 11886 has dup fanin 11885.
ABC: Node 11886 has dup fanin 11870.
ABC: Node 11886 has dup fanin 11885.
ABC: Node 11887 has dup fanin 11869.
ABC: Node 11887 has dup fanin 11886.
ABC: Node 11887 has dup fanin 11869.
ABC: Node 11887 has dup fanin 11886.
ABC: Node 11888 has dup fanin 11859.
ABC: Node 11888 has dup fanin 11887.
ABC: Node 11888 has dup fanin 11859.
ABC: Node 11888 has dup fanin 11887.
ABC: Node 11889 has dup fanin 11858.
ABC: Node 11889 has dup fanin 11888.
ABC: Node 11889 has dup fanin 11858.
ABC: Node 11889 has dup fanin 11888.
ABC: Node 11890 has dup fanin 11841.
ABC: Node 11890 has dup fanin 11889.
ABC: Node 11890 has dup fanin 11841.
ABC: Node 11890 has dup fanin 11889.
ABC: Node 11891 has dup fanin 11840.
ABC: Node 11891 has dup fanin 11890.
ABC: Node 11891 has dup fanin 11840.
ABC: Node 11891 has dup fanin 11890.
ABC: Node 11892 has dup fanin 11830.
ABC: Node 11892 has dup fanin 11891.
ABC: Node 11892 has dup fanin 11830.
ABC: Node 11892 has dup fanin 11891.
ABC: Node 11893 has dup fanin 11829.
ABC: Node 11893 has dup fanin 11892.
ABC: Node 11893 has dup fanin 11829.
ABC: Node 11893 has dup fanin 11892.
ABC: Node 11898 has dup fanin 11681.
ABC: Node 11898 has dup fanin 11682.
ABC: Node 11898 has dup fanin 11681.
ABC: Node 11898 has dup fanin 11682.
ABC: Node 11899 has dup fanin 10618.
ABC: Node 11899 has dup fanin 11745.
ABC: Node 11899 has dup fanin 10618.
ABC: Node 11899 has dup fanin 11745.
ABC: Node 11903 has dup fanin 11193.
ABC: Node 11903 has dup fanin 11902.
ABC: Node 11903 has dup fanin 11193.
ABC: Node 11903 has dup fanin 11902.
ABC: Node 11904 has dup fanin 11897.
ABC: Node 11904 has dup fanin 11898.
ABC: Node 11904 has dup fanin 11897.
ABC: Node 11904 has dup fanin 11898.
ABC: Node 11906 has dup fanin 11760.
ABC: Node 11906 has dup fanin 11761.
ABC: Node 11906 has dup fanin 11760.
ABC: Node 11906 has dup fanin 11761.
ABC: Node 11908 has dup fanin 11905.
ABC: Node 11908 has dup fanin 11906.
ABC: Node 11908 has dup fanin 11905.
ABC: Node 11908 has dup fanin 11906.
ABC: Node 11910 has dup fanin 11826.
ABC: Node 11910 has dup fanin 11827.
ABC: Node 11910 has dup fanin 11826.
ABC: Node 11910 has dup fanin 11827.
ABC: Node 11916 has dup fanin 11903.
ABC: Node 11916 has dup fanin 11904.
ABC: Node 11916 has dup fanin 11903.
ABC: Node 11916 has dup fanin 11904.
ABC: Node 11918 has dup fanin 11915.
ABC: Node 11918 has dup fanin 11916.
ABC: Node 11918 has dup fanin 11915.
ABC: Node 11918 has dup fanin 11916.
ABC: Node 11921 has dup fanin 11907.
ABC: Node 11921 has dup fanin 11908.
ABC: Node 11921 has dup fanin 11907.
ABC: Node 11921 has dup fanin 11908.
ABC: Node 11927 has dup fanin 11917.
ABC: Node 11927 has dup fanin 11918.
ABC: Node 11927 has dup fanin 11917.
ABC: Node 11927 has dup fanin 11918.
ABC: Node 11939 has dup fanin 10621.
ABC: Node 11939 has dup fanin 11938.
ABC: Node 11939 has dup fanin 10621.
ABC: Node 11939 has dup fanin 11938.
ABC: Node 11940 has dup fanin 10619.
ABC: Node 11940 has dup fanin 11939.
ABC: Node 11940 has dup fanin 10619.
ABC: Node 11940 has dup fanin 11939.
ABC: Node 11947 has dup fanin 11835.
ABC: Node 11947 has dup fanin 11946.
ABC: Node 11947 has dup fanin 11835.
ABC: Node 11947 has dup fanin 11946.
ABC: Node 11951 has dup fanin 10549.
ABC: Node 11951 has dup fanin 11950.
ABC: Node 11951 has dup fanin 10549.
ABC: Node 11951 has dup fanin 11950.
ABC: Node 11952 has dup fanin 10554.
ABC: Node 11952 has dup fanin 11951.
ABC: Node 11952 has dup fanin 10554.
ABC: Node 11952 has dup fanin 11951.
ABC: Node 11957 has dup fanin 11955.
ABC: Node 11957 has dup fanin 11956.
ABC: Node 11957 has dup fanin 11955.
ABC: Node 11957 has dup fanin 11956.
ABC: Node 11958 has dup fanin 11954.
ABC: Node 11958 has dup fanin 11957.
ABC: Node 11958 has dup fanin 11954.
ABC: Node 11958 has dup fanin 11957.
ABC: Node 11959 has dup fanin 11953.
ABC: Node 11959 has dup fanin 11958.
ABC: Node 11959 has dup fanin 11953.
ABC: Node 11959 has dup fanin 11958.
ABC: Node 11960 has dup fanin 11952.
ABC: Node 11960 has dup fanin 11959.
ABC: Node 11960 has dup fanin 11952.
ABC: Node 11960 has dup fanin 11959.
ABC: Node 11962 has dup fanin 11960.
ABC: Node 11962 has dup fanin 11961.
ABC: Node 11962 has dup fanin 11960.
ABC: Node 11962 has dup fanin 11961.
ABC: Node 11970 has dup fanin 11968.
ABC: Node 11970 has dup fanin 11969.
ABC: Node 11970 has dup fanin 11968.
ABC: Node 11970 has dup fanin 11969.
ABC: Node 11971 has dup fanin 11967.
ABC: Node 11971 has dup fanin 11970.
ABC: Node 11971 has dup fanin 11967.
ABC: Node 11971 has dup fanin 11970.
ABC: Node 11973 has dup fanin 11971.
ABC: Node 11973 has dup fanin 11972.
ABC: Node 11973 has dup fanin 11971.
ABC: Node 11973 has dup fanin 11972.
ABC: Node 11982 has dup fanin 11977.
ABC: Node 11982 has dup fanin 11981.
ABC: Node 11982 has dup fanin 11977.
ABC: Node 11982 has dup fanin 11981.
ABC: Node 11984 has dup fanin 10885.
ABC: Node 11984 has dup fanin 10886.
ABC: Node 11984 has dup fanin 10885.
ABC: Node 11984 has dup fanin 10886.
ABC: Node 11985 has dup fanin 11983.
ABC: Node 11985 has dup fanin 11984.
ABC: Node 11985 has dup fanin 11983.
ABC: Node 11985 has dup fanin 11984.
ABC: Node 11986 has dup fanin 11982.
ABC: Node 11986 has dup fanin 11985.
ABC: Node 11986 has dup fanin 11982.
ABC: Node 11986 has dup fanin 11985.
ABC: Node 11987 has dup fanin 11976.
ABC: Node 11987 has dup fanin 11986.
ABC: Node 11987 has dup fanin 11976.
ABC: Node 11987 has dup fanin 11986.
ABC: Node 11988 has dup fanin 11975.
ABC: Node 11988 has dup fanin 11987.
ABC: Node 11988 has dup fanin 11975.
ABC: Node 11988 has dup fanin 11987.
ABC: Node 11989 has dup fanin 11965.
ABC: Node 11989 has dup fanin 11988.
ABC: Node 11989 has dup fanin 11965.
ABC: Node 11989 has dup fanin 11988.
ABC: Node 11990 has dup fanin 11964.
ABC: Node 11990 has dup fanin 11989.
ABC: Node 11990 has dup fanin 11964.
ABC: Node 11990 has dup fanin 11989.
ABC: Node 11991 has dup fanin 11948.
ABC: Node 11991 has dup fanin 11990.
ABC: Node 11991 has dup fanin 11948.
ABC: Node 11991 has dup fanin 11990.
ABC: Node 11992 has dup fanin 11947.
ABC: Node 11992 has dup fanin 11991.
ABC: Node 11992 has dup fanin 11947.
ABC: Node 11992 has dup fanin 11991.
ABC: Node 11994 has dup fanin 11937.
ABC: Node 11994 has dup fanin 11992.
ABC: Node 11994 has dup fanin 11937.
ABC: Node 11994 has dup fanin 11992.
ABC: Node 12000 has dup fanin 10621.
ABC: Node 12000 has dup fanin 11999.
ABC: Node 12000 has dup fanin 10621.
ABC: Node 12000 has dup fanin 11999.
ABC: Node 12001 has dup fanin 10619.
ABC: Node 12001 has dup fanin 12000.
ABC: Node 12001 has dup fanin 10619.
ABC: Node 12001 has dup fanin 12000.
ABC: Node 12007 has dup fanin 11942.
ABC: Node 12007 has dup fanin 12006.
ABC: Node 12007 has dup fanin 11942.
ABC: Node 12007 has dup fanin 12006.
ABC: Node 12011 has dup fanin 10913.
ABC: Node 12011 has dup fanin 10914.
ABC: Node 12011 has dup fanin 10913.
ABC: Node 12011 has dup fanin 10914.
ABC: Node 12012 has dup fanin 12010.
ABC: Node 12012 has dup fanin 12011.
ABC: Node 12012 has dup fanin 12010.
ABC: Node 12012 has dup fanin 12011.
ABC: Node 12013 has dup fanin 10556.
ABC: Node 12013 has dup fanin 12012.
ABC: Node 12013 has dup fanin 10556.
ABC: Node 12013 has dup fanin 12012.
ABC: Node 12015 has dup fanin 12013.
ABC: Node 12015 has dup fanin 12014.
ABC: Node 12015 has dup fanin 12013.
ABC: Node 12015 has dup fanin 12014.
ABC: Node 12020 has dup fanin 10900.
ABC: Node 12020 has dup fanin 10901.
ABC: Node 12020 has dup fanin 10900.
ABC: Node 12020 has dup fanin 10901.
ABC: Node 12022 has dup fanin 12020.
ABC: Node 12022 has dup fanin 12021.
ABC: Node 12022 has dup fanin 12020.
ABC: Node 12022 has dup fanin 12021.
ABC: Node 12026 has dup fanin 10894.
ABC: Node 12026 has dup fanin 10895.
ABC: Node 12026 has dup fanin 10894.
ABC: Node 12026 has dup fanin 10895.
ABC: Node 12027 has dup fanin 12025.
ABC: Node 12027 has dup fanin 12026.
ABC: Node 12027 has dup fanin 12025.
ABC: Node 12027 has dup fanin 12026.
ABC: Node 12028 has dup fanin 12024.
ABC: Node 12028 has dup fanin 12027.
ABC: Node 12028 has dup fanin 12024.
ABC: Node 12028 has dup fanin 12027.
ABC: Node 12029 has dup fanin 12018.
ABC: Node 12029 has dup fanin 12028.
ABC: Node 12029 has dup fanin 12018.
ABC: Node 12029 has dup fanin 12028.
ABC: Node 12030 has dup fanin 12017.
ABC: Node 12030 has dup fanin 12029.
ABC: Node 12030 has dup fanin 12017.
ABC: Node 12030 has dup fanin 12029.
ABC: Node 12031 has dup fanin 12008.
ABC: Node 12031 has dup fanin 12030.
ABC: Node 12031 has dup fanin 12008.
ABC: Node 12031 has dup fanin 12030.
ABC: Node 12032 has dup fanin 12007.
ABC: Node 12032 has dup fanin 12031.
ABC: Node 12032 has dup fanin 12007.
ABC: Node 12032 has dup fanin 12031.
ABC: Node 12033 has dup fanin 11997.
ABC: Node 12033 has dup fanin 12032.
ABC: Node 12033 has dup fanin 11997.
ABC: Node 12033 has dup fanin 12032.
ABC: Node 12034 has dup fanin 11996.
ABC: Node 12034 has dup fanin 12033.
ABC: Node 12034 has dup fanin 11996.
ABC: Node 12034 has dup fanin 12033.
ABC: Node 12040 has dup fanin 11993.
ABC: Node 12040 has dup fanin 11994.
ABC: Node 12040 has dup fanin 11993.
ABC: Node 12040 has dup fanin 11994.
ABC: Node 12058 has dup fanin 12002.
ABC: Node 12058 has dup fanin 12057.
ABC: Node 12058 has dup fanin 12002.
ABC: Node 12058 has dup fanin 12057.
ABC: Node 12061 has dup fanin 10556.
ABC: Node 12061 has dup fanin 10917.
ABC: Node 12061 has dup fanin 10556.
ABC: Node 12061 has dup fanin 10917.
ABC: Node 12063 has dup fanin 12061.
ABC: Node 12063 has dup fanin 12062.
ABC: Node 12063 has dup fanin 12061.
ABC: Node 12063 has dup fanin 12062.
ABC: Node 12067 has dup fanin 10907.
ABC: Node 12067 has dup fanin 10908.
ABC: Node 12067 has dup fanin 10907.
ABC: Node 12067 has dup fanin 10908.
ABC: Node 12068 has dup fanin 12066.
ABC: Node 12068 has dup fanin 12067.
ABC: Node 12068 has dup fanin 12066.
ABC: Node 12068 has dup fanin 12067.
ABC: Node 12069 has dup fanin 12065.
ABC: Node 12069 has dup fanin 12068.
ABC: Node 12069 has dup fanin 12065.
ABC: Node 12069 has dup fanin 12068.
ABC: Node 12070 has dup fanin 12059.
ABC: Node 12070 has dup fanin 12069.
ABC: Node 12070 has dup fanin 12059.
ABC: Node 12070 has dup fanin 12069.
ABC: Node 12071 has dup fanin 12058.
ABC: Node 12071 has dup fanin 12070.
ABC: Node 12071 has dup fanin 12058.
ABC: Node 12071 has dup fanin 12070.
ABC: Node 12073 has dup fanin 12048.
ABC: Node 12073 has dup fanin 12071.
ABC: Node 12073 has dup fanin 12048.
ABC: Node 12073 has dup fanin 12071.
ABC: Node 12082 has dup fanin 12053.
ABC: Node 12082 has dup fanin 12081.
ABC: Node 12082 has dup fanin 12053.
ABC: Node 12082 has dup fanin 12081.
ABC: Node 12084 has dup fanin 10923.
ABC: Node 12084 has dup fanin 10924.
ABC: Node 12084 has dup fanin 10923.
ABC: Node 12084 has dup fanin 10924.
ABC: Node 12085 has dup fanin 12083.
ABC: Node 12085 has dup fanin 12084.
ABC: Node 12085 has dup fanin 12083.
ABC: Node 12085 has dup fanin 12084.
ABC: Node 12086 has dup fanin 12082.
ABC: Node 12086 has dup fanin 12085.
ABC: Node 12086 has dup fanin 12082.
ABC: Node 12086 has dup fanin 12085.
ABC: Node 12087 has dup fanin 12076.
ABC: Node 12087 has dup fanin 12086.
ABC: Node 12087 has dup fanin 12076.
ABC: Node 12087 has dup fanin 12086.
ABC: Node 12088 has dup fanin 12075.
ABC: Node 12088 has dup fanin 12087.
ABC: Node 12088 has dup fanin 12075.
ABC: Node 12088 has dup fanin 12087.
ABC: Node 12094 has dup fanin 12072.
ABC: Node 12094 has dup fanin 12073.
ABC: Node 12094 has dup fanin 12072.
ABC: Node 12094 has dup fanin 12073.
ABC: Node 12103 has dup fanin 10927.
ABC: Node 12103 has dup fanin 10930.
ABC: Node 12103 has dup fanin 10927.
ABC: Node 12103 has dup fanin 10930.
ABC: Node 12105 has dup fanin 12102.
ABC: Node 12105 has dup fanin 12103.
ABC: Node 12105 has dup fanin 12102.
ABC: Node 12105 has dup fanin 12103.
ABC: Node 12108 has dup fanin 10929.
ABC: Node 12108 has dup fanin 10933.
ABC: Node 12108 has dup fanin 10929.
ABC: Node 12108 has dup fanin 10933.
ABC: Node 12114 has dup fanin 12104.
ABC: Node 12114 has dup fanin 12105.
ABC: Node 12114 has dup fanin 12104.
ABC: Node 12114 has dup fanin 12105.
ABC: Node 12123 has dup fanin 10608.
ABC: Node 12123 has dup fanin 10625.
ABC: Node 12123 has dup fanin 10608.
ABC: Node 12123 has dup fanin 10625.
ABC: Node 12124 has dup fanin 12122.
ABC: Node 12124 has dup fanin 12123.
ABC: Node 12124 has dup fanin 12122.
ABC: Node 12124 has dup fanin 12123.
ABC: Node 12127 has dup fanin 10624.
ABC: Node 12127 has dup fanin 10672.
ABC: Node 12127 has dup fanin 10624.
ABC: Node 12127 has dup fanin 10672.
ABC: Node 12133 has dup fanin 10871.
ABC: Node 12133 has dup fanin 12124.
ABC: Node 12133 has dup fanin 10871.
ABC: Node 12133 has dup fanin 12124.
ABC: Node 12142 has dup fanin 11304.
ABC: Node 12142 has dup fanin 11634.
ABC: Node 12142 has dup fanin 11304.
ABC: Node 12142 has dup fanin 11634.
ABC: Node 12159 has dup fanin 7766.
ABC: Node 12159 has dup fanin 12158.
ABC: Node 12159 has dup fanin 7766.
ABC: Node 12159 has dup fanin 12158.
ABC: Node 12167 has dup fanin 7633.
ABC: Node 12167 has dup fanin 12166.
ABC: Node 12167 has dup fanin 7633.
ABC: Node 12167 has dup fanin 12166.
ABC: Node 12171 has dup fanin 7228.
ABC: Node 12171 has dup fanin 12170.
ABC: Node 12171 has dup fanin 7228.
ABC: Node 12171 has dup fanin 12170.
ABC: Node 12175 has dup fanin 7092.
ABC: Node 12175 has dup fanin 12174.
ABC: Node 12175 has dup fanin 7092.
ABC: Node 12175 has dup fanin 12174.
ABC: Node 12234 has dup fanin 12175.
ABC: Node 12234 has dup fanin 12175.
ABC: Node 12318 has dup fanin 10380.
ABC: Node 12318 has dup fanin 10380.
ABC: Node 12328 has dup fanin 11353.
ABC: Node 12328 has dup fanin 11633.
ABC: Node 12328 has dup fanin 11353.
ABC: Node 12328 has dup fanin 11633.
ABC: Node 12406 has dup fanin 10380.
ABC: Node 12406 has dup fanin 10380.
ABC: Node 12414 has dup fanin 11393.
ABC: Node 12414 has dup fanin 11632.
ABC: Node 12414 has dup fanin 11393.
ABC: Node 12414 has dup fanin 11632.
ABC: Node 12430 has dup fanin 12175.
ABC: Node 12430 has dup fanin 12175.
ABC: Node 12465 has dup fanin 10380.
ABC: Node 12465 has dup fanin 10380.
ABC: Node 12478 has dup fanin 11624.
ABC: Node 12478 has dup fanin 12477.
ABC: Node 12478 has dup fanin 11624.
ABC: Node 12478 has dup fanin 12477.
ABC: Node 12526 has dup fanin 10380.
ABC: Node 12526 has dup fanin 10380.
ABC: Node 12534 has dup fanin 11614.
ABC: Node 12534 has dup fanin 11629.
ABC: Node 12534 has dup fanin 11614.
ABC: Node 12534 has dup fanin 11629.
ABC: Node 12576 has dup fanin 10380.
ABC: Node 12576 has dup fanin 10380.
ABC: Node 12588 has dup fanin 11612.
ABC: Node 12588 has dup fanin 12587.
ABC: Node 12588 has dup fanin 11612.
ABC: Node 12588 has dup fanin 12587.
ABC: Node 12630 has dup fanin 10380.
ABC: Node 12630 has dup fanin 10380.
ABC: Node 12683 has dup fanin 10380.
ABC: Node 12683 has dup fanin 10380.
ABC: Node 12695 has dup fanin 11608.
ABC: Node 12695 has dup fanin 12694.
ABC: Node 12695 has dup fanin 11608.
ABC: Node 12695 has dup fanin 12694.
ABC: Node 12734 has dup fanin 10380.
ABC: Node 12734 has dup fanin 10380.
ABC: Node 12742 has dup fanin 11568.
ABC: Node 12742 has dup fanin 11607.
ABC: Node 12742 has dup fanin 11568.
ABC: Node 12742 has dup fanin 11607.
ABC: Node 12778 has dup fanin 10380.
ABC: Node 12778 has dup fanin 10380.
ABC: Node 12789 has dup fanin 11575.
ABC: Node 12789 has dup fanin 11606.
ABC: Node 12789 has dup fanin 11575.
ABC: Node 12789 has dup fanin 11606.
ABC: Node 12830 has dup fanin 10380.
ABC: Node 12830 has dup fanin 10380.
ABC: Node 12838 has dup fanin 11602.
ABC: Node 12838 has dup fanin 11605.
ABC: Node 12838 has dup fanin 11602.
ABC: Node 12838 has dup fanin 11605.
ABC: Node 12877 has dup fanin 10380.
ABC: Node 12877 has dup fanin 10380.
ABC: Node 12888 has dup fanin 11597.
ABC: Node 12888 has dup fanin 11601.
ABC: Node 12888 has dup fanin 11597.
ABC: Node 12888 has dup fanin 11601.
ABC: Node 12927 has dup fanin 10380.
ABC: Node 12927 has dup fanin 10380.
ABC: Node 12936 has dup fanin 11582.
ABC: Node 12936 has dup fanin 12935.
ABC: Node 12936 has dup fanin 11582.
ABC: Node 12936 has dup fanin 12935.
ABC: Node 12972 has dup fanin 10380.
ABC: Node 12972 has dup fanin 10380.
ABC: Node 13021 has dup fanin 10380.
ABC: Node 13021 has dup fanin 10380.
ABC: Node 13092 has dup fanin 11255.
ABC: Node 13092 has dup fanin 11635.
ABC: Node 13092 has dup fanin 11255.
ABC: Node 13092 has dup fanin 11635.
ABC: Node 13108 has dup fanin 10380.
ABC: Node 13108 has dup fanin 10380.
ABC: Node 13148 has dup fanin 10380.
ABC: Node 13148 has dup fanin 10380.
ABC: Node 13188 has dup fanin 10380.
ABC: Node 13188 has dup fanin 10380.
ABC: Node 13232 has dup fanin 10380.
ABC: Node 13232 has dup fanin 10380.
ABC: Node 13277 has dup fanin 10380.
ABC: Node 13277 has dup fanin 10380.
ABC: Node 13318 has dup fanin 10380.
ABC: Node 13318 has dup fanin 10380.
ABC: Node 13359 has dup fanin 10380.
ABC: Node 13359 has dup fanin 10380.
ABC: Node 13402 has dup fanin 10380.
ABC: Node 13402 has dup fanin 10380.
ABC: Node 13444 has dup fanin 10380.
ABC: Node 13444 has dup fanin 10380.
ABC: Node 13483 has dup fanin 10380.
ABC: Node 13483 has dup fanin 10380.
ABC: Node 13517 has dup fanin 10380.
ABC: Node 13517 has dup fanin 10380.
ABC: Node 13680 has dup fanin 10380.
ABC: Node 13680 has dup fanin 10380.
ABC: Node 13727 has dup fanin 10380.
ABC: Node 13727 has dup fanin 10380.
ABC: Node 13756 has dup fanin 13754.
ABC: Node 13756 has dup fanin 13755.
ABC: Node 13756 has dup fanin 13754.
ABC: Node 13756 has dup fanin 13755.
ABC: Node 13757 has dup fanin 13753.
ABC: Node 13757 has dup fanin 13756.
ABC: Node 13757 has dup fanin 13753.
ABC: Node 13757 has dup fanin 13756.
ABC: Node 13764 has dup fanin 13750.
ABC: Node 13764 has dup fanin 13763.
ABC: Node 13764 has dup fanin 13750.
ABC: Node 13764 has dup fanin 13763.
ABC: Node 13814 has dup fanin 13729.
ABC: Node 13814 has dup fanin 13729.
ABC: Node 13815 has dup fanin 13729.
ABC: Node 13815 has dup fanin 13729.
ABC: Node 13816 has dup fanin 13729.
ABC: Node 13816 has dup fanin 13729.
ABC: Node 13817 has dup fanin 13729.
ABC: Node 13817 has dup fanin 13729.
ABC: Node 13818 has dup fanin 13729.
ABC: Node 13818 has dup fanin 13729.
ABC: Node 13819 has dup fanin 13729.
ABC: Node 13819 has dup fanin 13729.
ABC: Node 13820 has dup fanin 13729.
ABC: Node 13820 has dup fanin 13729.
ABC: Node 13855 has dup fanin 13729.
ABC: Node 13855 has dup fanin 13729.
ABC: Node 13873 has dup fanin 13871.
ABC: Node 13873 has dup fanin 13871.
ABC: Node 13874 has dup fanin 13871.
ABC: Node 13874 has dup fanin 13871.
ABC: Node 13875 has dup fanin 13871.
ABC: Node 13875 has dup fanin 13871.
ABC: Node 13876 has dup fanin 13871.
ABC: Node 13876 has dup fanin 13871.
ABC: Node 13877 has dup fanin 13871.
ABC: Node 13877 has dup fanin 13871.
ABC: Node 13878 has dup fanin 13871.
ABC: Node 13878 has dup fanin 13871.
ABC: Node 13879 has dup fanin 13871.
ABC: Node 13879 has dup fanin 13871.
ABC: Node 13914 has dup fanin 13871.
ABC: Node 13914 has dup fanin 13871.
ABC: Node 13931 has dup fanin 13929.
ABC: Node 13931 has dup fanin 13929.
ABC: Node 13932 has dup fanin 13929.
ABC: Node 13932 has dup fanin 13929.
ABC: Node 13933 has dup fanin 13929.
ABC: Node 13933 has dup fanin 13929.
ABC: Node 13934 has dup fanin 13929.
ABC: Node 13934 has dup fanin 13929.
ABC: Node 13935 has dup fanin 13929.
ABC: Node 13935 has dup fanin 13929.
ABC: Node 13936 has dup fanin 13929.
ABC: Node 13936 has dup fanin 13929.
ABC: Node 13937 has dup fanin 13929.
ABC: Node 13937 has dup fanin 13929.
ABC: Node 13972 has dup fanin 13929.
ABC: Node 13972 has dup fanin 13929.
ABC: Node 13989 has dup fanin 13987.
ABC: Node 13989 has dup fanin 13987.
ABC: Node 13990 has dup fanin 13987.
ABC: Node 13990 has dup fanin 13987.
ABC: Node 13991 has dup fanin 13987.
ABC: Node 13991 has dup fanin 13987.
ABC: Node 13992 has dup fanin 13987.
ABC: Node 13992 has dup fanin 13987.
ABC: Node 13993 has dup fanin 13987.
ABC: Node 13993 has dup fanin 13987.
ABC: Node 13994 has dup fanin 13987.
ABC: Node 13994 has dup fanin 13987.
ABC: Node 13995 has dup fanin 13987.
ABC: Node 13995 has dup fanin 13987.
ABC: Node 14030 has dup fanin 13987.
ABC: Node 14030 has dup fanin 13987.
ABC: Node 14047 has dup fanin 14045.
ABC: Node 14047 has dup fanin 14045.
ABC: Node 14048 has dup fanin 14045.
ABC: Node 14048 has dup fanin 14045.
ABC: Node 14049 has dup fanin 14045.
ABC: Node 14049 has dup fanin 14045.
ABC: Node 14050 has dup fanin 14045.
ABC: Node 14050 has dup fanin 14045.
ABC: Node 14051 has dup fanin 14045.
ABC: Node 14051 has dup fanin 14045.
ABC: Node 14052 has dup fanin 14045.
ABC: Node 14052 has dup fanin 14045.
ABC: Node 14053 has dup fanin 14045.
ABC: Node 14053 has dup fanin 14045.
ABC: Node 14088 has dup fanin 14045.
ABC: Node 14088 has dup fanin 14045.
ABC: Node 14105 has dup fanin 14103.
ABC: Node 14105 has dup fanin 14103.
ABC: Node 14106 has dup fanin 14103.
ABC: Node 14106 has dup fanin 14103.
ABC: Node 14107 has dup fanin 14103.
ABC: Node 14107 has dup fanin 14103.
ABC: Node 14108 has dup fanin 14103.
ABC: Node 14108 has dup fanin 14103.
ABC: Node 14109 has dup fanin 14103.
ABC: Node 14109 has dup fanin 14103.
ABC: Node 14110 has dup fanin 14103.
ABC: Node 14110 has dup fanin 14103.
ABC: Node 14111 has dup fanin 14103.
ABC: Node 14111 has dup fanin 14103.
ABC: Node 14146 has dup fanin 14103.
ABC: Node 14146 has dup fanin 14103.
ABC: Node 14163 has dup fanin 14161.
ABC: Node 14163 has dup fanin 14161.
ABC: Node 14164 has dup fanin 14161.
ABC: Node 14164 has dup fanin 14161.
ABC: Node 14165 has dup fanin 14161.
ABC: Node 14165 has dup fanin 14161.
ABC: Node 14166 has dup fanin 14161.
ABC: Node 14166 has dup fanin 14161.
ABC: Node 14167 has dup fanin 14161.
ABC: Node 14167 has dup fanin 14161.
ABC: Node 14168 has dup fanin 14161.
ABC: Node 14168 has dup fanin 14161.
ABC: Node 14169 has dup fanin 14161.
ABC: Node 14169 has dup fanin 14161.
ABC: Node 14204 has dup fanin 14161.
ABC: Node 14204 has dup fanin 14161.
ABC: Node 14221 has dup fanin 14219.
ABC: Node 14221 has dup fanin 14219.
ABC: Node 14222 has dup fanin 14219.
ABC: Node 14222 has dup fanin 14219.
ABC: Node 14223 has dup fanin 14219.
ABC: Node 14223 has dup fanin 14219.
ABC: Node 14224 has dup fanin 14219.
ABC: Node 14224 has dup fanin 14219.
ABC: Node 14225 has dup fanin 14219.
ABC: Node 14225 has dup fanin 14219.
ABC: Node 14226 has dup fanin 14219.
ABC: Node 14226 has dup fanin 14219.
ABC: Node 14227 has dup fanin 14219.
ABC: Node 14227 has dup fanin 14219.
ABC: Node 14262 has dup fanin 14219.
ABC: Node 14262 has dup fanin 14219.
ABC: Node 14279 has dup fanin 14277.
ABC: Node 14279 has dup fanin 14277.
ABC: Node 14280 has dup fanin 14277.
ABC: Node 14280 has dup fanin 14277.
ABC: Node 14281 has dup fanin 14277.
ABC: Node 14281 has dup fanin 14277.
ABC: Node 14282 has dup fanin 14277.
ABC: Node 14282 has dup fanin 14277.
ABC: Node 14283 has dup fanin 14277.
ABC: Node 14283 has dup fanin 14277.
ABC: Node 14284 has dup fanin 14277.
ABC: Node 14284 has dup fanin 14277.
ABC: Node 14285 has dup fanin 14277.
ABC: Node 14285 has dup fanin 14277.
ABC: Node 14320 has dup fanin 14277.
ABC: Node 14320 has dup fanin 14277.
ABC: Node 14337 has dup fanin 14335.
ABC: Node 14337 has dup fanin 14335.
ABC: Node 14338 has dup fanin 14335.
ABC: Node 14338 has dup fanin 14335.
ABC: Node 14339 has dup fanin 14335.
ABC: Node 14339 has dup fanin 14335.
ABC: Node 14340 has dup fanin 14335.
ABC: Node 14340 has dup fanin 14335.
ABC: Node 14341 has dup fanin 14335.
ABC: Node 14341 has dup fanin 14335.
ABC: Node 14342 has dup fanin 14335.
ABC: Node 14342 has dup fanin 14335.
ABC: Node 14343 has dup fanin 14335.
ABC: Node 14343 has dup fanin 14335.
ABC: Node 14378 has dup fanin 14335.
ABC: Node 14378 has dup fanin 14335.
ABC: Node 14395 has dup fanin 14393.
ABC: Node 14395 has dup fanin 14393.
ABC: Node 14396 has dup fanin 14393.
ABC: Node 14396 has dup fanin 14393.
ABC: Node 14397 has dup fanin 14393.
ABC: Node 14397 has dup fanin 14393.
ABC: Node 14398 has dup fanin 14393.
ABC: Node 14398 has dup fanin 14393.
ABC: Node 14399 has dup fanin 14393.
ABC: Node 14399 has dup fanin 14393.
ABC: Node 14400 has dup fanin 14393.
ABC: Node 14400 has dup fanin 14393.
ABC: Node 14401 has dup fanin 14393.
ABC: Node 14401 has dup fanin 14393.
ABC: Node 14436 has dup fanin 14393.
ABC: Node 14436 has dup fanin 14393.
ABC: Node 14453 has dup fanin 14451.
ABC: Node 14453 has dup fanin 14451.
ABC: Node 14454 has dup fanin 14451.
ABC: Node 14454 has dup fanin 14451.
ABC: Node 14455 has dup fanin 14451.
ABC: Node 14455 has dup fanin 14451.
ABC: Node 14456 has dup fanin 14451.
ABC: Node 14456 has dup fanin 14451.
ABC: Node 14457 has dup fanin 14451.
ABC: Node 14457 has dup fanin 14451.
ABC: Node 14458 has dup fanin 14451.
ABC: Node 14458 has dup fanin 14451.
ABC: Node 14459 has dup fanin 14451.
ABC: Node 14459 has dup fanin 14451.
ABC: Node 14494 has dup fanin 14451.
ABC: Node 14494 has dup fanin 14451.
ABC: Node 14511 has dup fanin 14509.
ABC: Node 14511 has dup fanin 14509.
ABC: Node 14512 has dup fanin 14509.
ABC: Node 14512 has dup fanin 14509.
ABC: Node 14513 has dup fanin 14509.
ABC: Node 14513 has dup fanin 14509.
ABC: Node 14514 has dup fanin 14509.
ABC: Node 14514 has dup fanin 14509.
ABC: Node 14515 has dup fanin 14509.
ABC: Node 14515 has dup fanin 14509.
ABC: Node 14516 has dup fanin 14509.
ABC: Node 14516 has dup fanin 14509.
ABC: Node 14517 has dup fanin 14509.
ABC: Node 14517 has dup fanin 14509.
ABC: Node 14552 has dup fanin 14509.
ABC: Node 14552 has dup fanin 14509.
ABC: Node 14569 has dup fanin 14567.
ABC: Node 14569 has dup fanin 14567.
ABC: Node 14570 has dup fanin 14567.
ABC: Node 14570 has dup fanin 14567.
ABC: Node 14571 has dup fanin 14567.
ABC: Node 14571 has dup fanin 14567.
ABC: Node 14572 has dup fanin 14567.
ABC: Node 14572 has dup fanin 14567.
ABC: Node 14573 has dup fanin 14567.
ABC: Node 14573 has dup fanin 14567.
ABC: Node 14574 has dup fanin 14567.
ABC: Node 14574 has dup fanin 14567.
ABC: Node 14575 has dup fanin 14567.
ABC: Node 14575 has dup fanin 14567.
ABC: Node 14610 has dup fanin 14567.
ABC: Node 14610 has dup fanin 14567.
ABC: Node 14627 has dup fanin 14625.
ABC: Node 14627 has dup fanin 14625.
ABC: Node 14628 has dup fanin 14625.
ABC: Node 14628 has dup fanin 14625.
ABC: Node 14629 has dup fanin 14625.
ABC: Node 14629 has dup fanin 14625.
ABC: Node 14630 has dup fanin 14625.
ABC: Node 14630 has dup fanin 14625.
ABC: Node 14631 has dup fanin 14625.
ABC: Node 14631 has dup fanin 14625.
ABC: Node 14632 has dup fanin 14625.
ABC: Node 14632 has dup fanin 14625.
ABC: Node 14633 has dup fanin 14625.
ABC: Node 14633 has dup fanin 14625.
ABC: Node 14668 has dup fanin 14625.
ABC: Node 14668 has dup fanin 14625.
ABC: Node 14686 has dup fanin 14684.
ABC: Node 14686 has dup fanin 14684.
ABC: Node 14687 has dup fanin 14684.
ABC: Node 14687 has dup fanin 14684.
ABC: Node 14688 has dup fanin 14684.
ABC: Node 14688 has dup fanin 14684.
ABC: Node 14689 has dup fanin 14684.
ABC: Node 14689 has dup fanin 14684.
ABC: Node 14690 has dup fanin 14684.
ABC: Node 14690 has dup fanin 14684.
ABC: Node 14691 has dup fanin 14684.
ABC: Node 14691 has dup fanin 14684.
ABC: Node 14692 has dup fanin 14684.
ABC: Node 14692 has dup fanin 14684.
ABC: Node 14727 has dup fanin 14684.
ABC: Node 14727 has dup fanin 14684.
ABC: Node 14744 has dup fanin 14742.
ABC: Node 14744 has dup fanin 14742.
ABC: Node 14745 has dup fanin 14742.
ABC: Node 14745 has dup fanin 14742.
ABC: Node 14746 has dup fanin 14742.
ABC: Node 14746 has dup fanin 14742.
ABC: Node 14747 has dup fanin 14742.
ABC: Node 14747 has dup fanin 14742.
ABC: Node 14748 has dup fanin 14742.
ABC: Node 14748 has dup fanin 14742.
ABC: Node 14749 has dup fanin 14742.
ABC: Node 14749 has dup fanin 14742.
ABC: Node 14750 has dup fanin 14742.
ABC: Node 14750 has dup fanin 14742.
ABC: Node 14785 has dup fanin 14742.
ABC: Node 14785 has dup fanin 14742.
ABC: Node 14802 has dup fanin 14800.
ABC: Node 14802 has dup fanin 14800.
ABC: Node 14803 has dup fanin 14800.
ABC: Node 14803 has dup fanin 14800.
ABC: Node 14804 has dup fanin 14800.
ABC: Node 14804 has dup fanin 14800.
ABC: Node 14805 has dup fanin 14800.
ABC: Node 14805 has dup fanin 14800.
ABC: Node 14806 has dup fanin 14800.
ABC: Node 14806 has dup fanin 14800.
ABC: Node 14807 has dup fanin 14800.
ABC: Node 14807 has dup fanin 14800.
ABC: Node 14808 has dup fanin 14800.
ABC: Node 14808 has dup fanin 14800.
ABC: Node 14843 has dup fanin 14800.
ABC: Node 14843 has dup fanin 14800.
ABC: Node 14860 has dup fanin 14858.
ABC: Node 14860 has dup fanin 14858.
ABC: Node 14861 has dup fanin 14858.
ABC: Node 14861 has dup fanin 14858.
ABC: Node 14862 has dup fanin 14858.
ABC: Node 14862 has dup fanin 14858.
ABC: Node 14863 has dup fanin 14858.
ABC: Node 14863 has dup fanin 14858.
ABC: Node 14864 has dup fanin 14858.
ABC: Node 14864 has dup fanin 14858.
ABC: Node 14865 has dup fanin 14858.
ABC: Node 14865 has dup fanin 14858.
ABC: Node 14866 has dup fanin 14858.
ABC: Node 14866 has dup fanin 14858.
ABC: Node 14901 has dup fanin 14858.
ABC: Node 14901 has dup fanin 14858.
ABC: Node 14918 has dup fanin 14916.
ABC: Node 14918 has dup fanin 14916.
ABC: Node 14919 has dup fanin 14916.
ABC: Node 14919 has dup fanin 14916.
ABC: Node 14920 has dup fanin 14916.
ABC: Node 14920 has dup fanin 14916.
ABC: Node 14921 has dup fanin 14916.
ABC: Node 14921 has dup fanin 14916.
ABC: Node 14922 has dup fanin 14916.
ABC: Node 14922 has dup fanin 14916.
ABC: Node 14923 has dup fanin 14916.
ABC: Node 14923 has dup fanin 14916.
ABC: Node 14924 has dup fanin 14916.
ABC: Node 14924 has dup fanin 14916.
ABC: Node 14959 has dup fanin 14916.
ABC: Node 14959 has dup fanin 14916.
ABC: Node 14976 has dup fanin 14974.
ABC: Node 14976 has dup fanin 14974.
ABC: Node 14977 has dup fanin 14974.
ABC: Node 14977 has dup fanin 14974.
ABC: Node 14978 has dup fanin 14974.
ABC: Node 14978 has dup fanin 14974.
ABC: Node 14979 has dup fanin 14974.
ABC: Node 14979 has dup fanin 14974.
ABC: Node 14980 has dup fanin 14974.
ABC: Node 14980 has dup fanin 14974.
ABC: Node 14981 has dup fanin 14974.
ABC: Node 14981 has dup fanin 14974.
ABC: Node 14982 has dup fanin 14974.
ABC: Node 14982 has dup fanin 14974.
ABC: Node 15017 has dup fanin 14974.
ABC: Node 15017 has dup fanin 14974.
ABC: Node 15034 has dup fanin 15032.
ABC: Node 15034 has dup fanin 15032.
ABC: Node 15035 has dup fanin 15032.
ABC: Node 15035 has dup fanin 15032.
ABC: Node 15036 has dup fanin 15032.
ABC: Node 15036 has dup fanin 15032.
ABC: Node 15037 has dup fanin 15032.
ABC: Node 15037 has dup fanin 15032.
ABC: Node 15038 has dup fanin 15032.
ABC: Node 15038 has dup fanin 15032.
ABC: Node 15039 has dup fanin 15032.
ABC: Node 15039 has dup fanin 15032.
ABC: Node 15040 has dup fanin 15032.
ABC: Node 15040 has dup fanin 15032.
ABC: Node 15075 has dup fanin 15032.
ABC: Node 15075 has dup fanin 15032.
ABC: Node 15092 has dup fanin 15090.
ABC: Node 15092 has dup fanin 15090.
ABC: Node 15093 has dup fanin 15090.
ABC: Node 15093 has dup fanin 15090.
ABC: Node 15094 has dup fanin 15090.
ABC: Node 15094 has dup fanin 15090.
ABC: Node 15095 has dup fanin 15090.
ABC: Node 15095 has dup fanin 15090.
ABC: Node 15096 has dup fanin 15090.
ABC: Node 15096 has dup fanin 15090.
ABC: Node 15097 has dup fanin 15090.
ABC: Node 15097 has dup fanin 15090.
ABC: Node 15098 has dup fanin 15090.
ABC: Node 15098 has dup fanin 15090.
ABC: Node 15133 has dup fanin 15090.
ABC: Node 15133 has dup fanin 15090.
ABC: Node 15150 has dup fanin 15148.
ABC: Node 15150 has dup fanin 15148.
ABC: Node 15151 has dup fanin 15148.
ABC: Node 15151 has dup fanin 15148.
ABC: Node 15152 has dup fanin 15148.
ABC: Node 15152 has dup fanin 15148.
ABC: Node 15153 has dup fanin 15148.
ABC: Node 15153 has dup fanin 15148.
ABC: Node 15154 has dup fanin 15148.
ABC: Node 15154 has dup fanin 15148.
ABC: Node 15155 has dup fanin 15148.
ABC: Node 15155 has dup fanin 15148.
ABC: Node 15156 has dup fanin 15148.
ABC: Node 15156 has dup fanin 15148.
ABC: Node 15191 has dup fanin 15148.
ABC: Node 15191 has dup fanin 15148.
ABC: Node 15208 has dup fanin 15206.
ABC: Node 15208 has dup fanin 15206.
ABC: Node 15209 has dup fanin 15206.
ABC: Node 15209 has dup fanin 15206.
ABC: Node 15210 has dup fanin 15206.
ABC: Node 15210 has dup fanin 15206.
ABC: Node 15211 has dup fanin 15206.
ABC: Node 15211 has dup fanin 15206.
ABC: Node 15212 has dup fanin 15206.
ABC: Node 15212 has dup fanin 15206.
ABC: Node 15213 has dup fanin 15206.
ABC: Node 15213 has dup fanin 15206.
ABC: Node 15214 has dup fanin 15206.
ABC: Node 15214 has dup fanin 15206.
ABC: Node 15249 has dup fanin 15206.
ABC: Node 15249 has dup fanin 15206.
ABC: Node 15266 has dup fanin 15264.
ABC: Node 15266 has dup fanin 15264.
ABC: Node 15267 has dup fanin 15264.
ABC: Node 15267 has dup fanin 15264.
ABC: Node 15268 has dup fanin 15264.
ABC: Node 15268 has dup fanin 15264.
ABC: Node 15269 has dup fanin 15264.
ABC: Node 15269 has dup fanin 15264.
ABC: Node 15270 has dup fanin 15264.
ABC: Node 15270 has dup fanin 15264.
ABC: Node 15271 has dup fanin 15264.
ABC: Node 15271 has dup fanin 15264.
ABC: Node 15272 has dup fanin 15264.
ABC: Node 15272 has dup fanin 15264.
ABC: Node 15307 has dup fanin 15264.
ABC: Node 15307 has dup fanin 15264.
ABC: Node 15324 has dup fanin 15322.
ABC: Node 15324 has dup fanin 15322.
ABC: Node 15325 has dup fanin 15322.
ABC: Node 15325 has dup fanin 15322.
ABC: Node 15326 has dup fanin 15322.
ABC: Node 15326 has dup fanin 15322.
ABC: Node 15327 has dup fanin 15322.
ABC: Node 15327 has dup fanin 15322.
ABC: Node 15328 has dup fanin 15322.
ABC: Node 15328 has dup fanin 15322.
ABC: Node 15329 has dup fanin 15322.
ABC: Node 15329 has dup fanin 15322.
ABC: Node 15330 has dup fanin 15322.
ABC: Node 15330 has dup fanin 15322.
ABC: Node 15365 has dup fanin 15322.
ABC: Node 15365 has dup fanin 15322.
ABC: Node 15382 has dup fanin 15380.
ABC: Node 15382 has dup fanin 15380.
ABC: Node 15383 has dup fanin 15380.
ABC: Node 15383 has dup fanin 15380.
ABC: Node 15384 has dup fanin 15380.
ABC: Node 15384 has dup fanin 15380.
ABC: Node 15385 has dup fanin 15380.
ABC: Node 15385 has dup fanin 15380.
ABC: Node 15386 has dup fanin 15380.
ABC: Node 15386 has dup fanin 15380.
ABC: Node 15387 has dup fanin 15380.
ABC: Node 15387 has dup fanin 15380.
ABC: Node 15388 has dup fanin 15380.
ABC: Node 15388 has dup fanin 15380.
ABC: Node 15423 has dup fanin 15380.
ABC: Node 15423 has dup fanin 15380.
ABC: Node 15440 has dup fanin 15438.
ABC: Node 15440 has dup fanin 15438.
ABC: Node 15441 has dup fanin 15438.
ABC: Node 15441 has dup fanin 15438.
ABC: Node 15442 has dup fanin 15438.
ABC: Node 15442 has dup fanin 15438.
ABC: Node 15443 has dup fanin 15438.
ABC: Node 15443 has dup fanin 15438.
ABC: Node 15444 has dup fanin 15438.
ABC: Node 15444 has dup fanin 15438.
ABC: Node 15445 has dup fanin 15438.
ABC: Node 15445 has dup fanin 15438.
ABC: Node 15446 has dup fanin 15438.
ABC: Node 15446 has dup fanin 15438.
ABC: Node 15481 has dup fanin 15438.
ABC: Node 15481 has dup fanin 15438.
ABC: Node 15504 has dup fanin 15497.
ABC: Node 15504 has dup fanin 15497.
ABC: Node 15506 has dup fanin 15497.
ABC: Node 15506 has dup fanin 15497.
ABC: Node 15584 has dup fanin 15552.
ABC: Node 15584 has dup fanin 15552.
ABC: Node 15689 has dup fanin 15546.
ABC: Node 15689 has dup fanin 15546.
ABC: Node 15697 has dup fanin 15546.
ABC: Node 15697 has dup fanin 15546.
ABC: Node 15705 has dup fanin 15546.
ABC: Node 15705 has dup fanin 15546.
ABC: Node 15713 has dup fanin 15546.
ABC: Node 15713 has dup fanin 15546.
ABC: Node 15721 has dup fanin 15546.
ABC: Node 15721 has dup fanin 15546.
ABC: Node 15729 has dup fanin 15546.
ABC: Node 15729 has dup fanin 15546.
ABC: Node 15737 has dup fanin 15546.
ABC: Node 15737 has dup fanin 15546.
ABC: Node 15745 has dup fanin 15546.
ABC: Node 15745 has dup fanin 15546.
ABC: Node 15753 has dup fanin 15546.
ABC: Node 15753 has dup fanin 15546.
ABC: Node 15761 has dup fanin 15546.
ABC: Node 15761 has dup fanin 15546.
ABC: Node 15769 has dup fanin 15546.
ABC: Node 15769 has dup fanin 15546.
ABC: Node 15777 has dup fanin 15546.
ABC: Node 15777 has dup fanin 15546.
ABC: Node 15785 has dup fanin 15546.
ABC: Node 15785 has dup fanin 15546.
ABC: Node 15793 has dup fanin 15546.
ABC: Node 15793 has dup fanin 15546.
ABC: Node 15801 has dup fanin 15546.
ABC: Node 15801 has dup fanin 15546.
ABC: Node 15809 has dup fanin 15546.
ABC: Node 15809 has dup fanin 15546.
ABC: Node 15817 has dup fanin 15546.
ABC: Node 15817 has dup fanin 15546.
ABC: Node 15825 has dup fanin 15546.
ABC: Node 15825 has dup fanin 15546.
ABC: Node 15833 has dup fanin 15546.
ABC: Node 15833 has dup fanin 15546.
ABC: Node 15841 has dup fanin 15546.
ABC: Node 15841 has dup fanin 15546.
ABC: Node 15849 has dup fanin 15546.
ABC: Node 15849 has dup fanin 15546.
ABC: Node 15857 has dup fanin 15546.
ABC: Node 15857 has dup fanin 15546.
ABC: Node 15865 has dup fanin 15546.
ABC: Node 15865 has dup fanin 15546.
ABC: Node 15873 has dup fanin 15546.
ABC: Node 15873 has dup fanin 15546.
ABC: Node 15881 has dup fanin 15546.
ABC: Node 15881 has dup fanin 15546.
ABC: Node 15889 has dup fanin 15546.
ABC: Node 15889 has dup fanin 15546.
ABC: Node 15897 has dup fanin 15546.
ABC: Node 15897 has dup fanin 15546.
ABC: Node 15905 has dup fanin 15546.
ABC: Node 15905 has dup fanin 15546.
ABC: Node 15913 has dup fanin 15546.
ABC: Node 15913 has dup fanin 15546.
ABC: Node 15920 has dup fanin 15919.
ABC: Node 15920 has dup fanin 15919.
ABC: Node 15921 has dup fanin 15919.
ABC: Node 15921 has dup fanin 15919.
ABC: Node 15922 has dup fanin 15919.
ABC: Node 15922 has dup fanin 15919.
ABC: Node 15923 has dup fanin 15919.
ABC: Node 15923 has dup fanin 15919.
ABC: Node 15924 has dup fanin 15919.
ABC: Node 15924 has dup fanin 15919.
ABC: Node 15925 has dup fanin 15919.
ABC: Node 15925 has dup fanin 15919.
ABC: Node 15926 has dup fanin 15919.
ABC: Node 15926 has dup fanin 15919.
ABC: Node 15927 has dup fanin 15919.
ABC: Node 15927 has dup fanin 15919.
ABC: Node 15928 has dup fanin 15919.
ABC: Node 15928 has dup fanin 15919.
ABC: Node 15929 has dup fanin 15919.
ABC: Node 15929 has dup fanin 15919.
ABC: Node 15930 has dup fanin 15919.
ABC: Node 15930 has dup fanin 15919.
ABC: Node 15931 has dup fanin 15919.
ABC: Node 15931 has dup fanin 15919.
ABC: Node 15932 has dup fanin 15919.
ABC: Node 15932 has dup fanin 15919.
ABC: Node 15933 has dup fanin 15919.
ABC: Node 15933 has dup fanin 15919.
ABC: Node 15934 has dup fanin 15919.
ABC: Node 15934 has dup fanin 15919.
ABC: Node 15935 has dup fanin 15919.
ABC: Node 15935 has dup fanin 15919.
ABC: Node 15936 has dup fanin 15919.
ABC: Node 15936 has dup fanin 15919.
ABC: Node 15937 has dup fanin 15919.
ABC: Node 15937 has dup fanin 15919.
ABC: Node 15939 has dup fanin 15938.
ABC: Node 15939 has dup fanin 15938.
ABC: Node 15940 has dup fanin 15938.
ABC: Node 15940 has dup fanin 15938.
ABC: Node 15941 has dup fanin 15938.
ABC: Node 15941 has dup fanin 15938.
ABC: Node 15942 has dup fanin 15938.
ABC: Node 15942 has dup fanin 15938.
ABC: Node 15943 has dup fanin 15938.
ABC: Node 15943 has dup fanin 15938.
ABC: Node 15944 has dup fanin 15938.
ABC: Node 15944 has dup fanin 15938.
ABC: Node 15945 has dup fanin 15938.
ABC: Node 15945 has dup fanin 15938.
ABC: Node 15946 has dup fanin 15938.
ABC: Node 15946 has dup fanin 15938.
ABC: Node 15947 has dup fanin 15938.
ABC: Node 15947 has dup fanin 15938.
ABC: Node 15948 has dup fanin 15938.
ABC: Node 15948 has dup fanin 15938.
ABC: Node 15949 has dup fanin 15938.
ABC: Node 15949 has dup fanin 15938.
ABC: Node 15950 has dup fanin 15938.
ABC: Node 15950 has dup fanin 15938.
ABC: Node 15951 has dup fanin 15938.
ABC: Node 15951 has dup fanin 15938.
ABC: Node 15952 has dup fanin 15938.
ABC: Node 15952 has dup fanin 15938.
ABC: Node 15953 has dup fanin 15938.
ABC: Node 15953 has dup fanin 15938.
ABC: Node 15954 has dup fanin 15938.
ABC: Node 15954 has dup fanin 15938.
ABC: Node 15955 has dup fanin 15938.
ABC: Node 15955 has dup fanin 15938.
ABC: Node 15956 has dup fanin 15938.
ABC: Node 15956 has dup fanin 15938.
ABC: Node 15957 has dup fanin 15938.
ABC: Node 15957 has dup fanin 15938.
ABC: Node 15958 has dup fanin 15938.
ABC: Node 15958 has dup fanin 15938.
ABC: Node 15959 has dup fanin 15938.
ABC: Node 15959 has dup fanin 15938.
ABC: Node 15960 has dup fanin 15938.
ABC: Node 15960 has dup fanin 15938.
ABC: Node 15961 has dup fanin 15938.
ABC: Node 15961 has dup fanin 15938.
ABC: Node 15962 has dup fanin 15938.
ABC: Node 15962 has dup fanin 15938.
ABC: Node 15963 has dup fanin 15938.
ABC: Node 15963 has dup fanin 15938.
ABC: Node 15964 has dup fanin 15938.
ABC: Node 15964 has dup fanin 15938.
ABC: Node 15965 has dup fanin 15938.
ABC: Node 15965 has dup fanin 15938.
ABC: Node 15966 has dup fanin 15938.
ABC: Node 15966 has dup fanin 15938.
ABC: Node 15967 has dup fanin 15938.
ABC: Node 15967 has dup fanin 15938.
ABC: Node 15968 has dup fanin 15938.
ABC: Node 15968 has dup fanin 15938.
ABC: Node 15969 has dup fanin 15938.
ABC: Node 15969 has dup fanin 15938.
ABC: Node 15970 has dup fanin 15938.
ABC: Node 15970 has dup fanin 15938.
ABC: Node 16005 has dup fanin 15999.
ABC: Node 16005 has dup fanin 15999.
ABC: Node 16010 has dup fanin 15999.
ABC: Node 16010 has dup fanin 15999.
ABC: Node 16016 has dup fanin 15999.
ABC: Node 16016 has dup fanin 15999.
ABC: Node 16021 has dup fanin 15999.
ABC: Node 16021 has dup fanin 15999.
ABC: Node 16041 has dup fanin 15999.
ABC: Node 16041 has dup fanin 15999.
ABC: Node 16048 has dup fanin 15999.
ABC: Node 16048 has dup fanin 15999.
ABC: Node 16055 has dup fanin 15999.
ABC: Node 16055 has dup fanin 15999.
ABC: Node 16060 has dup fanin 15999.
ABC: Node 16060 has dup fanin 15999.
ABC: Node 16067 has dup fanin 15999.
ABC: Node 16067 has dup fanin 15999.
ABC: Node 16074 has dup fanin 15999.
ABC: Node 16074 has dup fanin 15999.
ABC: Node 16075 has dup fanin 5500.
ABC: Node 16075 has dup fanin 16028.
ABC: Node 16075 has dup fanin 5500.
ABC: Node 16075 has dup fanin 16028.
ABC: Node 16080 has dup fanin 15999.
ABC: Node 16080 has dup fanin 15999.
ABC: Node 16087 has dup fanin 15999.
ABC: Node 16087 has dup fanin 15999.
ABC: Node 16092 has dup fanin 15999.
ABC: Node 16092 has dup fanin 15999.
ABC: Node 16097 has dup fanin 15999.
ABC: Node 16097 has dup fanin 15999.
ABC: Node 16103 has dup fanin 15999.
ABC: Node 16103 has dup fanin 15999.
ABC: Node 16110 has dup fanin 15999.
ABC: Node 16110 has dup fanin 15999.
ABC: Node 16117 has dup fanin 15999.
ABC: Node 16117 has dup fanin 15999.
ABC: Node 16124 has dup fanin 15999.
ABC: Node 16124 has dup fanin 15999.
ABC: Node 16137 has dup fanin 15999.
ABC: Node 16137 has dup fanin 15999.
ABC: Node 16144 has dup fanin 15999.
ABC: Node 16144 has dup fanin 15999.
ABC: Node 16151 has dup fanin 15999.
ABC: Node 16151 has dup fanin 15999.
ABC: Node 16158 has dup fanin 15999.
ABC: Node 16158 has dup fanin 15999.
ABC: Node 16165 has dup fanin 15999.
ABC: Node 16165 has dup fanin 15999.
ABC: Node 16175 has dup fanin 15999.
ABC: Node 16175 has dup fanin 15999.
ABC: Node 16185 has dup fanin 15999.
ABC: Node 16185 has dup fanin 15999.
ABC: Node 16186 has dup fanin 5515.
ABC: Node 16186 has dup fanin 16176.
ABC: Node 16186 has dup fanin 5515.
ABC: Node 16186 has dup fanin 16176.
ABC: Node 16192 has dup fanin 15999.
ABC: Node 16192 has dup fanin 15999.
ABC: Node 16199 has dup fanin 15999.
ABC: Node 16199 has dup fanin 15999.
ABC: Node 16206 has dup fanin 15999.
ABC: Node 16206 has dup fanin 15999.
ABC: Node 16214 has dup fanin 15999.
ABC: Node 16214 has dup fanin 15999.
ABC: Node 16221 has dup fanin 15999.
ABC: Node 16221 has dup fanin 15999.
ABC: Node 16226 has dup fanin 15999.
ABC: Node 16226 has dup fanin 15999.
ABC: Node 16293 has dup fanin 16292.
ABC: Node 16293 has dup fanin 16292.
ABC: Node 16294 has dup fanin 16292.
ABC: Node 16294 has dup fanin 16292.
ABC: Node 16295 has dup fanin 16292.
ABC: Node 16295 has dup fanin 16292.
ABC: Node 16296 has dup fanin 16292.
ABC: Node 16296 has dup fanin 16292.
ABC: Node 16297 has dup fanin 16292.
ABC: Node 16297 has dup fanin 16292.
ABC: Node 16298 has dup fanin 16292.
ABC: Node 16298 has dup fanin 16292.
ABC: Node 16299 has dup fanin 16292.
ABC: Node 16299 has dup fanin 16292.
ABC: Node 16300 has dup fanin 16292.
ABC: Node 16300 has dup fanin 16292.
ABC: Node 16301 has dup fanin 16292.
ABC: Node 16301 has dup fanin 16292.
ABC: Node 16302 has dup fanin 16292.
ABC: Node 16302 has dup fanin 16292.
ABC: Node 16303 has dup fanin 16292.
ABC: Node 16303 has dup fanin 16292.
ABC: Node 16304 has dup fanin 16292.
ABC: Node 16304 has dup fanin 16292.
ABC: Node 16305 has dup fanin 16292.
ABC: Node 16305 has dup fanin 16292.
ABC: Node 16306 has dup fanin 16292.
ABC: Node 16306 has dup fanin 16292.
ABC: Node 16307 has dup fanin 16292.
ABC: Node 16307 has dup fanin 16292.
ABC: Node 16308 has dup fanin 16292.
ABC: Node 16308 has dup fanin 16292.
ABC: Node 16309 has dup fanin 16292.
ABC: Node 16309 has dup fanin 16292.
ABC: Node 16310 has dup fanin 16292.
ABC: Node 16310 has dup fanin 16292.
ABC: Node 16311 has dup fanin 16292.
ABC: Node 16311 has dup fanin 16292.
ABC: Node 16312 has dup fanin 16292.
ABC: Node 16312 has dup fanin 16292.
ABC: Node 16313 has dup fanin 16292.
ABC: Node 16313 has dup fanin 16292.
ABC: Node 16314 has dup fanin 16292.
ABC: Node 16314 has dup fanin 16292.
ABC: Node 16315 has dup fanin 16292.
ABC: Node 16315 has dup fanin 16292.
ABC: Node 16316 has dup fanin 16292.
ABC: Node 16316 has dup fanin 16292.
ABC: Node 16317 has dup fanin 16292.
ABC: Node 16317 has dup fanin 16292.
ABC: Node 16318 has dup fanin 16292.
ABC: Node 16318 has dup fanin 16292.
ABC: Node 16319 has dup fanin 16292.
ABC: Node 16319 has dup fanin 16292.
ABC: Node 16320 has dup fanin 16292.
ABC: Node 16320 has dup fanin 16292.
ABC: Node 16321 has dup fanin 16292.
ABC: Node 16321 has dup fanin 16292.
ABC: Node 16322 has dup fanin 16292.
ABC: Node 16322 has dup fanin 16292.
ABC: Node 16323 has dup fanin 16292.
ABC: Node 16323 has dup fanin 16292.
ABC: Node 16324 has dup fanin 16292.
ABC: Node 16324 has dup fanin 16292.
ABC: Node 16330 has dup fanin 15552.
ABC: Node 16330 has dup fanin 15552.
ABC: Node 16335 has dup fanin 16334.
ABC: Node 16335 has dup fanin 16334.
ABC: Node 16336 has dup fanin 16334.
ABC: Node 16336 has dup fanin 16334.
ABC: Node 16337 has dup fanin 16334.
ABC: Node 16337 has dup fanin 16334.
ABC: Node 16338 has dup fanin 16334.
ABC: Node 16338 has dup fanin 16334.
ABC: Node 16339 has dup fanin 16334.
ABC: Node 16339 has dup fanin 16334.
ABC: Node 16340 has dup fanin 16334.
ABC: Node 16340 has dup fanin 16334.
ABC: Node 16341 has dup fanin 16334.
ABC: Node 16341 has dup fanin 16334.
ABC: Node 16342 has dup fanin 16334.
ABC: Node 16342 has dup fanin 16334.
ABC: Node 16343 has dup fanin 16334.
ABC: Node 16343 has dup fanin 16334.
ABC: Node 16344 has dup fanin 16334.
ABC: Node 16344 has dup fanin 16334.
ABC: Node 16345 has dup fanin 16334.
ABC: Node 16345 has dup fanin 16334.
ABC: Node 16346 has dup fanin 16334.
ABC: Node 16346 has dup fanin 16334.
ABC: Node 16347 has dup fanin 16334.
ABC: Node 16347 has dup fanin 16334.
ABC: Node 16348 has dup fanin 16334.
ABC: Node 16348 has dup fanin 16334.
ABC: Node 16349 has dup fanin 16334.
ABC: Node 16349 has dup fanin 16334.
ABC: Node 16350 has dup fanin 16334.
ABC: Node 16350 has dup fanin 16334.
ABC: Node 16351 has dup fanin 16334.
ABC: Node 16351 has dup fanin 16334.
ABC: Node 16352 has dup fanin 16334.
ABC: Node 16352 has dup fanin 16334.
ABC: Node 16353 has dup fanin 16334.
ABC: Node 16353 has dup fanin 16334.
ABC: Node 16354 has dup fanin 16334.
ABC: Node 16354 has dup fanin 16334.
ABC: Node 16355 has dup fanin 16334.
ABC: Node 16355 has dup fanin 16334.
ABC: Node 16356 has dup fanin 16334.
ABC: Node 16356 has dup fanin 16334.
ABC: Node 16357 has dup fanin 16334.
ABC: Node 16357 has dup fanin 16334.
ABC: Node 16358 has dup fanin 16334.
ABC: Node 16358 has dup fanin 16334.
ABC: Node 16359 has dup fanin 16334.
ABC: Node 16359 has dup fanin 16334.
ABC: Node 16360 has dup fanin 16334.
ABC: Node 16360 has dup fanin 16334.
ABC: Node 16361 has dup fanin 16334.
ABC: Node 16361 has dup fanin 16334.
ABC: Node 16362 has dup fanin 16334.
ABC: Node 16362 has dup fanin 16334.
ABC: Node 16363 has dup fanin 16334.
ABC: Node 16363 has dup fanin 16334.
ABC: Node 16364 has dup fanin 16334.
ABC: Node 16364 has dup fanin 16334.
ABC: Node 16365 has dup fanin 16334.
ABC: Node 16365 has dup fanin 16334.
ABC: Node 16366 has dup fanin 16334.
ABC: Node 16366 has dup fanin 16334.
ABC: Node 16389 has dup fanin 16374.
ABC: Node 16389 has dup fanin 16374.
ABC: Node 16401 has dup fanin 16399.
ABC: Node 16401 has dup fanin 16399.
ABC: Node 16515 has dup fanin 16500.
ABC: Node 16515 has dup fanin 16514.
ABC: Node 16515 has dup fanin 16500.
ABC: Node 16515 has dup fanin 16514.
ABC: Node 16518 has dup fanin 16494.
ABC: Node 16518 has dup fanin 16517.
ABC: Node 16518 has dup fanin 16494.
ABC: Node 16518 has dup fanin 16517.
ABC: Node 16524 has dup fanin 16493.
ABC: Node 16524 has dup fanin 16523.
ABC: Node 16524 has dup fanin 16493.
ABC: Node 16524 has dup fanin 16523.
ABC: Node 16527 has dup fanin 16492.
ABC: Node 16527 has dup fanin 16526.
ABC: Node 16527 has dup fanin 16492.
ABC: Node 16527 has dup fanin 16526.
ABC: Node 16535 has dup fanin 16533.
ABC: Node 16535 has dup fanin 16534.
ABC: Node 16535 has dup fanin 16533.
ABC: Node 16535 has dup fanin 16534.
ABC: Node 16536 has dup fanin 16532.
ABC: Node 16536 has dup fanin 16535.
ABC: Node 16536 has dup fanin 16532.
ABC: Node 16536 has dup fanin 16535.
ABC: Node 16538 has dup fanin 10623.
ABC: Node 16538 has dup fanin 16537.
ABC: Node 16538 has dup fanin 10623.
ABC: Node 16538 has dup fanin 16537.
ABC: Node 16543 has dup fanin 16499.
ABC: Node 16543 has dup fanin 16542.
ABC: Node 16543 has dup fanin 16499.
ABC: Node 16543 has dup fanin 16542.
ABC: Node 16546 has dup fanin 16541.
ABC: Node 16546 has dup fanin 16545.
ABC: Node 16546 has dup fanin 16541.
ABC: Node 16546 has dup fanin 16545.
ABC: Node 16549 has dup fanin 16505.
ABC: Node 16549 has dup fanin 16548.
ABC: Node 16549 has dup fanin 16505.
ABC: Node 16549 has dup fanin 16548.
ABC: Node 16550 has dup fanin 16547.
ABC: Node 16550 has dup fanin 16549.
ABC: Node 16550 has dup fanin 16547.
ABC: Node 16550 has dup fanin 16549.
ABC: Node 16551 has dup fanin 16546.
ABC: Node 16551 has dup fanin 16550.
ABC: Node 16551 has dup fanin 16546.
ABC: Node 16551 has dup fanin 16550.
ABC: Node 16552 has dup fanin 16536.
ABC: Node 16552 has dup fanin 16551.
ABC: Node 16552 has dup fanin 16536.
ABC: Node 16552 has dup fanin 16551.
ABC: Node 16871 has dup fanin 16572.
ABC: Node 16871 has dup fanin 16572.
ABC: Node 16906 has dup fanin 5301.
ABC: Node 16906 has dup fanin 16729.
ABC: Node 16906 has dup fanin 5301.
ABC: Node 16906 has dup fanin 16729.
ABC: Node 17025 has dup fanin 17024.
ABC: Node 17025 has dup fanin 17024.
ABC: Node 17160 has dup fanin 17158.
ABC: Node 17160 has dup fanin 17158.
ABC: Node 17161 has dup fanin 17158.
ABC: Node 17161 has dup fanin 17158.
ABC: Node 17186 has dup fanin 17185.
ABC: Node 17186 has dup fanin 17185.
ABC: Node 17187 has dup fanin 17185.
ABC: Node 17187 has dup fanin 17185.
ABC: Node 17188 has dup fanin 17185.
ABC: Node 17188 has dup fanin 17185.
ABC: Node 17189 has dup fanin 17185.
ABC: Node 17189 has dup fanin 17185.
ABC: Node 17190 has dup fanin 17185.
ABC: Node 17190 has dup fanin 17185.
ABC: Node 17193 has dup fanin 15508.
ABC: Node 17193 has dup fanin 15508.
ABC: Node 17195 has dup fanin 15508.
ABC: Node 17195 has dup fanin 15508.
ABC: Node 17739 has dup fanin 17735.
ABC: Node 17739 has dup fanin 17735.
ABC: Node 17743 has dup fanin 17735.
ABC: Node 17743 has dup fanin 17735.
ABC: Node 17751 has dup fanin 17750.
ABC: Node 17751 has dup fanin 17750.
ABC: Node 17752 has dup fanin 17749.
ABC: Node 17752 has dup fanin 17749.
ABC: Node 17754 has dup fanin 17749.
ABC: Node 17754 has dup fanin 17749.
ABC: Node 17756 has dup fanin 17749.
ABC: Node 17756 has dup fanin 17749.
ABC: Node 17758 has dup fanin 17749.
ABC: Node 17758 has dup fanin 17749.
ABC: Node 17760 has dup fanin 17749.
ABC: Node 17760 has dup fanin 17749.
ABC: Node 17762 has dup fanin 17749.
ABC: Node 17762 has dup fanin 17749.
ABC: Node 17764 has dup fanin 17749.
ABC: Node 17764 has dup fanin 17749.
ABC: Node 17766 has dup fanin 17749.
ABC: Node 17766 has dup fanin 17749.
ABC: Node 17768 has dup fanin 17749.
ABC: Node 17768 has dup fanin 17749.
ABC: Node 17770 has dup fanin 17749.
ABC: Node 17770 has dup fanin 17749.
ABC: Node 17772 has dup fanin 17749.
ABC: Node 17772 has dup fanin 17749.
ABC: Node 17774 has dup fanin 17749.
ABC: Node 17774 has dup fanin 17749.
ABC: Node 17776 has dup fanin 17749.
ABC: Node 17776 has dup fanin 17749.
ABC: Node 17780 has dup fanin 17749.
ABC: Node 17780 has dup fanin 17749.
ABC: Node 17796 has dup fanin 16956.
ABC: Node 17796 has dup fanin 16956.
ABC: Node 17886 has dup fanin 17884.
ABC: Node 17886 has dup fanin 17884.
ABC: Node 17887 has dup fanin 17884.
ABC: Node 17887 has dup fanin 17884.
ABC: Node 17888 has dup fanin 17884.
ABC: Node 17888 has dup fanin 17884.
ABC: Node 17889 has dup fanin 17884.
ABC: Node 17889 has dup fanin 17884.
ABC: Node 17890 has dup fanin 17884.
ABC: Node 17890 has dup fanin 17884.
ABC: Node 17891 has dup fanin 17884.
ABC: Node 17891 has dup fanin 17884.
ABC: Node 17892 has dup fanin 17884.
ABC: Node 17892 has dup fanin 17884.
ABC: Node 17927 has dup fanin 17884.
ABC: Node 17927 has dup fanin 17884.
ABC: Node 17971 has dup fanin 17970.
ABC: Node 17971 has dup fanin 17970.
ABC: Node 17972 has dup fanin 17970.
ABC: Node 17972 has dup fanin 17970.
ABC: Node 17973 has dup fanin 17970.
ABC: Node 17973 has dup fanin 17970.
ABC: Node 17974 has dup fanin 17970.
ABC: Node 17974 has dup fanin 17970.
ABC: Node 17975 has dup fanin 17970.
ABC: Node 17975 has dup fanin 17970.
ABC: Node 17976 has dup fanin 17970.
ABC: Node 17976 has dup fanin 17970.
ABC: Node 17977 has dup fanin 17970.
ABC: Node 17977 has dup fanin 17970.
ABC: Node 17978 has dup fanin 17970.
ABC: Node 17978 has dup fanin 17970.
ABC: Node 17979 has dup fanin 17970.
ABC: Node 17979 has dup fanin 17970.
ABC: Node 17980 has dup fanin 17970.
ABC: Node 17980 has dup fanin 17970.
ABC: Node 17981 has dup fanin 17970.
ABC: Node 17981 has dup fanin 17970.
ABC: Node 17982 has dup fanin 17970.
ABC: Node 17982 has dup fanin 17970.
ABC: Node 17983 has dup fanin 17970.
ABC: Node 17983 has dup fanin 17970.
ABC: Node 17984 has dup fanin 17970.
ABC: Node 17984 has dup fanin 17970.
ABC: Node 17985 has dup fanin 17970.
ABC: Node 17985 has dup fanin 17970.
ABC: Node 17986 has dup fanin 17970.
ABC: Node 17986 has dup fanin 17970.
ABC: Node 17987 has dup fanin 17970.
ABC: Node 17987 has dup fanin 17970.
ABC: Node 17988 has dup fanin 17970.
ABC: Node 17988 has dup fanin 17970.
ABC: Node 17989 has dup fanin 17970.
ABC: Node 17989 has dup fanin 17970.
ABC: Node 17990 has dup fanin 17970.
ABC: Node 17990 has dup fanin 17970.
ABC: Node 17991 has dup fanin 17970.
ABC: Node 17991 has dup fanin 17970.
ABC: Node 17992 has dup fanin 17970.
ABC: Node 17992 has dup fanin 17970.
ABC: Node 17993 has dup fanin 17970.
ABC: Node 17993 has dup fanin 17970.
ABC: Node 17994 has dup fanin 17970.
ABC: Node 17994 has dup fanin 17970.
ABC: Node 18007 has dup fanin 2008.
ABC: Node 18007 has dup fanin 2008.
ABC: Node 18016 has dup fanin 18015.
ABC: Node 18016 has dup fanin 18015.
ABC: Node 18024 has dup fanin 2008.
ABC: Node 18024 has dup fanin 2008.
ABC: Node 18025 has dup fanin 18015.
ABC: Node 18025 has dup fanin 18015.
ABC: Node 18033 has dup fanin 2008.
ABC: Node 18033 has dup fanin 2008.
ABC: Node 18034 has dup fanin 18015.
ABC: Node 18034 has dup fanin 18015.
ABC: Node 18043 has dup fanin 2008.
ABC: Node 18043 has dup fanin 2008.
ABC: Node 18044 has dup fanin 18015.
ABC: Node 18044 has dup fanin 18015.
ABC: Node 18053 has dup fanin 2008.
ABC: Node 18053 has dup fanin 2008.
ABC: Node 18054 has dup fanin 18015.
ABC: Node 18054 has dup fanin 18015.
ABC: Node 18062 has dup fanin 2008.
ABC: Node 18062 has dup fanin 2008.
ABC: Node 18063 has dup fanin 18015.
ABC: Node 18063 has dup fanin 18015.
ABC: Node 18072 has dup fanin 2008.
ABC: Node 18072 has dup fanin 2008.
ABC: Node 18073 has dup fanin 18015.
ABC: Node 18073 has dup fanin 18015.
ABC: Node 18081 has dup fanin 2008.
ABC: Node 18081 has dup fanin 2008.
ABC: Node 18082 has dup fanin 18015.
ABC: Node 18082 has dup fanin 18015.
ABC: Node 18090 has dup fanin 2008.
ABC: Node 18090 has dup fanin 2008.
ABC: Node 18091 has dup fanin 18015.
ABC: Node 18091 has dup fanin 18015.
ABC: Node 18099 has dup fanin 2008.
ABC: Node 18099 has dup fanin 2008.
ABC: Node 18100 has dup fanin 18015.
ABC: Node 18100 has dup fanin 18015.
ABC: Node 18108 has dup fanin 2008.
ABC: Node 18108 has dup fanin 2008.
ABC: Node 18109 has dup fanin 18015.
ABC: Node 18109 has dup fanin 18015.
ABC: Node 18118 has dup fanin 2008.
ABC: Node 18118 has dup fanin 2008.
ABC: Node 18119 has dup fanin 18015.
ABC: Node 18119 has dup fanin 18015.
ABC: Node 18127 has dup fanin 2008.
ABC: Node 18127 has dup fanin 2008.
ABC: Node 18128 has dup fanin 18015.
ABC: Node 18128 has dup fanin 18015.
ABC: Node 18136 has dup fanin 2008.
ABC: Node 18136 has dup fanin 2008.
ABC: Node 18137 has dup fanin 18015.
ABC: Node 18137 has dup fanin 18015.
ABC: Node 18145 has dup fanin 2008.
ABC: Node 18145 has dup fanin 2008.
ABC: Node 18146 has dup fanin 18015.
ABC: Node 18146 has dup fanin 18015.
ABC: Node 18155 has dup fanin 2008.
ABC: Node 18155 has dup fanin 2008.
ABC: Node 18156 has dup fanin 18015.
ABC: Node 18156 has dup fanin 18015.
ABC: Node 18164 has dup fanin 2008.
ABC: Node 18164 has dup fanin 2008.
ABC: Node 18165 has dup fanin 18015.
ABC: Node 18165 has dup fanin 18015.
ABC: Node 18173 has dup fanin 2008.
ABC: Node 18173 has dup fanin 2008.
ABC: Node 18174 has dup fanin 18015.
ABC: Node 18174 has dup fanin 18015.
ABC: Node 18182 has dup fanin 2008.
ABC: Node 18182 has dup fanin 2008.
ABC: Node 18183 has dup fanin 18015.
ABC: Node 18183 has dup fanin 18015.
ABC: Node 18191 has dup fanin 2008.
ABC: Node 18191 has dup fanin 2008.
ABC: Node 18192 has dup fanin 18015.
ABC: Node 18192 has dup fanin 18015.
ABC: Node 18201 has dup fanin 2008.
ABC: Node 18201 has dup fanin 2008.
ABC: Node 18202 has dup fanin 18015.
ABC: Node 18202 has dup fanin 18015.
ABC: Node 18210 has dup fanin 2008.
ABC: Node 18210 has dup fanin 2008.
ABC: Node 18211 has dup fanin 18015.
ABC: Node 18211 has dup fanin 18015.
ABC: Node 18219 has dup fanin 2008.
ABC: Node 18219 has dup fanin 2008.
ABC: Node 18220 has dup fanin 18015.
ABC: Node 18220 has dup fanin 18015.
ABC: Node 18228 has dup fanin 2008.
ABC: Node 18228 has dup fanin 2008.
ABC: Node 18229 has dup fanin 18015.
ABC: Node 18229 has dup fanin 18015.
ABC: Node 18235 has dup fanin 2008.
ABC: Node 18235 has dup fanin 2008.
ABC: Node 18236 has dup fanin 18015.
ABC: Node 18236 has dup fanin 18015.
ABC: Node 18243 has dup fanin 2008.
ABC: Node 18243 has dup fanin 2008.
ABC: Node 18244 has dup fanin 18015.
ABC: Node 18244 has dup fanin 18015.
ABC: Node 18251 has dup fanin 2008.
ABC: Node 18251 has dup fanin 2008.
ABC: Node 18252 has dup fanin 18015.
ABC: Node 18252 has dup fanin 18015.
ABC: Node 18258 has dup fanin 2008.
ABC: Node 18258 has dup fanin 2008.
ABC: Node 18259 has dup fanin 18015.
ABC: Node 18259 has dup fanin 18015.
ABC: Node 18269 has dup fanin 2008.
ABC: Node 18269 has dup fanin 2008.
ABC: Node 18270 has dup fanin 18015.
ABC: Node 18270 has dup fanin 18015.
ABC: Node 18277 has dup fanin 2008.
ABC: Node 18277 has dup fanin 2008.
ABC: Node 18278 has dup fanin 18015.
ABC: Node 18278 has dup fanin 18015.
ABC: Node 18496 has dup fanin 5448.
ABC: Node 18496 has dup fanin 18379.
ABC: Node 18496 has dup fanin 5448.
ABC: Node 18496 has dup fanin 18379.
ABC: Node 18504 has dup fanin 18372.
ABC: Node 18504 has dup fanin 18372.
ABC: Node 18513 has dup fanin 1607.
ABC: Node 18513 has dup fanin 1607.
ABC: Node 18523 has dup fanin 1607.
ABC: Node 18523 has dup fanin 1607.
ABC: Node 18527 has dup fanin 1607.
ABC: Node 18527 has dup fanin 1607.
ABC: Node 18533 has dup fanin 1607.
ABC: Node 18533 has dup fanin 1607.
ABC: Node 18538 has dup fanin 1607.
ABC: Node 18538 has dup fanin 1607.
ABC: Node 18543 has dup fanin 1607.
ABC: Node 18543 has dup fanin 1607.
ABC: Node 18552 has dup fanin 17964.
ABC: Node 18552 has dup fanin 17964.
ABC: Node 18569 has dup fanin 1607.
ABC: Node 18569 has dup fanin 1607.
ABC: Node 18573 has dup fanin 1607.
ABC: Node 18573 has dup fanin 1607.
ABC: Node 18582 has dup fanin 1607.
ABC: Node 18582 has dup fanin 1607.
ABC: Node 18593 has dup fanin 17964.
ABC: Node 18593 has dup fanin 17964.
ABC: Node 18611 has dup fanin 1607.
ABC: Node 18611 has dup fanin 1607.
ABC: Node 18616 has dup fanin 1607.
ABC: Node 18616 has dup fanin 1607.
ABC: Node 18623 has dup fanin 1607.
ABC: Node 18623 has dup fanin 1607.
ABC: Node 18641 has dup fanin 1607.
ABC: Node 18641 has dup fanin 1607.
ABC: Node 18676 has dup fanin 1607.
ABC: Node 18676 has dup fanin 1607.
ABC: Node 18908 has dup fanin 17964.
ABC: Node 18908 has dup fanin 17964.
ABC: Node 18952 has dup fanin 17964.
ABC: Node 18952 has dup fanin 17964.
ABC: Node 18970 has dup fanin 17964.
ABC: Node 18970 has dup fanin 17964.
ABC: Node 18976 has dup fanin 17964.
ABC: Node 18976 has dup fanin 17964.
ABC: Node 18983 has dup fanin 17964.
ABC: Node 18983 has dup fanin 17964.
ABC: Node 18988 has dup fanin 17965.
ABC: Node 18988 has dup fanin 17965.
ABC: Node 18989 has dup fanin 17965.
ABC: Node 18989 has dup fanin 17965.
ABC: Node 18990 has dup fanin 17965.
ABC: Node 18990 has dup fanin 17965.
ABC: Node 18991 has dup fanin 17964.
ABC: Node 18991 has dup fanin 17964.
ABC: Node 19000 has dup fanin 17965.
ABC: Node 19000 has dup fanin 17965.
ABC: Node 19003 has dup fanin 17965.
ABC: Node 19003 has dup fanin 17965.
ABC: Node 19008 has dup fanin 17965.
ABC: Node 19008 has dup fanin 17965.
ABC: Node 19027 has dup fanin 17964.
ABC: Node 19027 has dup fanin 17964.
ABC: Node 19238 has dup fanin 17965.
ABC: Node 19238 has dup fanin 17965.
ABC: Node 19239 has dup fanin 17965.
ABC: Node 19239 has dup fanin 17965.
ABC: Node 19240 has dup fanin 17965.
ABC: Node 19240 has dup fanin 17965.
ABC: Node 19241 has dup fanin 17965.
ABC: Node 19241 has dup fanin 17965.
ABC: Node 19242 has dup fanin 17965.
ABC: Node 19242 has dup fanin 17965.
ABC: Node 19243 has dup fanin 17965.
ABC: Node 19243 has dup fanin 17965.
ABC: Node 19244 has dup fanin 17965.
ABC: Node 19244 has dup fanin 17965.
ABC: Node 19245 has dup fanin 17965.
ABC: Node 19245 has dup fanin 17965.
ABC: Node 19246 has dup fanin 17965.
ABC: Node 19246 has dup fanin 17965.
ABC: Node 19247 has dup fanin 17965.
ABC: Node 19247 has dup fanin 17965.
ABC: Node 19248 has dup fanin 17965.
ABC: Node 19248 has dup fanin 17965.
ABC: Node 19249 has dup fanin 17965.
ABC: Node 19249 has dup fanin 17965.
ABC: Node 19250 has dup fanin 17965.
ABC: Node 19250 has dup fanin 17965.
ABC: Node 19251 has dup fanin 17965.
ABC: Node 19251 has dup fanin 17965.
ABC: Node 19252 has dup fanin 17965.
ABC: Node 19252 has dup fanin 17965.
ABC: Node 19253 has dup fanin 17965.
ABC: Node 19253 has dup fanin 17965.
ABC: Node 19254 has dup fanin 17965.
ABC: Node 19254 has dup fanin 17965.
ABC: Node 19255 has dup fanin 17965.
ABC: Node 19255 has dup fanin 17965.
ABC: Node 19256 has dup fanin 17965.
ABC: Node 19256 has dup fanin 17965.
ABC: Node 19257 has dup fanin 17965.
ABC: Node 19257 has dup fanin 17965.
ABC: Node 19258 has dup fanin 17965.
ABC: Node 19258 has dup fanin 17965.
ABC: Node 19259 has dup fanin 17965.
ABC: Node 19259 has dup fanin 17965.
ABC: Node 19260 has dup fanin 17965.
ABC: Node 19260 has dup fanin 17965.
ABC: Node 19261 has dup fanin 17965.
ABC: Node 19261 has dup fanin 17965.
ABC: Node 19262 has dup fanin 17965.
ABC: Node 19262 has dup fanin 17965.
ABC: Node 19263 has dup fanin 17965.
ABC: Node 19263 has dup fanin 17965.
ABC: Node 19264 has dup fanin 17965.
ABC: Node 19264 has dup fanin 17965.
ABC: Node 19265 has dup fanin 17965.
ABC: Node 19265 has dup fanin 17965.
ABC: Node 19266 has dup fanin 17965.
ABC: Node 19266 has dup fanin 17965.
ABC: Node 19267 has dup fanin 17965.
ABC: Node 19267 has dup fanin 17965.
ABC: Node 19268 has dup fanin 17964.
ABC: Node 19268 has dup fanin 17964.
ABC: Node 19269 has dup fanin 16957.
ABC: Node 19269 has dup fanin 16957.
ABC: Node 19271 has dup fanin 16957.
ABC: Node 19271 has dup fanin 16957.
ABC: Node 19277 has dup fanin 19276.
ABC: Node 19277 has dup fanin 19276.
ABC: Node 19278 has dup fanin 19276.
ABC: Node 19278 has dup fanin 19276.
ABC: Node 19438 has dup fanin 9952.
ABC: Node 19438 has dup fanin 9952.
ABC: Node 19447 has dup fanin 1225.
ABC: Node 19447 has dup fanin 16380.
ABC: Node 19447 has dup fanin 1225.
ABC: Node 19447 has dup fanin 16380.
ABC: Node 19467 has dup fanin 10380.
ABC: Node 19467 has dup fanin 10380.
ABC: + upsize -D 10000.0 
ABC: + dnsize -D 10000.0 
ABC: + stime -p 
ABC: WireLoad = "none"  Gates =  19259 ( 30.4 %)   Cap = 11.9 ff (  0.0 %)   Area =   218660.97 (100.0 %)   Delay = 16200.93 ps  (  0.9 %)               
ABC: Path  0 --    1499 : 0    3 pi                       A =   0.00  Df =  31.6  -20.2 ps  S =  50.8 ps  Cin =  0.0 ff  Cout =  27.6 ff  Cmax =   0.0 ff  G =    0  
ABC: Path  1 --   15488 : 1    3 sky130_fd_sc_hd__inv_8   A =  11.26  Df =  63.2   -8.9 ps  S =  35.8 ps  Cin = 17.7 ff  Cout =  17.2 ff  Cmax =1035.5 ff  G =   92  
ABC: Path  2 --   20774 : 3    3 sky130_fd_sc_hd__or3_4   A =  11.26  Df = 462.9 -271.6 ps  S =  85.9 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 531.9 ff  G =  657  
ABC: Path  3 --   20775 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df = 726.1 -399.3 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path  4 --   20776 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df = 980.4 -517.6 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path  5 --   20777 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =1234.8 -635.8 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path  6 --   20778 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =1489.1 -754.1 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path  7 --   20779 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =1743.5 -872.3 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path  8 --   20780 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =1997.8 -990.6 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path  9 --   20781 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =2252.2-1108.9 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 10 --   20782 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =2506.5-1227.1 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 11 --   20783 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =2760.9-1345.4 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 12 --   20784 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =3015.2-1463.6 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 13 --   20785 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =3269.6-1581.9 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 14 --   20786 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =3523.9-1700.1 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 15 --   20787 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =3778.3-1818.4 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 16 --   20788 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =4032.6-1936.7 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 17 --   20789 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =4287.0-2054.9 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 18 --   20790 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =4541.3-2173.2 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 19 --   20791 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =4795.7-2291.4 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 20 --   20792 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =5050.0-2409.7 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 21 --   20793 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =5304.4-2527.9 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 22 --   20794 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =5558.7-2646.2 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 23 --   20795 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =5813.1-2764.5 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 24 --   20796 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =6067.4-2882.7 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 25 --   20797 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =6321.8-3001.0 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 26 --   20798 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =6567.0-3120.0 ps  S =  57.0 ps  Cin =  2.4 ff  Cout =  12.0 ff  Cmax = 514.5 ff  G =  478  
ABC: Path 27 --   20799 : 2    2 sky130_fd_sc_hd__or2_4   A =   8.76  Df =6826.8-3238.1 ps  S =  77.2 ps  Cin =  2.4 ff  Cout =  21.0 ff  Cmax = 514.5 ff  G =  838  
ABC: Path 28 --   20800 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =7074.2-3354.3 ps  S =  57.1 ps  Cin =  2.4 ff  Cout =  12.0 ff  Cmax = 514.5 ff  G =  478  
ABC: Path 29 --   20801 : 2    2 sky130_fd_sc_hd__or2_4   A =   8.76  Df =7334.1-3472.4 ps  S =  77.2 ps  Cin =  2.4 ff  Cout =  21.0 ff  Cmax = 514.5 ff  G =  838  
ABC: Path 30 --   20802 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =7581.4-3588.7 ps  S =  57.1 ps  Cin =  2.4 ff  Cout =  12.0 ff  Cmax = 514.5 ff  G =  478  
ABC: Path 31 --   20803 : 2    1 sky130_fd_sc_hd__or2_4   A =   8.76  Df =7814.3-3710.6 ps  S =  50.4 ps  Cin =  2.4 ff  Cout =   7.3 ff  Cmax = 514.5 ff  G =  293  
ABC: Path 32 --   20804 : 1    3 sky130_fd_sc_hd__buf_8   A =  15.01  Df =7943.1-3734.9 ps  S =  55.3 ps  Cin =  7.0 ff  Cout =  26.0 ff  Cmax =5000.0 ff  G =  354  
ABC: Path 33 --   20805 : 2    2 sky130_fd_sc_hd__or2_4   A =   8.76  Df =8195.2-3844.1 ps  S =  77.2 ps  Cin =  2.4 ff  Cout =  21.0 ff  Cmax = 514.5 ff  G =  838  
ABC: Path 34 --   20806 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =8451.8-3959.5 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 35 --   20807 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =8706.1-4077.8 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 36 --   20808 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =8960.5-4196.1 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 37 --   20809 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =9214.8-4314.3 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 38 --   20810 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =9469.2-4432.6 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 39 --   20811 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =9723.5-4550.8 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 40 --   20812 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =9977.9-4669.1 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 41 --   20813 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =10232.2-4787.3 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 42 --   20814 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =10486.6-4905.6 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 43 --   20815 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =10740.9-5023.9 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 44 --   20816 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =10995.3-5142.1 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 45 --   20817 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =11249.6-5260.4 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 46 --   20818 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =11504.0-5378.6 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 47 --   20819 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =11758.3-5496.9 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 48 --   20820 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =12012.7-5615.1 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 49 --   20821 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =12267.0-5733.4 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 50 --   20822 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =12521.4-5851.7 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 51 --   20823 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =12775.7-5969.9 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 52 --   20824 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =13030.1-6088.2 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 53 --   20825 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =13284.4-6206.4 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 54 --   20826 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =13538.8-6324.7 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 55 --   20827 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =13793.1-6443.0 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 56 --   20828 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =14047.5-6561.2 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 57 --   20829 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =14301.8-6679.5 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 58 --   20830 : 2    3 sky130_fd_sc_hd__or2_4   A =   8.76  Df =14556.2-6797.7 ps  S =  63.7 ps  Cin =  2.4 ff  Cout =  16.3 ff  Cmax = 514.5 ff  G =  647  
ABC: Path 59 --   20831 : 2    1 sky130_fd_sc_hd__or2_4   A =   8.76  Df =14791.4-6917.6 ps  S =  50.4 ps  Cin =  2.4 ff  Cout =   7.3 ff  Cmax = 514.5 ff  G =  293  
ABC: Path 60 --   20832 : 1    2 sky130_fd_sc_hd__buf_8   A =  15.01  Df =14918.3-6943.6 ps  S =  50.7 ps  Cin =  7.0 ff  Cout =  22.9 ff  Cmax =5000.0 ff  G =  312  
ABC: Path 61 --   20833 : 1    2 sky130_fd_sc_hd__inv_8   A =  11.26  Df =14960.6-6958.0 ps  S =  28.5 ps  Cin = 17.7 ff  Cout =  11.6 ff  Cmax =1035.5 ff  G =   61  
ABC: Path 62 --   20834 : 2    3 sky130_fd_sc_hd__and2_4  A =   8.76  Df =15124.6-6958.7 ps  S =  78.9 ps  Cin =  2.4 ff  Cout =  20.8 ff  Cmax = 539.3 ff  G =  826  
ABC: Path 63 --   20835 : 2    2 sky130_fd_sc_hd__and2_4  A =   8.76  Df =15282.6-6953.2 ps  S =  55.0 ps  Cin =  2.4 ff  Cout =  11.6 ff  Cmax = 539.3 ff  G =  459  
ABC: Path 64 --   20836 : 2    3 sky130_fd_sc_hd__and2_4  A =   8.76  Df =15454.6-6952.7 ps  S =  78.8 ps  Cin =  2.4 ff  Cout =  20.8 ff  Cmax = 539.3 ff  G =  826  
ABC: Path 65 --   20837 : 2    2 sky130_fd_sc_hd__and2_4  A =   8.76  Df =15619.3-6949.5 ps  S =  61.9 ps  Cin =  2.4 ff  Cout =  14.3 ff  Cmax = 539.3 ff  G =  567  
ABC: Path 66 --   20841 : 4    1 sky130_fd_sc_hd__a211o_4 A =  17.52  Df =15912.5 -161.6 ps  S =  56.0 ps  Cin =  4.6 ff  Cout =   9.0 ff  Cmax = 559.4 ff  G =  184  
ABC: Path 67 --   20844 : 5    1 sky130_fd_sc_hd__a32oi_4 A =  27.53  Df =16200.9 -319.7 ps  S = 252.0 ps  Cin =  8.4 ff  Cout =  17.6 ff  Cmax = 251.8 ff  G =  211  
ABC: Start-point = pi1498 (\cs_registers_i.mcycle_counter_i.counter [1]).  End-point = po1436 ($auto$rtlil.cc:2290:MuxGate$85026).
ABC: + print_stats -m 
ABC: netlist                       : i/o = 2081/ 2033  lat =    0  nd = 19259  edge =  45313  area =218659.49  delay =76.00  lev = 76
ABC: + write_blif /tmp/yosys-abc-jPZNwR/output.blif 

34.1.2. Re-integrating ABC results.
ABC RESULTS:   sky130_fd_sc_hd__a2111o_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__a2111oi_4 cells:       54
ABC RESULTS:   sky130_fd_sc_hd__a211o_4 cells:      327
ABC RESULTS:   sky130_fd_sc_hd__a21bo_4 cells:      271
ABC RESULTS:   sky130_fd_sc_hd__a21boi_4 cells:       47
ABC RESULTS:   sky130_fd_sc_hd__a21o_4 cells:      403
ABC RESULTS:   sky130_fd_sc_hd__a21oi_4 cells:      130
ABC RESULTS:   sky130_fd_sc_hd__a22oi_4 cells:       42
ABC RESULTS:   sky130_fd_sc_hd__a2bb2o_4 cells:     1219
ABC RESULTS:   sky130_fd_sc_hd__a2bb2oi_4 cells:       24
ABC RESULTS:   sky130_fd_sc_hd__a32o_4 cells:      467
ABC RESULTS:   sky130_fd_sc_hd__a32oi_4 cells:      261
ABC RESULTS:   sky130_fd_sc_hd__and2_4 cells:      700
ABC RESULTS:   sky130_fd_sc_hd__and3_4 cells:      880
ABC RESULTS:   sky130_fd_sc_hd__and4_4 cells:       83
ABC RESULTS:   sky130_fd_sc_hd__buf_1 cells:     3902
ABC RESULTS:   sky130_fd_sc_hd__buf_8 cells:        4
ABC RESULTS:   sky130_fd_sc_hd__inv_8 cells:     1940
ABC RESULTS:   sky130_fd_sc_hd__nand2_4 cells:      218
ABC RESULTS:   sky130_fd_sc_hd__nand3_4 cells:        7
ABC RESULTS:   sky130_fd_sc_hd__nand4_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__nor2_4 cells:      304
ABC RESULTS:   sky130_fd_sc_hd__nor3_4 cells:      103
ABC RESULTS:   sky130_fd_sc_hd__nor4_4 cells:       35
ABC RESULTS:   sky130_fd_sc_hd__o21a_4 cells:      832
ABC RESULTS:   sky130_fd_sc_hd__o21ai_4 cells:     1021
ABC RESULTS:   sky130_fd_sc_hd__o22a_4 cells:     1087
ABC RESULTS:   sky130_fd_sc_hd__o32a_4 cells:        9
ABC RESULTS:   sky130_fd_sc_hd__o32ai_4 cells:        5
ABC RESULTS:   sky130_fd_sc_hd__o41a_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__or2_4 cells:     4238
ABC RESULTS:   sky130_fd_sc_hd__or3_4 cells:      363
ABC RESULTS:   sky130_fd_sc_hd__or4_4 cells:      273
ABC RESULTS:   sky130_fd_sc_hd__xnor2_4 cells:        2
ABC RESULTS:   sky130_fd_sc_hd__xor2_4 cells:        2
ABC RESULTS:        internal signals:    15154
ABC RESULTS:           input signals:     2081
ABC RESULTS:          output signals:     2033
Removing temp directory.

35. Executing SETUNDEF pass (replace undef values with defined constants).

36. Executing HILOMAP pass (mapping to constant drivers).

37. Executing SPLITNETS pass (splitting up multi-bit signals).

38. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \ibex_core..
Removed 141 unused cells and 19738 unused wires.
<suppressed ~1145 debug messages>

39. Executing INSBUF pass (insert buffer cells for connected wires).

40. Executing CHECK pass (checking for obvious problems).
checking module ibex_core..
Warning: Wire ibex_core.\instr_req_o is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [31] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [30] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [29] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [28] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [27] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [26] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [25] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [24] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [23] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [22] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [21] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [20] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [19] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [18] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [17] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [16] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [15] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [14] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [13] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [12] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [11] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [10] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [9] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [8] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [7] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [6] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [5] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [4] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [3] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [2] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [1] is used but has no driver.
Warning: Wire ibex_core.\instr_addr_o [0] is used but has no driver.
Warning: Wire ibex_core.\data_we_o is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [31] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [30] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [29] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [28] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [27] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [26] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [25] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [24] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [23] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [22] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [21] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [20] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [19] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [18] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [17] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [16] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [15] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [14] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [13] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [12] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [11] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [10] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [9] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [8] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [7] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [6] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [5] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [4] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [3] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [2] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [1] is used but has no driver.
Warning: Wire ibex_core.\data_wdata_o [0] is used but has no driver.
Warning: Wire ibex_core.\data_req_o is used but has no driver.
Warning: Wire ibex_core.\data_be_o [3] is used but has no driver.
Warning: Wire ibex_core.\data_be_o [2] is used but has no driver.
Warning: Wire ibex_core.\data_be_o [1] is used but has no driver.
Warning: Wire ibex_core.\data_be_o [0] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [31] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [30] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [29] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [28] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [27] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [26] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [25] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [24] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [23] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [22] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [21] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [20] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [19] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [18] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [17] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [16] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [15] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [14] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [13] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [12] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [11] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [10] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [9] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [8] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [7] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [6] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [5] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [4] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [3] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [2] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [1] is used but has no driver.
Warning: Wire ibex_core.\data_addr_o [0] is used but has no driver.
Warning: Wire ibex_core.\core_sleep_o is used but has no driver.
Warning: Wire ibex_core.\alert_minor_o is used but has no driver.
Warning: Wire ibex_core.\alert_major_o is used but has no driver.
Warning: Wire ibex_core.$abc$68755$flatten\core_clock_gate_i.$0\en_latch[0:0] is used but has no driver.
found and reported 107 problems.

41. Printing statistics.

=== ibex_core ===

   Number of wires:              21121
   Number of wire bits:          21355
   Number of public wires:        1979
   Number of public wire bits:    2213
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:              21197
     $_DLATCH_N_                     1
     sky130_fd_sc_hd__a2111o_4       2
     sky130_fd_sc_hd__a2111oi_4     54
     sky130_fd_sc_hd__a211o_4      327
     sky130_fd_sc_hd__a21bo_4      271
     sky130_fd_sc_hd__a21boi_4      47
     sky130_fd_sc_hd__a21o_4       403
     sky130_fd_sc_hd__a21oi_4      130
     sky130_fd_sc_hd__a22oi_4       42
     sky130_fd_sc_hd__a2bb2o_4    1219
     sky130_fd_sc_hd__a2bb2oi_4     24
     sky130_fd_sc_hd__a32o_4       467
     sky130_fd_sc_hd__a32oi_4      261
     sky130_fd_sc_hd__and2_4       700
     sky130_fd_sc_hd__and3_4       880
     sky130_fd_sc_hd__and4_4        83
     sky130_fd_sc_hd__buf_1       3902
     sky130_fd_sc_hd__buf_8          4
     sky130_fd_sc_hd__conb_1         6
     sky130_fd_sc_hd__dfrtp_4     1650
     sky130_fd_sc_hd__dfstp_4        8
     sky130_fd_sc_hd__dfxtp_4      273
     sky130_fd_sc_hd__inv_8       1940
     sky130_fd_sc_hd__nand2_4      218
     sky130_fd_sc_hd__nand3_4        7
     sky130_fd_sc_hd__nand4_4        2
     sky130_fd_sc_hd__nor2_4       304
     sky130_fd_sc_hd__nor3_4       103
     sky130_fd_sc_hd__nor4_4        35
     sky130_fd_sc_hd__o21a_4       832
     sky130_fd_sc_hd__o21ai_4     1021
     sky130_fd_sc_hd__o22a_4      1087
     sky130_fd_sc_hd__o32a_4         9
     sky130_fd_sc_hd__o32ai_4        5
     sky130_fd_sc_hd__o41a_4         2
     sky130_fd_sc_hd__or2_4       4238
     sky130_fd_sc_hd__or3_4        363
     sky130_fd_sc_hd__or4_4        273
     sky130_fd_sc_hd__xnor2_4        2
     sky130_fd_sc_hd__xor2_4         2

   Area for cell type $_DLATCH_N_ is unknown!

   Chip area for module '\ibex_core': 272896.729600

42. Executing Verilog backend.
Dumping module `\ibex_core'.

Warnings: 112 unique messages, 113 total
End of script. Logfile hash: ffdaefa12a, CPU: user 43.94s system 0.11s, MEM: 194.70 MB peak
Yosys 0.9+3621 (git sha1 84e9fa7, gcc 8.3.1 -fPIC -Os)
Time spent: 23% 2x abc (12 sec), 19% 37x opt_expr (10 sec), ...
